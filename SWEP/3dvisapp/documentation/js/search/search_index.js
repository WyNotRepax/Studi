var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiGeoData.html",[0,0.134,1,2.171]],["body/classes/ApiGeoData.html",[0,0.148,1,3.781,2,0.971,3,0.231,4,0.231,5,0.201,6,2.808,7,2.999,8,2.215,9,0.387,10,2.864,11,0.419,12,1.947,13,1.617,14,2.524,15,0.172,16,0.664,17,0.886,18,2.013,19,3.217,20,0.503,21,1.947,22,1.221,23,0.461,24,5.117,25,2.524,26,1.124,27,0.465,28,0.024,29,0.465,30,0.465,31,1.947,32,0.809,33,0.809,34,5.117,35,3.874,36,2.072,37,1.911,38,2.404,39,0.493,40,2.404,41,1.475,42,1.475,43,1.388,44,2.404,45,3.874,46,3.874,47,3.475,48,5.117,49,1.532,50,1.785,51,2.072,52,2.215,53,0.231,54,0.716,55,1.911,56,3.874,57,3.874,58,1.672,59,3.874,60,3.874,61,2.404,62,0.668,63,2.404,64,3.296,65,3.296,66,2.404,67,2.404,68,3.296,69,1.16,70,3.874,71,0.012,72,0.016,73,0.012]],["title/classes/ApiObject.html",[0,0.134,10,1.51]],["body/classes/ApiObject.html",[0,0.193,2,1.261,3,0.3,4,0.3,5,0.262,6,2.779,9,0.381,10,2.891,11,0.415,13,1.703,15,0.224,16,0.783,17,0.904,18,2.053,22,0.867,23,0.381,28,0.023,36,2.616,39,0.381,49,1.507,51,2.616,53,0.3,71,0.016,72,0.019,73,0.016,74,4.28,75,4.861,76,6.032,77,5.03]],["title/classes/ApiResponse.html",[0,0.134,78,2]],["body/classes/ApiResponse.html",[0,0.183,1,1.704,2,0.689,3,0.164,4,0.164,5,0.143,6,2.779,7,1.266,9,0.397,10,2.603,11,0.369,13,1.836,15,0.122,16,0.522,17,0.882,20,0.357,21,1.532,22,1.222,23,0.442,26,1.213,27,0.572,28,0.024,29,0.572,30,0.572,31,2.126,36,1.63,39,0.478,40,1.704,41,1.046,42,1.046,43,0.984,49,0.823,50,1.855,51,2.262,52,1.57,53,0.164,54,0.865,61,1.704,62,0.821,63,1.704,66,1.704,67,3.255,69,1.748,71,0.009,72,0.013,73,0.009,78,2.301,79,2.067,80,3.586,81,4.833,82,5.586,83,5.586,84,0.841,85,2.364,86,4.026,87,4.026,88,5.894,89,3.485,90,4.026,91,3.447,92,5.131,93,3.337,94,2.747,95,2.956,96,2.956,97,2.747,98,2.879,99,4.026,100,2.747,101,3.563,102,5.247,103,1.997,104,4.026,105,2.747,106,1.456,107,0.984,108,2.067,109,2.747,110,1.266,111,2.747,112,1.355,113,1.737,114,1.456,115,2.747,116,1.855,117,2.747,118,2.747,119,2.747,120,2.747,121,2.747,122,4.765,123,4.026,124,4.026,125,2.747,126,2.747,127,2.747,128,4.026,129,3.425,130,2.747,131,2.747,132,2.747,133,2.337,134,2.337,135,2.337,136,2.747,137,2.747,138,2.337,139,2.747,140,1.865,141,2.747,142,1.865,143,2.747,144,2.337,145,2.747]],["title/injectables/ApiService.html",[146,0.777,147,2.376]],["body/injectables/ApiService.html",[0,0.085,3,0.133,4,0.133,5,0.116,6,1.027,7,1.585,9,0.26,11,0.346,13,1.835,15,0.099,16,0.446,17,0.754,18,1.714,20,0.545,23,0.476,26,1.194,27,0.413,28,0.024,29,0.413,30,0.413,32,1.127,33,1.127,39,0.386,51,2.775,53,0.133,54,0.312,58,2.327,62,1.048,69,1.528,71,0.007,72,0.011,73,0.007,78,3.748,84,0.719,106,1.181,107,1.232,108,1.677,110,1.585,113,2.327,114,2.502,116,2.176,146,0.764,147,2.336,148,0.903,149,1.896,150,1.309,151,2.588,152,3.593,153,4.517,154,4.2,155,4.2,156,4.2,157,4.2,158,4.2,159,5.103,160,4.891,161,4.722,162,2.926,163,4.722,164,4.722,165,4.722,166,2.229,167,6.437,168,3.44,169,2.336,170,5.621,171,3.553,172,1.966,173,2.229,174,4.578,175,4.018,176,4.578,177,4.176,178,4.578,179,4.578,180,2.926,181,1.441,182,2.229,183,0.962,184,2.229,185,2.93,186,2.229,187,2.229,188,2.229,189,3.44,190,3.44,191,3.44,192,5.805,193,3.44,194,3.44,195,2.229,196,2.134,197,3.44,198,2.229,199,2.134,200,3.44,201,2.229,202,3.44,203,2.229,204,1.896,205,0.593,206,1.896,207,2.134,208,1.677,209,1.896,210,1.383,211,1.027,212,0.962,213,1.383,214,2.229,215,1.383,216,3.84,217,4.578,218,2.229,219,5.103,220,5.103,221,5.103,222,5.103,223,5.103,224,5.103,225,4.341,226,5.103,227,2.229,228,2.229,229,2.229,230,2.229,231,2.229,232,2.229,233,2.229,234,1.393]],["title/components/AppComponent.html",[235,1.253,236,1.612]],["body/components/AppComponent.html",[0,0.132,3,0.206,4,0.206,5,0.179,9,0.358,11,0.363,15,0.153,16,0.613,17,0.851,20,0.7,23,0.461,27,0.413,28,0.023,29,0.648,30,0.413,32,0.719,33,0.719,39,0.408,53,0.206,54,0.661,58,1.486,71,0.011,72,0.015,73,0.011,89,2.504,98,1.699,169,3.209,172,3.594,205,0.916,212,2.039,235,2.18,236,2.676,237,2.702,238,2.136,239,2.136,240,2.136,241,2.136,242,2.93,243,2.932,244,4.021,245,4.726,246,4.941,247,3.995,248,4.128,249,2.932,250,5.396,251,2.932,252,4.726,253,4.616,254,5.396,255,6.287,256,3.918,257,3.443,258,4.726,259,4.021,260,4.726,261,3.209,262,5.178,263,3.556,264,4.021,265,4.726,266,3.443,267,3.443,268,2.591,269,2.591,270,3.443,271,3.443,272,4.726,273,4.591,274,3.443,275,1.699,276,2.93,277,2.859,278,3.443,279,2.93,280,3.443,281,3.443,282,3.443,283,2.702,284,4.021,285,2.93,286,2.338,287,2.136,288,4.021,289,4.021,290,2.93,291,2.338,292,3.556,293,2.338,294,2.93,295,2.93,296,4.726,297,2.93,298,2.504,299,2.338,300,2.591,301,2.591,302,2.136,303,2.136,304,3.209,305,2.338,306,2.338,307,1.824,308,2.504,309,2.702,310,2.136,311,3.32,312,2.136,313,2.136,314,1.587,315,2.136,316,1.587,317,2.136,318,1.587,319,2.136,320,1.587,321,2.136,322,2.136,323,2.136]],["title/modules/AppModule.html",[324,2,325,2.376]],["body/modules/AppModule.html",[0,0.155,3,0.242,4,0.242,5,0.211,28,0.024,39,0.532,53,0.242,71,0.013,72,0.017,73,0.013,204,3.449,205,1.079,236,3.239,307,2.148,314,3.036,316,3.036,318,3.036,320,3.036,324,2.318,325,4.868,326,2.516,327,2.753,328,4.407,329,4.983,330,4.484,331,3.051,332,3.449,333,3.449,334,3.449,335,3.449,336,4.088,337,3.27,338,3.449,339,3.051,340,4.054,341,4.484,342,5.271,343,5.857,344,4.484,345,5.271,346,4.484,347,3.051,348,5.271,349,4.054,350,5.271,351,3.449,352,4.054,353,4.054,354,4.054,355,4.054,356,4.054,357,5.271,358,3.449,359,3.449,360,3.449,361,3.051,362,5.271,363,4.054]],["title/injectables/BasicObjectService.html",[146,0.777,364,2.633]],["body/injectables/BasicObjectService.html",[3,0.103,4,0.103,5,0.09,7,1.636,9,0.385,11,0.344,15,0.077,17,0.807,20,0.461,23,0.385,26,1.282,27,0.579,28,0.024,29,0.579,30,0.579,32,0.941,33,1.25,39,0.213,53,0.103,54,0.887,62,0.994,66,1.071,67,2.539,69,1.446,71,0.006,72,0.009,73,0.006,84,0.587,85,2.06,89,2.386,103,0.657,107,2.203,116,0.796,146,0.384,148,0.699,150,0.657,181,1.905,185,1.071,205,0.459,234,0.699,243,1.071,273,5.349,275,1.752,277,3.416,283,2.03,287,2.203,364,1.299,365,3.601,366,3.601,367,1.173,368,1.727,369,2.114,370,1.727,371,5.128,372,2.809,373,2.809,374,2.809,375,2.809,376,2.809,377,2.809,378,1.727,379,2.809,380,4.106,381,5.636,382,5.558,383,5.636,384,5.483,385,5.483,386,1.727,387,2.526,388,2.412,389,2.809,390,1.908,391,4.226,392,4.503,393,4.106,394,3.551,395,3.079,396,3.021,397,4.329,398,3.551,399,4.827,400,2.809,401,4.092,402,5.768,403,1.727,404,4.329,405,4.503,406,2.809,407,2.809,408,2.809,409,2.809,410,4.34,411,2.809,412,5.088,413,1.727,414,4.795,415,3.058,416,5.088,417,1.727,418,5.303,419,1.727,420,2.809,421,5.636,422,3.551,423,3.828,424,1.727,425,3.551,426,4.106,427,4.092,428,2.809,429,1.727,430,4.092,431,1.727,432,2.809,433,2.809,434,5.088,435,2.114,436,5.636,437,2.39,438,3.551,439,1.727,440,2.809,441,2.809,442,1.727,443,5.483,444,1.533,445,1.727,446,2.386,447,2.809,448,1.299,449,1.386,450,1.469,451,2.672,452,3.917,453,2.114,454,4.106,455,4.511,456,3.481,457,3.481,458,1.299,459,1.469,460,1.469,461,2.39,462,4.106,463,1.469,464,1.469,465,1.469,466,1.469,467,2.672,468,1.469,469,2.114,470,4.665,471,2.39,472,2.114,473,2.114,474,3.021,475,2.39,476,2.39,477,2.39,478,2.39,479,2.39,480,2.39,481,1.469,482,2.39,483,2.39,484,2.39,485,1.469,486,1.727,487,1.727,488,1.727,489,2.809,490,4.092,491,1.727,492,4.092,493,1.727,494,1.727,495,1.727,496,1.727,497,2.809,498,1.727,499,2.809,500,1.727,501,2.39,502,1.727,503,1.727,504,1.727,505,1.727,506,1.727,507,0.699,508,1.727,509,3.481,510,1.727,511,1.727,512,1.727,513,1.727,514,1.299,515,1.469,516,2.114,517,1.469,518,1.727,519,1.727,520,1.727,521,1.727,522,1.727,523,1.727,524,2.39,525,1.727,526,1.727,527,1.727,528,2.809,529,1.727,530,1.727,531,1.908,532,1.469,533,1.469]],["title/classes/ConfigData.html",[0,0.134,534,2.171]],["body/classes/ConfigData.html",[0,0.211,2,1.089,3,0.259,4,0.259,5,0.286,8,2.482,9,0.329,11,0.4,15,0.193,16,0.715,23,0.508,28,0.023,43,1.555,53,0.259,58,3.063,71,0.014,72,0.018,73,0.014,107,1.555,337,3.948,339,4.145,534,3.418,535,5.799,536,3.268,537,3.694,538,3.268,539,4.941,540,4.074,541,4.941,542,4.941,543,4.553,544,4.553,545,4.342,546,6.898,547,6.038,548,4.342,549,4.342,550,4.342,551,4.342,552,3.694]],["title/injectables/ConfigurationService.html",[146,0.777,553,2.633]],["body/injectables/ConfigurationService.html",[0,0.168,3,0.261,4,0.261,5,0.316,9,0.332,13,1.802,15,0.195,17,0.85,20,0.854,23,0.419,26,0.86,28,0.024,32,1.157,39,0.419,50,2.019,53,0.261,62,0.955,69,1.312,71,0.018,72,0.018,73,0.014,84,1.157,146,1.231,148,1.774,150,2.109,151,4.169,160,4.571,174,4.169,177,3.961,178,4.169,179,4.169,205,1.166,211,2.019,212,1.891,216,3.297,217,4.169,534,3.769,538,4.804,553,4.169,554,3.728,555,5.54,556,5.54,557,6.384,558,4.381,559,4.381,560,5.54,561,5.54,562,4.169,563,3.728,564,4.381,565,4.381,566,4.381,567,4.381]],["title/injectables/ControlService.html",[146,0.777,253,2.376]],["body/injectables/ControlService.html",[0,0.061,3,0.095,4,0.095,5,0.224,9,0.389,11,0.349,13,1.101,15,0.071,16,0.341,17,0.819,20,0.56,22,0.886,23,0.481,26,0.313,27,0.59,28,0.024,29,0.59,30,0.59,32,1.073,33,0.971,39,0.327,50,0.734,53,0.157,54,0.767,62,0.97,69,0.477,71,0.005,72,0.008,73,0.005,84,0.55,85,2.807,101,2.648,103,2.375,107,1.397,116,0.734,146,0.585,148,0.645,150,1.001,171,1.98,177,2.678,181,1.388,205,0.7,211,0.734,212,0.688,234,2.157,253,1.787,275,1.924,308,1.394,337,3.05,387,1.212,390,3.155,444,1.135,449,1.924,507,1.065,531,1.787,534,2.883,536,3.496,537,2.238,538,2.934,539,4.233,540,3.491,541,4.325,542,4.233,543,2.934,544,2.934,547,4.532,563,1.356,568,1.199,569,2.631,570,3.975,571,4.233,572,3.36,573,2.631,574,2.631,575,3.36,576,4.316,577,2.631,578,2.631,579,4.316,580,2.631,581,2.631,582,3.9,583,2.631,584,2.631,585,2.631,586,2.631,587,2.631,588,3.9,589,3.9,590,2.631,591,2.631,592,4.008,593,1.594,594,1.98,595,3.9,596,2.631,597,4.097,598,2.937,599,2.631,600,1.594,601,2.631,602,1.594,603,1.787,604,4.182,605,2.631,606,2.631,607,1.594,608,2.631,609,1.594,610,3.36,611,1.594,612,4.646,613,2.631,614,2.631,615,1.594,616,3.953,617,5.138,618,4.532,619,3.953,620,3.496,621,2.631,622,1.594,623,2.631,624,2.631,625,1.594,626,2.631,627,1.594,628,3.318,629,1.594,630,5.626,631,2.631,632,1.98,633,1.594,634,3.9,635,2.858,636,1.356,637,1.594,638,1.594,639,1.98,640,1.632,641,2.631,642,1.594,643,5.138,644,5.138,645,2.631,646,3.9,647,2.631,648,1.594,649,2.631,650,1.594,651,1.787,652,3.9,653,1.594,654,2.631,655,3.9,656,1.594,657,2.631,658,1.594,659,2.631,660,2.238,661,1.787,662,1.356,663,1.594,664,1.594,665,1.594,666,1.594,667,1.594,668,1.594,669,1.594,670,1.594,671,1.594,672,2.631,673,2.631,674,1.594,675,1.594,676,1.356,677,1.594,678,1.356,679,1.594,680,1.594,681,1.594,682,1.594,683,1.594,684,1.594,685,1.594,686,2.631,687,1.594,688,3.9,689,1.594,690,1.594,691,1.594,692,1.594,693,1.594,694,1.594,695,1.594,696,1.594,697,1.594,698,1.594,699,3.36,700,3.9,701,5.747,702,1.361,703,4.915,704,1.356,705,3.36,706,1.594,707,2.631,708,1.594,709,3.36,710,1.594,711,1.594,712,1.594,713,3.36,714,1.594,715,3.36,716,1.594,717,3.36,718,1.594,719,3.36,720,1.594,721,3.36,722,1.594,723,3.36,724,1.594,725,1.594,726,1.594,727,1.594,728,1.594,729,3.36,730,5.747,731,2.631,732,1.594,733,1.594,734,1.594,735,2.631,736,1.594,737,2.238]],["title/classes/Coordinate.html",[0,0.134,738,2.376]],["body/classes/Coordinate.html",[0,0.164,2,1.072,3,0.255,4,0.255,5,0.222,9,0.413,11,0.39,15,0.19,16,0.708,17,0.935,18,2.123,20,0.555,22,0.94,23,0.455,27,0.513,28,0.024,29,0.513,30,0.513,53,0.255,54,0.598,71,0.014,72,0.017,73,0.014,93,3.117,181,2.008,387,2.513,444,2.592,702,2.432,738,4.612,739,3.636,740,4.274,741,4.055,742,3.736,743,5.453,744,3.703,745,5.453,746,4.146,747,5.453,748,5.453,749,4.274,750,6.326,751,6.326,752,5.453,753,4.274,754,4.274,755,4.274,756,4.274]],["title/injectables/DataService.html",[146,0.777,757,2]],["body/injectables/DataService.html",[0,0.128,3,0.2,4,0.2,5,0.174,11,0.399,13,1.5,15,0.149,16,0.601,17,0.972,18,2.209,20,0.434,23,0.512,26,1.278,27,0.401,28,0.024,29,0.401,30,0.401,32,1.198,33,1.198,39,0.5,50,1.541,53,0.2,62,0.576,71,0.011,72,0.015,73,0.011,84,0.968,85,2.815,93,3.723,103,1.763,106,2.454,107,1.198,108,2.517,110,2.134,112,3.212,113,1.999,114,1.772,129,2.845,146,1.029,147,4.231,148,1.354,175,5.301,196,4.04,199,3.964,205,0.89,210,2.075,211,1.541,212,1.443,215,2.075,757,2.648,758,2.845,759,5.736,760,3.345,761,4.632,762,3.345,763,4.195,764,3.345,765,3.345,766,4.975,767,6.512,768,3.345,769,3.345,770,3.345,771,3.345,772,3.345,773,3.345,774,3.345,775,3.345,776,1.912,777,2.075,778,1.772,779,2.517,780,2.271,781,2.517,782,2.075,783,2.517,784,3.345,785,3.345,786,3.345,787,3.345,788,2.517,789,3.345,790,3.345,791,3.345,792,3.345,793,3.345,794,3.345,795,3.345,796,3.345,797,3.345,798,3.345,799,3.345,800,3.345,801,3.345,802,3.345]],["title/components/DetailComponent.html",[235,1.253,314,1.612]],["body/components/DetailComponent.html",[0,0.106,3,0.165,4,0.165,5,0.143,6,1.272,9,0.306,11,0.36,13,1.748,15,0.123,16,0.524,17,0.783,20,0.62,22,0.823,23,0.443,27,0.331,28,0.024,29,0.573,30,0.331,36,1.118,39,0.478,49,0.826,50,1.272,53,0.165,54,0.565,62,0.476,71,0.009,72,0.013,73,0.009,84,0.844,85,1.118,98,1.361,103,1.537,107,0.988,110,2.578,112,2.594,113,2.606,114,2.531,116,1.272,140,2.743,142,1.874,150,2.299,172,3.199,176,3.039,183,2.269,196,1.712,199,2.506,205,0.734,235,1.711,236,1.272,237,2.309,238,1.712,239,1.712,240,1.712,241,1.712,247,3.747,248,3.747,249,2.506,251,2.506,256,3.67,268,2.076,269,2.076,275,1.361,277,1.462,283,1.577,284,2.348,286,1.874,290,2.348,291,1.874,292,3.039,293,1.874,294,2.348,295,2.348,298,1.462,299,1.874,302,1.712,303,2.964,304,3.244,305,1.874,306,1.874,307,1.462,308,2.14,309,2.309,310,1.712,311,3.006,312,1.712,313,1.712,314,2.423,315,1.712,316,1.272,317,1.712,318,1.272,319,1.712,320,1.272,321,1.712,322,1.712,323,1.712,415,1.874,435,2.076,444,1.191,446,3.098,540,1.712,640,2.506,702,1.636,757,3.54,763,4.124,776,1.577,777,1.712,781,2.076,782,1.712,783,2.076,788,2.076,803,2.348,804,4.039,805,3.436,806,4.039,807,4.473,808,4.777,809,4.039,810,4.064,811,4.064,812,6.039,813,2.348,814,4.039,815,2.309,816,3.436,817,3.436,818,3.8,819,2.759,820,4.039,821,2.759,822,2.759,823,2.759,824,2.076,825,2.348,826,2.348,827,4.777,828,4.064,829,4.064,830,2.062,831,2.348,832,4.064,833,2.348,834,2.348,835,2.348,836,2.348,837,3.436,838,3.436,839,3.436,840,2.348,841,2.759,842,3.436,843,3.436,844,3.436,845,3.436,846,2.743,847,3.436,848,4.473,849,3.436,850,3.436,851,3.436,852,3.436,853,2.076,854,2.348,855,2.348,856,2.348,857,2.348,858,2.348,859,1.874,860,2.076,861,2.076,862,2.076,863,1.874,864,2.076,865,2.759,866,4.777,867,2.348,868,2.348,869,2.076]],["title/classes/Feature.html",[0,0.134,870,2.376]],["body/classes/Feature.html",[0,0.226,2,1.028,3,0.245,4,0.245,5,0.213,9,0.402,11,0.385,12,2.021,15,0.183,16,0.689,17,0.871,18,1.979,20,0.532,21,2.021,22,1.233,23,0.402,25,2.62,26,1.222,27,0.492,28,0.024,29,0.492,30,0.492,31,2.242,39,0.488,40,2.545,41,1.561,42,1.561,43,1.469,49,1.229,53,0.245,54,0.743,62,0.707,63,2.545,65,3.49,66,2.545,67,3.295,69,1.591,71,0.013,72,0.017,73,0.013,80,3.087,387,1.89,704,3.49,870,4.781,871,3.087,872,3.473,873,5.311,874,3.295,875,3.087,876,2.545,877,4.519,878,2.345,879,4.102,880,4.102,881,4.102,882,3.49,883,3.49,884,3.49,885,4.102,886,3.49,887,4.102]],["title/classes/FeatureCollection.html",[0,0.134,44,2.171]],["body/classes/FeatureCollection.html",[0,0.161,2,1.051,3,0.25,4,0.25,5,0.218,7,2.482,9,0.408,11,0.419,12,2.05,13,1.184,14,2.657,15,0.187,16,0.699,17,0.909,18,2.065,19,3.116,20,0.544,21,2.05,22,1.21,23,0.475,25,2.657,26,0.823,27,0.503,28,0.023,29,0.503,30,0.503,31,2.05,32,0.876,33,0.876,37,2.069,39,0.475,41,1.596,42,1.596,43,1.502,44,4.125,47,3.658,49,1.256,50,1.932,53,0.25,54,0.586,55,2.069,68,4.583,71,0.013,72,0.017,73,0.013,870,4.592,888,5.344,889,3.568,890,6.281,891,6.497,892,5.387,893,4.193,894,4.193,895,4.193,896,4.193,897,4.193,898,4.193,899,4.193]],["title/classes/GeoData.html",[0,0.134,19,1.612]],["body/classes/GeoData.html",[0,0.194,2,1.266,3,0.301,4,0.301,5,0.263,7,2.327,8,2.887,9,0.382,11,0.415,13,1.426,15,0.225,16,0.785,17,0.905,18,2.057,19,3.208,23,0.382,28,0.023,39,0.382,47,4.395,49,1.513,53,0.301,71,0.016,72,0.019,73,0.016,75,4.87,900,4.55,901,5.144,902,5.051]],["title/interfaces/GeoDataProvider.html",[152,2,207,2.171]],["body/interfaces/GeoDataProvider.html",[3,0.287,4,0.287,5,0.25,9,0.444,11,0.287,13,1.863,15,0.214,19,2.706,22,1.012,23,0.364,27,0.578,28,0.023,29,0.578,30,0.578,39,0.364,51,1.949,53,0.287,54,0.673,62,0.829,71,0.015,72,0.019,73,0.015,78,2.751,84,1.227,107,2.363,152,3.623,162,4.996,177,4.094,180,4.996,181,1.789,183,2.848,206,4.094,207,3.643,208,4.419,562,4.419,903,3.621,904,4.094,905,5.872,906,5.872,907,4.812,908,4.966]],["title/classes/Geometry.html",[0,0.134,872,1.726]],["body/classes/Geometry.html",[0,0.197,2,1.29,3,0.307,4,0.307,5,0.268,9,0.39,11,0.417,15,0.229,16,0.794,23,0.39,28,0.023,39,0.39,49,1.542,53,0.307,71,0.016,72,0.02,73,0.016,75,4.909,872,3.4,874,4.048,901,5.202,909,4.379,910,6.115,911,5.147]],["title/interfaces/HasUid.html",[152,2,778,1.854]],["body/interfaces/HasUid.html",[3,0.305,4,0.305,5,0.266,9,0.387,15,0.228,22,1.05,23,0.387,28,0.023,39,0.387,53,0.305,62,0.881,71,0.016,72,0.019,73,0.016,84,1.273,152,3.719,778,3.228,779,4.584,830,3.044,903,3.849,912,4.351,913,6.092,914,4.574,915,5.114,916,6.092,917,3.473]],["title/components/HoverComponent.html",[235,1.253,316,1.612]],["body/components/HoverComponent.html",[0,0.09,3,0.14,4,0.14,5,0.122,6,1.079,9,0.328,11,0.374,13,1.665,15,0.104,16,0.464,17,0.73,20,0.562,22,0.747,23,0.416,27,0.429,28,0.024,29,0.582,30,0.429,36,0.948,39,0.467,49,0.701,50,1.079,53,0.14,54,0.606,62,0.616,69,1.07,71,0.007,72,0.011,73,0.007,84,0.746,85,0.948,98,1.155,107,0.839,110,2.405,112,2.391,113,2.469,114,2.295,140,2.426,142,1.59,150,1.986,181,1.009,183,2.091,196,1.453,199,2.217,205,0.623,235,1.869,236,1.079,237,2.042,238,1.453,239,1.453,240,1.453,241,1.453,244,1.992,247,3.549,248,3.549,249,2.217,251,2.217,256,3.524,261,1.59,263,1.762,264,3.04,268,1.762,269,1.762,275,3.136,276,3.04,277,1.893,279,3.04,283,2.476,285,3.04,286,2.426,287,1.453,288,4.44,289,4.44,291,1.59,293,1.59,297,1.992,298,2.295,299,2.941,300,1.762,301,1.762,302,1.453,303,3.007,304,3.735,305,2.941,306,1.59,307,1.241,308,1.893,309,2.042,310,1.453,311,2.77,312,1.453,313,1.453,314,1.079,315,1.453,316,2.233,317,1.453,318,1.079,319,1.453,320,1.079,321,1.453,322,1.453,323,1.453,369,2.688,396,3.04,414,1.992,415,3.291,423,1.762,435,3.259,437,1.992,444,1.011,446,3.266,540,3.007,639,4.438,640,3.007,702,1.447,741,2.688,742,2.476,744,2.941,757,3.371,763,3.992,776,1.339,777,1.453,781,1.762,782,1.453,783,1.762,788,1.762,810,3.685,811,3.685,813,1.992,815,2.042,816,3.04,817,3.04,818,2.941,824,1.762,825,1.992,826,1.992,828,3.685,829,3.685,830,1.869,831,1.992,832,3.685,833,1.992,834,1.992,835,1.992,836,1.992,837,3.04,838,3.04,839,3.04,840,1.992,842,3.04,843,3.04,844,3.04,845,3.04,846,2.426,847,3.04,848,4.123,849,3.04,850,3.04,851,3.04,852,3.04,853,2.688,860,1.762,861,2.688,862,1.762,863,1.59,864,1.762,867,1.992,868,1.992,869,1.762,918,1.992,919,3.573,920,4.332,921,3.573,922,3.573,923,3.573,924,3.573,925,2.342,926,3.04,927,2.342,928,2.342,929,2.342,930,2.342,931,4.332,932,1.992,933,1.992,934,2.342,935,2.342,936,2.342,937,4.332,938,2.342,939,2.342,940,2.342,941,2.342,942,4.332,943,2.342,944,2.342,945,2.342,946,2.342,947,2.342,948,3.573,949,3.573,950,2.342,951,2.342,952,3.573,953,3.573,954,2.342,955,2.342,956,2.342,957,2.342,958,4.846,959,3.573,960,1.59,961,2.342,962,3.573,963,2.342,964,2.342,965,2.342,966,2.342,967,2.342,968,2.342,969,2.342,970,2.342,971,2.342,972,1.992,973,2.342,974,2.342,975,2.342,976,2.342,977,2.342]],["title/injectables/LightService.html",[146,0.777,978,2.633]],["body/injectables/LightService.html",[0,0.131,3,0.205,4,0.205,5,0.178,9,0.357,11,0.346,15,0.153,17,0.811,20,0.789,23,0.357,26,1.056,27,0.412,28,0.024,29,0.412,30,0.412,32,1.125,33,0.716,39,0.357,53,0.281,54,0.916,62,0.812,66,2.127,67,3.34,69,1.027,71,0.011,72,0.015,73,0.011,84,0.984,146,1.047,148,1.389,150,1.794,181,1.959,205,0.912,211,1.58,212,1.48,283,3.474,388,2.328,390,3.2,393,4.009,395,3.546,426,4.009,444,2.034,449,2.324,507,1.389,509,4.581,531,3.2,598,2.694,632,3.546,702,2.348,741,3.77,742,3.589,960,2.328,978,3.546,979,2.58,980,4.712,981,7.2,982,4.712,983,3.429,984,3.429,985,5.472,986,6.551,987,5.342,988,5.797,989,5.797,990,3.429,991,4.712,992,6.279,993,4.264,994,6.279,995,4.712,996,4.712,997,4.712,998,4.712,999,4.712,1000,3.429,1001,3.429,1002,3.429,1003,3.429,1004,3.429,1005,3.429,1006,3.429,1007,3.429,1008,3.429,1009,3.429,1010,3.429,1011,3.429,1012,3.429,1013,3.429,1014,3.429,1015,3.429,1016,2.917,1017,2.917,1018,2.917,1019,2.917]],["title/classes/MapOverlay.html",[0,0.134,106,1.854]],["body/classes/MapOverlay.html",[0,0.102,1,2.441,2,0.668,3,0.159,4,0.159,5,0.138,7,1.813,9,0.354,10,2.577,11,0.408,12,1.498,13,1.864,14,1.941,15,0.119,16,0.511,17,0.976,18,2.193,19,1.813,20,0.346,21,1.498,22,1.126,23,0.5,26,1.014,27,0.472,28,0.024,29,0.717,30,0.472,31,1.498,32,1.152,33,1.248,36,1.594,37,1.314,38,1.652,39,0.464,41,1.014,42,1.014,43,0.954,49,0.798,50,1.227,51,1.895,52,1.522,53,0.159,54,0.55,55,1.314,58,2.491,62,0.678,71,0.009,72,0.013,73,0.009,78,1.522,84,0.822,85,2.535,91,2.249,103,1.781,106,2.739,107,1.676,116,1.813,144,3.348,151,2.961,174,2.961,181,1.459,183,2.38,207,3.582,209,2.266,210,4.097,234,1.079,283,3.414,308,2.085,387,1.813,446,3.164,524,3.348,562,2.961,763,3.422,766,3.521,776,1.522,777,1.652,908,5.17,993,2.672,1020,2.266,1021,5.515,1022,4.68,1023,5.56,1024,5.169,1025,3.935,1026,3.935,1027,2.663,1028,3.935,1029,2.663,1030,3.935,1031,3.348,1032,2.663,1033,3.935,1034,3.981,1035,2.663,1036,2.663,1037,2.663,1038,5.169,1039,3.935,1040,2.663,1041,2.663,1042,2.663,1043,3.935,1044,5.169,1045,3.935,1046,2.663,1047,2.266,1048,2.266,1049,2.663,1050,1.809,1051,1.809,1052,2.004,1053,2.004,1054,2.663,1055,2.663,1056,2.663,1057,2.663,1058,3.935,1059,2.663,1060,2.663]],["title/injectables/MapdataService.html",[146,0.777,1061,2.633]],["body/injectables/MapdataService.html",[0,0.073,3,0.113,4,0.181,5,0.099,9,0.381,11,0.347,15,0.084,16,0.393,17,0.857,20,0.613,23,0.47,26,1.037,27,0.567,28,0.024,29,0.567,30,0.567,39,0.381,53,0.113,54,0.792,61,2.681,62,1.057,69,1.415,71,0.006,72,0.01,73,0.006,84,0.633,85,2.757,103,1.917,107,2.348,146,0.673,148,0.768,150,1.153,153,3.421,160,2.847,177,2.681,178,2.28,179,2.28,181,1.599,205,0.505,211,0.874,212,0.819,216,1.427,217,1.427,234,0.768,243,2.681,287,3.28,298,1.005,309,2.701,337,1.177,371,4.824,388,2.058,390,3.421,410,3.252,444,0.819,446,1.005,448,3.252,449,1.495,458,4.462,501,2.578,507,1.227,514,3.252,516,1.427,570,4.529,571,4.261,592,1.427,594,2.28,597,3.208,598,2.47,603,2.058,604,4.498,620,2.28,628,2.578,632,3.79,661,3.729,676,1.614,702,1.532,742,1.084,746,3.941,815,1.732,863,2.935,1061,2.28,1062,1.614,1063,3.03,1064,5.037,1065,3.03,1066,3.03,1067,3.03,1068,3.03,1069,3.03,1070,3.03,1071,3.03,1072,3.03,1073,4.322,1074,4.322,1075,3.03,1076,4.322,1077,3.03,1078,3.03,1079,3.03,1080,3.03,1081,3.03,1082,3.677,1083,1.897,1084,3.677,1085,1.897,1086,3.03,1087,4.322,1088,4.322,1089,1.897,1090,6.037,1091,1.897,1092,3.677,1093,4.322,1094,4.322,1095,3.03,1096,1.897,1097,1.897,1098,4.94,1099,4.322,1100,3.252,1101,1.897,1102,1.897,1103,1.897,1104,3.03,1105,3.03,1106,3.03,1107,1.897,1108,1.897,1109,3.784,1110,1.897,1111,1.897,1112,2.578,1113,3.03,1114,4.724,1115,1.897,1116,2.578,1117,3.784,1118,1.897,1119,3.03,1120,3.03,1121,3.677,1122,1.897,1123,5.037,1124,1.897,1125,3.03,1126,1.897,1127,1.897,1128,1.897,1129,1.897,1130,1.897,1131,1.897,1132,1.897,1133,1.897,1134,3.03,1135,3.03,1136,1.897,1137,1.897,1138,1.897,1139,3.03,1140,1.897,1141,1.897,1142,3.03,1143,3.03,1144,3.03,1145,1.897,1146,1.897,1147,1.897,1148,1.897,1149,1.897,1150,1.897,1151,3.03,1152,1.897,1153,1.897,1154,1.897,1155,1.897,1156,1.897,1157,1.897,1158,1.897,1159,1.897,1160,1.897,1161,1.897,1162,1.897,1163,1.897,1164,3.219,1165,1.897,1166,1.897,1167,1.897,1168,1.897,1169,1.897,1170,6.352,1171,1.897,1172,3.979,1173,1.897,1174,1.897,1175,1.897,1176,1.897,1177,1.897,1178,1.897,1179,1.897,1180,1.897,1181,1.897,1182,1.897,1183,1.897,1184,1.897,1185,1.897,1186,1.897,1187,1.897,1188,1.897,1189,1.897,1190,1.897,1191,1.897,1192,1.897,1193,1.897,1194,1.897,1195,1.897,1196,1.897,1197,1.897,1198,3.784,1199,1.897,1200,1.897,1201,4.724,1202,1.897,1203,1.897,1204,1.897,1205,3.03,1206,1.897,1207,1.897]],["title/modules/MaterialModule.html",[324,2,336,2.171]],["body/modules/MaterialModule.html",[0,0.184,3,0.287,4,0.287,5,0.25,28,0.024,39,0.527,53,0.287,71,0.015,72,0.019,73,0.015,205,1.281,235,1.724,324,2.751,326,2.986,328,3.621,331,3.621,336,3.643,341,4.094,344,4.996,391,3.268,452,3.268,815,2.751,818,3.268,1208,3.621,1209,5.872,1210,4.094,1211,4.996,1212,4.812,1213,4.996,1214,4.812,1215,4.812,1216,4.996,1217,4.812,1218,4.996,1219,4.812,1220,4.996,1221,4.812,1222,4.094,1223,4.094,1224,4.769]],["title/components/MenuComponent.html",[235,1.253,318,1.612]],["body/components/MenuComponent.html",[0,0.104,3,0.162,4,0.162,5,0.141,9,0.301,11,0.331,15,0.12,16,0.517,17,0.983,20,0.613,23,0.476,27,0.325,28,0.024,29,0.567,30,0.325,32,1.088,33,1.088,39,0.301,53,0.162,54,0.379,62,0.898,71,0.009,72,0.013,73,0.009,84,0.832,89,3.263,98,1.336,103,2.344,169,2.705,172,2.277,185,2.471,196,3.233,199,3.603,205,0.72,215,1.68,234,2.494,235,1.989,236,1.248,237,2.277,238,1.68,239,1.68,240,1.68,241,1.68,247,3.725,248,3.725,249,2.471,251,2.471,259,3.389,261,4.183,262,4.433,263,2.997,277,1.435,286,1.839,298,1.435,299,1.839,302,1.68,303,2.932,304,3.209,305,1.839,306,1.839,307,1.435,308,2.11,309,2.277,310,1.68,311,2.978,312,1.68,313,1.68,314,1.248,315,1.68,316,1.248,317,1.68,318,2.401,319,1.68,320,1.248,321,1.68,322,1.68,323,1.68,444,1.168,507,1.096,536,2.997,661,4.183,853,2.037,854,2.303,855,2.303,856,2.303,857,2.303,858,2.303,859,1.839,860,2.037,861,2.037,862,2.037,863,1.839,864,2.037,1225,2.303,1226,3.983,1227,4.725,1228,3.983,1229,4.725,1230,4.725,1231,4.725,1232,4.725,1233,5.21,1234,5.21,1235,5.21,1236,5.21,1237,2.303,1238,4.517,1239,3.983,1240,3.389,1241,2.708,1242,6.159,1243,6.159,1244,6.776,1245,5.21,1246,2.708,1247,2.708,1248,5.807,1249,2.708,1250,3.983,1251,2.708,1252,2.708,1253,2.708,1254,2.303,1255,2.037,1256,2.303,1257,2.708,1258,2.708,1259,2.708,1260,2.708,1261,2.708,1262,2.708,1263,2.708,1264,2.708,1265,2.708,1266,2.708,1267,2.708,1268,2.708,1269,3.983,1270,3.983,1271,3.983,1272,3.983,1273,3.983,1274,3.983,1275,5.21,1276,5.21,1277,3.983,1278,3.983,1279,3.983,1280,3.983,1281,3.983,1282,3.983,1283,3.983,1284,2.708]],["title/classes/MetaListing.html",[0,0.134,96,2.171]],["body/classes/MetaListing.html",[0,0.182,2,0.869,3,0.207,4,0.207,5,0.18,9,0.359,11,0.385,12,2.061,13,1.723,15,0.241,16,0.616,20,0.45,21,2.061,22,1.214,23,0.497,27,0.416,28,0.024,29,0.416,30,0.416,31,2.061,32,0.724,33,0.724,39,0.262,41,1.32,42,1.32,43,1.242,53,0.283,54,0.664,58,2.049,71,0.011,72,0.015,73,0.011,81,4.719,91,3.096,93,1.982,95,3.36,96,3.909,98,2.671,116,1.598,181,1.989,185,2.946,234,1.923,387,2.496,859,3.955,1285,2.609,1286,4.956,1287,5.489,1288,4.608,1289,5.489,1290,5.191,1291,5.191,1292,4.608,1293,4.381,1294,4.749,1295,3.468,1296,3.468,1297,4.04,1298,3.573,1299,3.468,1300,3.468,1301,3.468,1302,4.04,1303,4.04,1304,3.468,1305,4.04,1306,2.95,1307,4.04,1308,4.04,1309,2.95,1310,2.95,1311,2.95,1312,2.95,1313,2.95,1314,2.95,1315,2.95,1316,2.95,1317,2.95,1318,2.95]],["title/classes/MetaSingle.html",[0,0.134,95,2.171]],["body/classes/MetaSingle.html",[0,0.192,2,0.94,3,0.224,4,0.224,5,0.195,9,0.379,11,0.299,12,2.145,13,1.698,15,0.223,16,0.65,20,0.487,21,2.145,22,1.229,23,0.427,27,0.45,28,0.024,29,0.45,30,0.45,31,2.145,32,0.783,33,0.783,39,0.284,41,1.427,42,1.427,43,1.343,53,0.299,54,0.7,58,1.618,71,0.012,72,0.016,73,0.012,81,4.646,91,3.222,93,2.144,95,4,96,3.497,98,2.78,116,2.307,181,1.973,185,2.326,234,1.519,387,2.597,859,3.4,1285,2.822,1286,4.259,1287,4.795,1288,3.19,1289,5.6,1290,4.259,1291,4.259,1292,3.19,1293,4.47,1297,3.19,1298,2.822,1302,3.19,1303,3.19,1305,3.19,1306,4.259,1307,4.259,1308,4.259,1309,3.19,1310,3.19,1311,3.19,1312,3.19,1313,3.19,1314,3.19,1315,3.19,1316,3.19,1317,3.19,1318,3.19,1319,5.007,1320,3.75]],["title/classes/MultiPolygon.html",[0,0.134,876,2.171]],["body/classes/MultiPolygon.html",[0,0.164,2,1.072,3,0.255,4,0.255,5,0.222,9,0.413,11,0.423,12,2.076,14,2.69,15,0.19,16,0.708,20,0.555,21,2.076,22,1.214,23,0.479,26,0.839,27,0.513,28,0.023,29,0.513,30,0.513,32,0.893,33,0.893,37,2.108,39,0.479,41,1.627,42,1.627,43,1.531,49,1.28,53,0.255,54,0.598,55,2.108,71,0.014,72,0.017,73,0.014,746,3.383,872,3.392,874,3.383,875,3.216,876,4.342,877,3.636,878,3.736,886,4.639,1321,5.382,1322,3.636,1323,6.535,1324,5.453,1325,5.453,1326,4.639,1327,4.274,1328,3.636,1329,4.274,1330,3.636,1331,4.274]],["title/injectables/ObjectPlacerService.html",[146,0.777,1332,2.633]],["body/injectables/ObjectPlacerService.html",[0,0.125,3,0.194,4,0.194,5,0.169,9,0.429,11,0.312,15,0.145,17,0.931,20,0.774,22,0.977,23,0.429,26,0.891,27,0.628,28,0.024,29,0.628,30,0.628,32,0.949,39,0.344,53,0.194,54,0.792,61,2.818,62,1.064,69,1.568,71,0.01,72,0.014,73,0.01,84,0.949,146,1.009,148,1.317,150,1.729,181,1.478,205,0.865,211,1.498,212,1.403,277,3.359,395,2.446,423,4.264,448,4.264,449,2.24,452,2.208,507,1.317,515,5.818,702,2.12,741,2.017,742,2.596,746,4.354,926,4.821,987,3.864,1098,5.502,1100,3.939,1172,3.417,1332,3.417,1333,5.072,1334,5.072,1335,2.766,1336,4.542,1337,5.666,1338,6.655,1339,4.542,1340,4.542,1341,4.542,1342,4.542,1343,3.251,1344,4.542,1345,3.251,1346,6.176,1347,6.176,1348,5.254,1349,4.821,1350,4.542,1351,3.251,1352,3.864,1353,3.417,1354,4.542,1355,3.251,1356,4.542,1357,3.251,1358,4.542,1359,3.864,1360,3.251,1361,5.234,1362,3.251,1363,4.542,1364,3.251,1365,3.251,1366,4.542,1367,3.251,1368,3.251,1369,3.251,1370,3.251,1371,3.251,1372,3.251]],["title/classes/Polygon.html",[0,0.134,878,2]],["body/classes/Polygon.html",[0,0.153,2,1,3,0.238,4,0.238,5,0.207,9,0.395,11,0.418,12,1.985,14,2.572,15,0.177,16,0.677,17,0.917,18,2.085,20,0.518,21,1.985,22,1.201,23,0.484,25,2.572,26,1.023,27,0.479,28,0.024,29,0.479,30,0.479,32,0.833,33,0.833,37,1.967,39,0.466,41,1.518,42,1.518,43,1.428,49,1.195,53,0.238,54,0.558,55,1.967,71,0.013,72,0.017,73,0.013,93,2.981,291,3.541,738,4.343,746,4.206,872,3.344,874,3.236,875,3.001,878,4.008,884,4.437,1326,4.437,1328,3.393,1330,3.393,1373,3.393,1374,6.683,1375,5.215,1376,3.988,1377,3.988,1378,3.988,1379,3.988,1380,3.988,1381,5.215,1382,5.215,1383,3.988]],["title/classes/Satellite.html",[0,0.134,110,1.612]],["body/classes/Satellite.html",[0,0.139,2,0.911,3,0.217,4,0.217,5,0.189,9,0.371,10,2.818,11,0.415,12,1.865,14,2.418,15,0.162,16,0.636,17,0.991,18,2.223,20,0.471,21,1.865,22,1.191,23,0.494,25,2.418,26,0.713,27,0.436,28,0.024,29,0.767,30,0.436,31,1.865,32,0.759,33,0.759,36,1.985,37,1.792,38,2.254,39,0.469,41,1.383,42,1.383,43,1.301,49,1.088,51,1.985,52,2.077,53,0.217,54,0.508,55,1.792,58,2.394,62,0.845,69,1.088,71,0.012,72,0.016,73,0.012,84,1.024,110,3.252,142,3.328,181,1.75,183,2.676,213,3.041,603,3.328,778,2.939,780,2.467,830,2.818,914,4.032,917,2.467,1050,3.328,1051,2.467,1052,2.734,1053,2.734,1353,4.666,1384,3.091,1385,4.901,1386,3.633,1387,3.633,1388,3.633,1389,3.633,1390,3.091,1391,3.091,1392,3.091,1393,2.734]],["title/classes/Terminal.html",[0,0.134,113,1.51]],["body/classes/Terminal.html",[0,0.14,2,0.915,3,0.218,4,0.218,5,0.19,9,0.372,10,2.821,11,0.42,12,1.871,14,2.425,15,0.162,16,0.638,17,0.96,18,2.112,20,0.474,21,1.871,22,1.206,23,0.495,25,2.425,26,0.716,27,0.438,28,0.024,29,0.768,30,0.438,31,1.871,32,0.762,33,0.762,36,1.991,37,1.8,38,2.264,39,0.484,40,2.264,41,1.389,42,1.389,43,1.307,49,1.472,51,1.991,52,2.086,53,0.218,54,0.51,55,1.8,58,2.399,62,0.847,69,1.093,71,0.012,72,0.016,73,0.012,84,1.027,113,3.02,138,4.182,181,1.57,183,2.68,213,3.05,603,3.338,778,2.946,780,2.478,830,2.821,846,3.775,914,4.04,917,2.478,1050,3.338,1051,2.478,1052,2.746,1053,2.746,1393,2.746,1394,3.104,1395,5.562,1396,4.916,1397,3.649,1398,3.649,1399,3.649,1400,3.649,1401,3.649,1402,3.649]],["title/classes/TerminalLiveData.html",[0,0.134,112,1.726]],["body/classes/TerminalLiveData.html",[0,0.126,2,0.822,3,0.196,4,0.196,5,0.17,8,1.873,9,0.346,10,2.742,11,0.414,12,1.738,14,2.253,15,0.146,16,0.593,17,0.989,18,2.247,20,0.425,21,1.738,22,1.201,23,0.498,25,2.253,26,0.643,27,0.393,28,0.024,29,0.393,30,0.631,31,1.738,32,0.685,33,0.685,36,1.85,37,1.617,38,2.033,39,0.469,40,2.033,41,1.247,42,1.247,43,1.174,49,0.982,51,1.85,52,1.873,53,0.196,54,0.458,55,1.617,62,0.787,69,0.982,71,0.01,72,0.015,73,0.01,84,0.954,112,3.196,113,2.796,114,3.487,140,3.101,181,1.858,183,2.58,213,2.834,234,1.327,552,2.788,660,5.087,778,2.785,780,2.225,782,4.084,830,2.58,914,3.861,917,2.225,1050,3.101,1051,2.225,1293,3.101,1352,5.087,1353,4.499,1390,2.788,1391,2.788,1392,2.788,1393,2.466,1403,5.405,1404,4.567,1405,3.277,1406,4.472,1407,3.277,1408,3.277,1409,3.277,1410,3.277,1411,3.277,1412,3.277,1413,3.277,1414,3.277,1415,3.277,1416,3.277,1417,3.277]],["title/injectables/TextureLoaderService.html",[146,0.777,1418,2.633]],["body/injectables/TextureLoaderService.html",[0,0.136,3,0.211,4,0.211,5,0.184,9,0.365,11,0.327,15,0.158,16,0.625,17,0.907,20,0.798,22,0.831,23,0.465,26,1.075,27,0.425,28,0.024,29,0.425,30,0.425,31,1.834,32,0.74,33,0.74,39,0.365,53,0.211,54,0.674,58,1.529,62,0.944,69,1.061,71,0.011,72,0.015,73,0.011,84,1.007,85,2.568,101,3.273,103,1.834,146,1.071,148,1.435,150,1.834,153,3.719,205,0.943,211,1.633,212,1.529,293,4.306,371,4.423,382,4.1,387,2.708,404,5.93,410,3.626,449,2.377,452,2.406,472,3.626,473,3.626,507,1.435,514,3.626,592,3.626,597,4.546,598,3.625,651,3.273,661,3.273,805,5,993,3.273,1023,5,1164,4.1,1418,3.626,1419,5.395,1420,5.395,1421,3.014,1422,4.819,1423,4.819,1424,4.819,1425,5.877,1426,4.819,1427,3.543,1428,3.543,1429,4.819,1430,4.819,1431,3.543,1432,4.819,1433,4.819,1434,4.819,1435,4.819,1436,4.819,1437,3.543,1438,3.543,1439,3.543,1440,3.543,1441,3.543,1442,3.543,1443,4.819,1444,3.543,1445,3.543,1446,4.819,1447,3.543,1448,3.543]],["title/injectables/UiService.html",[146,0.777,256,2]],["body/injectables/UiService.html",[0,0.101,3,0.157,4,0.157,5,0.137,9,0.352,11,0.389,15,0.117,16,0.506,17,0.943,18,1.982,20,0.603,22,1.123,23,0.48,26,1.167,27,0.468,28,0.024,29,0.468,30,0.468,32,1.2,33,1.2,39,0.45,53,0.157,54,0.718,62,0.453,63,1.631,71,0.008,72,0.012,73,0.008,84,0.814,85,2.667,89,1.393,101,2.647,103,1.483,146,0.866,148,1.065,150,1.483,171,3.865,172,2.936,183,2.636,205,0.7,211,1.211,212,1.135,215,1.631,234,1.578,256,2.228,261,2.647,275,2.534,311,1.503,446,2.461,449,1.922,507,1.065,570,4.038,598,2.936,639,3.865,640,2.418,651,2.647,702,1.065,741,1.631,742,1.503,744,2.647,757,3.628,763,3.995,766,4.475,776,1.503,777,1.631,807,3.316,824,1.978,830,2.004,869,1.978,1031,4.888,1047,2.237,1082,5.059,1084,3.951,1092,3.316,1100,2.933,1112,3.951,1237,2.237,1238,4.475,1240,3.316,1254,2.237,1255,1.978,1256,2.237,1449,2.237,1450,3.897,1451,5.745,1452,5.745,1453,3.897,1454,5.745,1455,5.745,1456,3.897,1457,3.897,1458,3.897,1459,2.629,1460,3.897,1461,3.316,1462,3.897,1463,3.897,1464,3.897,1465,3.897,1466,3.897,1467,2.629,1468,3.897,1469,5.137,1470,2.629,1471,5.745,1472,5.745,1473,3.897,1474,3.897,1475,2.629,1476,2.629,1477,3.897,1478,3.897,1479,3.897,1480,3.897,1481,3.897,1482,3.897,1483,3.897,1484,3.897,1485,2.629,1486,2.629,1487,2.629,1488,3.897,1489,2.629,1490,2.629,1491,2.629,1492,2.629,1493,2.629,1494,2.629,1495,2.629,1496,2.629,1497,2.629,1498,2.629,1499,2.629,1500,2.629,1501,2.629,1502,3.897,1503,2.629,1504,2.629,1505,2.629]],["title/classes/Uid.html",[0,0.134,830,1.51]],["body/classes/Uid.html",[0,0.131,2,0.857,3,0.204,4,0.204,5,0.178,9,0.438,11,0.416,12,1.79,15,0.152,16,0.61,17,0.94,18,1.994,20,0.61,22,1.145,23,0.46,25,2.32,26,0.923,27,0.645,28,0.024,29,0.645,30,0.645,33,0.983,36,2.459,39,0.259,49,1.024,51,1.385,53,0.204,54,0.849,62,0.998,69,1.61,71,0.011,72,0.015,73,0.011,84,0.983,89,2.492,91,2.689,116,2.668,153,3.651,181,1.635,183,2.93,234,2.345,446,3.562,616,4.926,830,3.125,1506,2.909,1507,4.703,1508,4.001,1509,6.723,1510,4.703,1511,3.419,1512,3.419,1513,3.419,1514,3.419,1515,4.703,1516,6.274,1517,3.419,1518,5.79,1519,5.79,1520,4.703,1521,4.703,1522,5.79,1523,4.703,1524,3.419,1525,5.79,1526,4.703,1527,3.419,1528,3.419,1529,3.419,1530,3.419,1531,3.419]],["title/components/Visualizer3dComponent.html",[235,1.253,320,1.612]],["body/components/Visualizer3dComponent.html",[0,0.107,3,0.166,4,0.166,5,0.145,9,0.308,11,0.315,15,0.124,16,0.528,17,0.785,20,0.623,23,0.47,26,0.546,27,0.334,28,0.024,29,0.576,30,0.334,39,0.308,51,1.647,53,0.166,54,0.672,62,0.91,71,0.009,72,0.013,73,0.009,84,1.103,85,2.719,98,1.374,103,2.305,107,0.997,150,1.548,169,2.761,172,3.019,176,3.974,181,1.148,205,0.741,213,2.523,215,1.728,235,2.169,236,1.283,237,2.324,238,1.728,239,1.728,240,1.728,241,1.728,243,2.523,246,3.459,247,3.758,248,3.758,249,2.523,251,2.523,275,2.369,277,2.545,298,2.545,300,2.095,301,3.059,302,1.728,303,1.728,307,1.475,308,2.798,309,3.019,310,1.728,311,3.019,312,1.728,313,1.728,314,1.283,315,1.728,316,1.283,317,1.728,318,1.283,319,1.728,320,2.433,321,2.98,322,1.728,323,1.728,361,4.226,415,2.761,507,1.647,516,3.059,517,2.369,594,3.059,597,4.216,598,3.353,618,2.369,619,2.369,620,3.614,635,5.474,636,2.369,640,3.276,662,2.369,678,2.369,702,1.647,744,1.891,815,2.324,932,4.493,993,2.761,1116,3.459,1461,3.459,1532,2.369,1533,4.066,1534,4.802,1535,4.802,1536,4.066,1537,5.281,1538,5.281,1539,5.281,1540,4.066,1541,4.066,1542,2.785,1543,5.753,1544,5.281,1545,4.066,1546,4.066,1547,2.785,1548,2.785,1549,2.785,1550,4.802,1551,2.785,1552,5.865,1553,4.066,1554,4.066,1555,4.066,1556,2.785,1557,4.066,1558,4.066,1559,2.785,1560,2.785,1561,4.066,1562,2.785,1563,2.785,1564,4.802,1565,4.066,1566,2.785,1567,2.785,1568,2.785,1569,2.785,1570,2.785,1571,4.066,1572,2.785,1573,2.785,1574,2.785,1575,2.785,1576,2.785,1577,2.785,1578,2.785,1579,2.785,1580,2.785,1581,2.785,1582,2.785,1583,2.785,1584,2.785,1585,2.785,1586,2.785,1587,2.785,1588,2.785,1589,2.785,1590,2.785,1591,2.785,1592,2.785,1593,4.066,1594,2.785,1595,2.369,1596,2.785,1597,2.785,1598,2.785]],["title/coverage.html",[1599,4.065]],["body/coverage.html",[0,0.269,1,2.039,5,0.171,6,2.758,7,2.108,8,3.421,10,1.418,11,0.196,13,0.928,19,1.514,26,0.645,28,0.023,44,2.039,63,3.266,71,0.01,72,0.015,73,0.01,74,2.796,78,1.878,79,3.443,95,2.039,96,2.039,106,1.741,110,1.514,112,1.621,113,1.418,114,1.741,146,1.522,147,2.231,149,2.796,152,2.616,207,2.039,208,2.473,210,2.039,235,2.143,236,1.514,242,2.796,253,2.231,256,1.878,298,3.856,314,1.514,316,1.514,318,1.514,320,1.514,364,2.473,365,3.575,366,3.575,367,3.575,453,2.473,469,2.473,534,2.039,535,2.796,553,2.473,554,2.796,568,2.473,651,4.064,702,1.331,738,2.231,739,2.796,757,1.878,758,2.796,778,1.741,779,2.473,782,2.039,803,2.796,830,1.418,870,2.231,871,3.443,872,1.621,876,2.039,878,1.878,888,2.796,889,2.796,900,2.473,904,2.796,909,2.796,912,2.796,918,2.796,972,2.796,978,2.473,979,2.473,1020,2.796,1061,2.473,1062,2.796,1208,2.473,1224,2.473,1225,2.796,1238,2.473,1255,2.473,1285,3.443,1321,2.796,1322,2.796,1332,2.473,1333,3.893,1334,2.796,1335,2.796,1373,2.796,1384,2.796,1394,2.796,1418,2.473,1419,2.796,1420,2.796,1421,2.796,1449,2.796,1506,2.796,1508,2.796,1532,2.796,1543,2.796,1599,2.796,1600,3.286,1601,3.286,1602,5.264,1603,5.693,1604,3.286,1605,4.576,1606,5.693,1607,5.264,1608,2.796,1609,6.484,1610,5.985,1611,2.796,1612,3.286,1613,3.286,1614,4.576,1615,4.576,1616,4.576,1617,3.286,1618,5.264,1619,2.796,1620,3.286,1621,3.286,1622,3.286,1623,3.286,1624,4.576,1625,3.286,1626,3.286,1627,3.286,1628,3.286,1629,3.286,1630,3.286,1631,3.286,1632,3.286,1633,3.286,1634,4.479,1635,3.286,1636,2.796,1637,2.796,1638,3.286,1639,3.286]],["title/dependencies.html",[327,2.858,1640,2.92]],["body/dependencies.html",[28,0.023,71,0.016,72,0.019,73,0.016,205,1.293,327,3.3,346,5.026,347,4.79,351,4.135,358,5.026,359,5.026,360,4.135,361,4.446,449,2.397,570,3.3,571,3.657,776,2.778,933,4.135,1121,4.135,1210,4.135,1641,7.047,1642,4.86,1643,5.908,1644,4.86,1645,4.86,1646,4.86,1647,4.86,1648,4.86,1649,4.86,1650,4.86,1651,4.86,1652,4.86,1653,4.86,1654,4.86,1655,4.86,1656,4.86,1657,4.86,1658,4.86,1659,4.86,1660,4.86,1661,4.86,1662,4.86,1663,4.86,1664,4.86]],["title/miscellaneous/enumerations.html",[1665,1.669,1666,3.58]],["body/miscellaneous/enumerations.html",[6,1.741,11,0.226,13,1.421,15,0.168,19,2.607,22,0.975,28,0.023,33,1.524,36,2.038,44,3.122,47,3.417,71,0.012,72,0.016,73,0.012,106,2.666,107,1.353,110,1.741,112,2.482,113,2.172,210,2.344,225,3.215,292,4.54,365,2.566,366,2.566,367,3.417,369,2.843,380,4.281,388,4.267,391,2.566,444,2.172,451,2.843,467,2.843,531,3.842,532,5.346,533,3.215,539,3.787,540,3.122,541,3.787,542,3.787,543,3.787,544,3.787,568,2.843,702,1.53,737,4.814,846,2.566,872,1.864,874,3.122,876,3.122,878,2.877,900,2.843,908,4.258,960,2.566,979,2.843,985,4.281,1016,3.215,1017,3.215,1018,3.215,1019,3.215,1034,4.281,1048,4.814,1293,2.566,1395,4.281,1403,4.281,1406,3.215,1595,4.281,1665,2.16,1666,3.215,1667,3.779,1668,5.032,1669,3.215,1670,6.699,1671,3.779,1672,3.779,1673,3.779,1674,3.779,1675,3.779,1676,5.032,1677,3.215,1678,3.779,1679,3.779,1680,3.779,1681,5.032,1682,5.032,1683,5.032,1684,5.032,1685,5.032,1686,3.779,1687,3.779,1688,3.779,1689,3.779,1690,3.779,1691,3.779,1692,3.779,1693,3.779,1694,3.779,1695,5.032,1696,5.032,1697,5.032]],["title/miscellaneous/functions.html",[507,1.704,1665,1.669]],["body/miscellaneous/functions.html",[6,2.706,7,2.706,8,3.357,9,0.444,10,2.848,11,0.287,15,0.214,19,2.706,22,1.212,27,0.761,28,0.022,29,0.761,30,0.761,31,2.235,61,3.643,62,1.092,64,4.094,71,0.015,72,0.019,73,0.015,79,4.419,80,4.419,81,3.988,88,4.996,89,3.111,91,2.751,92,4.094,133,4.094,134,4.094,135,4.094,387,2.218,507,1.949,871,3.621,872,3.126,882,4.094,883,4.094,1608,4.996,1611,4.996,1619,4.996,1665,2.751,1669,4.996,1698,4.812]],["title/index.html",[15,0.13,1699,2.92,1700,2.92]],["body/index.html",[28,0.021,71,0.018,72,0.021,73,0.018,1701,5.672,1702,5.672,1703,5.672]],["title/modules.html",[326,2.964]],["body/modules.html",[28,0.02,71,0.018,72,0.02,73,0.018,325,3.79,326,3.463,336,3.463,347,4.2,1298,4.2,1704,5.581,1705,5.581,1706,6.411,1707,5.581]],["title/overview.html",[1708,4.065]],["body/overview.html",[2,1.231,28,0.023,71,0.016,72,0.019,73,0.016,148,1.988,236,3.224,237,2.806,307,2.601,314,2.946,316,2.946,318,2.946,320,2.946,324,2.806,325,4.938,326,3.046,327,3.334,328,3.694,329,4.177,330,4.177,331,3.694,332,4.177,333,4.177,334,4.177,335,4.177,336,3.966,337,3.688,338,4.177,339,3.694,903,3.694,960,4.036,1708,4.177,1709,4.909,1710,4.909,1711,4.909]],["title/miscellaneous/variables.html",[1665,1.669,1712,3.58]],["body/miscellaneous/variables.html",[11,0.244,15,0.182,28,0.023,32,1.347,33,1.347,71,0.013,72,0.017,73,0.013,103,1.556,235,1.464,243,2.537,275,2.901,287,3.288,324,2.337,365,2.776,366,2.776,367,3.993,391,2.776,397,5.293,444,1.764,450,3.478,451,3.988,453,3.988,454,5.619,455,5.797,456,5.293,457,5.293,458,3.076,459,3.478,460,3.478,461,4.509,462,5.484,463,3.478,464,3.478,465,3.478,466,3.478,467,3.988,468,3.478,469,3.988,470,5.859,471,4.509,472,3.076,473,3.076,474,5.003,475,3.478,476,3.478,477,3.478,478,3.478,479,3.478,480,3.478,481,3.478,482,4.509,483,3.478,484,4.509,485,3.478,815,2.337,818,2.776,1172,3.076,1208,3.076,1211,3.478,1213,3.478,1216,3.478,1218,3.478,1220,3.478,1222,3.478,1223,3.478,1224,3.988,1348,4.509,1349,4.509,1359,3.478,1634,3.478,1636,5.003,1637,4.509,1665,2.337,1677,4.509,1712,3.478,1713,5.3,1714,4.088,1715,5.3]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":702,"title":{},"body":{"injectables/ControlService.html":{},"classes/Coordinate.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0,0",{"_index":1138,"title":{},"body":{"injectables/MapdataService.html":{}}}],["0.005",{"_index":652,"title":{},"body":{"injectables/ControlService.html":{}}}],["0.008",{"_index":1589,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["0.03",{"_index":641,"title":{},"body":{"injectables/ControlService.html":{}}}],["0.0473",{"_index":857,"title":{},"body":{"components/DetailComponent.html":{},"components/MenuComponent.html":{}}}],["0.04rem",{"_index":969,"title":{},"body":{"components/HoverComponent.html":{}}}],["0.1",{"_index":680,"title":{},"body":{"injectables/ControlService.html":{}}}],["0.1.5",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["0.11.3",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["0.127.0",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["0.127.1",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":434,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["0.3",{"_index":416,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["0.346",{"_index":858,"title":{},"body":{"components/DetailComponent.html":{},"components/MenuComponent.html":{}}}],["0.5",{"_index":483,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["0.5s",{"_index":854,"title":{},"body":{"components/DetailComponent.html":{},"components/MenuComponent.html":{}}}],["0.6",{"_index":424,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["0.8",{"_index":963,"title":{},"body":{"components/HoverComponent.html":{}}}],["0.9",{"_index":951,"title":{},"body":{"components/HoverComponent.html":{}}}],["0/12",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["0x00ff00",{"_index":500,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["0xff0000",{"_index":491,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["0xffff00",{"_index":506,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["1",{"_index":444,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["1,5em",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["1.0",{"_index":462,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["1.0.3",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["1.28.3",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{}}}],["100.0",{"_index":519,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["100ms",{"_index":940,"title":{},"body":{"components/HoverComponent.html":{}}}],["1024px",{"_index":1596,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["10px",{"_index":958,"title":{},"body":{"components/HoverComponent.html":{}}}],["11.2.12",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["11.2.7",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["111",{"_index":1176,"title":{},"body":{"injectables/MapdataService.html":{}}}],["13",{"_index":1710,"title":{},"body":{"overview.html":{}}}],["13/13",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["133",{"_index":1174,"title":{},"body":{"injectables/MapdataService.html":{}}}],["138",{"_index":517,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/Visualizer3dComponent.html":{}}}],["15/15",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":1590,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["15px",{"_index":952,"title":{},"body":{"components/HoverComponent.html":{}}}],["16px",{"_index":1284,"title":{},"body":{"components/MenuComponent.html":{}}}],["18",{"_index":1711,"title":{},"body":{"overview.html":{}}}],["180",{"_index":1172,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"miscellaneous/variables.html":{}}}],["1rem",{"_index":866,"title":{},"body":{"components/DetailComponent.html":{}}}],["2",{"_index":960,"title":{},"body":{"components/HoverComponent.html":{},"injectables/LightService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2.0.0",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":516,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{},"components/Visualizer3dComponent.html":{}}}],["21/21",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["212121",{"_index":950,"title":{},"body":{"components/HoverComponent.html":{}}}],["250",{"_index":678,"title":{},"body":{"injectables/ControlService.html":{},"components/Visualizer3dComponent.html":{}}}],["250px",{"_index":868,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["28/28",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":740,"title":{},"body":{"classes/Coordinate.html":{}}}],["2px",{"_index":962,"title":{},"body":{"components/HoverComponent.html":{}}}],["2rem",{"_index":865,"title":{},"body":{"components/DetailComponent.html":{}}}],["3",{"_index":1691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3/3",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["31/31",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":425,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["360",{"_index":1201,"title":{},"body":{"injectables/MapdataService.html":{}}}],["3d",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["3dvisapp",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["4.6.17",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1709,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["512px",{"_index":1597,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["5px",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["6.5.0",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1588,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["8/10",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1198,"title":{},"body":{"injectables/MapdataService.html":{}}}],["90.01",{"_index":676,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{}}}],["90.02",{"_index":1195,"title":{},"body":{"injectables/MapdataService.html":{}}}],["90.04",{"_index":1193,"title":{},"body":{"injectables/MapdataService.html":{}}}],["90.08",{"_index":1191,"title":{},"body":{"injectables/MapdataService.html":{}}}],["90.15",{"_index":1189,"title":{},"body":{"injectables/MapdataService.html":{}}}],["90.3",{"_index":1187,"title":{},"body":{"injectables/MapdataService.html":{}}}],["90.7",{"_index":1185,"title":{},"body":{"injectables/MapdataService.html":{}}}],["91.5",{"_index":1183,"title":{},"body":{"injectables/MapdataService.html":{}}}],["92",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["92.3",{"_index":1181,"title":{},"body":{"injectables/MapdataService.html":{}}}],["95",{"_index":1179,"title":{},"body":{"injectables/MapdataService.html":{}}}],["_fs",{"_index":469,"title":{},"body":{"injectables/BasicObjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_vs",{"_index":453,"title":{},"body":{"injectables/BasicObjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["absolute",{"_index":869,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{}}}],["abstract",{"_index":75,"title":{},"body":{"classes/ApiObject.html":{},"classes/GeoData.html":{},"classes/Geometry.html":{}}}],["actual",{"_index":1033,"title":{},"body":{"classes/MapOverlay.html":{}}}],["actual_component",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["addkeyboardevents",{"_index":580,"title":{},"body":{"injectables/ControlService.html":{}}}],["addkeyboardevents(canvas",{"_index":591,"title":{},"body":{"injectables/ControlService.html":{}}}],["adds",{"_index":594,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"components/Visualizer3dComponent.html":{}}}],["adjust",{"_index":644,"title":{},"body":{"injectables/ControlService.html":{}}}],["aero",{"_index":1695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":1534,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["aggregated",{"_index":1406,"title":{},"body":{"classes/TerminalLiveData.html":{},"miscellaneous/enumerations.html":{}}}],["aggregatedstatus",{"_index":1403,"title":{},"body":{"classes/TerminalLiveData.html":{},"miscellaneous/enumerations.html":{}}}],["alarm",{"_index":1681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["align",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["along",{"_index":998,"title":{},"body":{"injectables/LightService.html":{}}}],["alpha",{"_index":396,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/HoverComponent.html":{}}}],["alphamap",{"_index":383,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["already",{"_index":1038,"title":{},"body":{"classes/MapOverlay.html":{}}}],["altitude",{"_index":660,"title":{},"body":{"injectables/ControlService.html":{},"classes/TerminalLiveData.html":{}}}],["ambient",{"_index":1017,"title":{},"body":{"injectables/LightService.html":{},"miscellaneous/enumerations.html":{}}}],["ambientintensity",{"_index":479,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":426,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/LightService.html":{}}}],["angular",{"_index":1222,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":933,"title":{},"body":{"components/HoverComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1210,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":204,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":205,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["angular/material/icon",{"_index":1219,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1221,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1212,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":1214,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1217,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":932,"title":{},"body":{"components/HoverComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["animate(\"0.1s",{"_index":939,"title":{},"body":{"components/HoverComponent.html":{}}}],["animations",{"_index":934,"title":{},"body":{"components/HoverComponent.html":{}}}],["anzeige",{"_index":1269,"title":{},"body":{"components/MenuComponent.html":{}}}],["api",{"_index":51,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{},"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["apigeodata",{"_index":1,"title":{"classes/ApiGeoData.html":{}},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/MapOverlay.html":{},"coverage.html":{}}}],["apigeodata(from",{"_index":136,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiobject",{"_index":10,"title":{"classes/ApiObject.html":{}},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiobject:11",{"_index":38,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["apiobjecttype",{"_index":36,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{},"miscellaneous/enumerations.html":{}}}],["apiobjecttype.geodata",{"_index":34,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["apiobjecttype.mapoverlay",{"_index":144,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MapOverlay.html":{}}}],["apiobjecttype.satellite",{"_index":142,"title":{},"body":{"classes/ApiResponse.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/Satellite.html":{}}}],["apiobjecttype.terminal",{"_index":138,"title":{},"body":{"classes/ApiResponse.html":{},"classes/Terminal.html":{}}}],["apiobjecttype.terminallivedata",{"_index":140,"title":{},"body":{"classes/ApiResponse.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/TerminalLiveData.html":{}}}],["apiresponse",{"_index":78,"title":{"classes/ApiResponse.html":{}},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{},"classes/MapOverlay.html":{},"coverage.html":{}}}],["apiresponse(object",{"_index":220,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiresponse.data",{"_index":230,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiresponse.meta.listing",{"_index":221,"title":{},"body":{"injectables/ApiService.html":{}}}],["apis/common",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["apis/resize",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apiservice",{"_index":147,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["aplphamap",{"_index":526,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["app",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["app.component",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":236,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["appmodule",{"_index":325,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":1547,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["array",{"_index":93,"title":{},"body":{"classes/ApiResponse.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/Polygon.html":{}}}],["array\")).map(coordinates",{"_index":1331,"title":{},"body":{"classes/MultiPolygon.html":{}}}],["array\").map(obj",{"_index":898,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["assets/config",{"_index":560,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["assets/texture",{"_index":1432,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["async",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/MapdataService.html":{}}}],["auto",{"_index":948,"title":{},"body":{"components/HoverComponent.html":{}}}],["available",{"_index":1298,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"modules.html":{}}}],["back",{"_index":407,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["background",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/TextureLoaderService.html":{}}}],["backgroundtex",{"_index":473,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/TextureLoaderService.html":{},"miscellaneous/variables.html":{}}}],["backside",{"_index":402,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["base",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{}}}],["base_url",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{}}}],["based",{"_index":390,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{}}}],["basic",{"_index":369,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/HoverComponent.html":{},"miscellaneous/enumerations.html":{}}}],["basicobjectservice",{"_index":364,"title":{"injectables/BasicObjectService.html":{}},"body":{"injectables/BasicObjectService.html":{},"coverage.html":{}}}],["beam",{"_index":1690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beams",{"_index":1245,"title":{},"body":{"components/MenuComponent.html":{}}}],["beams/overlays",{"_index":1250,"title":{},"body":{"components/MenuComponent.html":{}}}],["behaviorsubject",{"_index":766,"title":{},"body":{"injectables/DataService.html":{},"classes/MapOverlay.html":{},"injectables/UiService.html":{}}}],["behaviorsubject(new",{"_index":767,"title":{},"body":{"injectables/DataService.html":{}}}],["behaviorsubject(null",{"_index":1031,"title":{},"body":{"classes/MapOverlay.html":{},"injectables/UiService.html":{}}}],["behaviour",{"_index":1471,"title":{},"body":{"injectables/UiService.html":{}}}],["between",{"_index":863,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{}}}],["bewegen",{"_index":1276,"title":{},"body":{"components/MenuComponent.html":{}}}],["bezier(0.685",{"_index":856,"title":{},"body":{"components/DetailComponent.html":{},"components/MenuComponent.html":{}}}],["block",{"_index":1594,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"classes/ApiResponse.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"components/MenuComponent.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/Polygon.html":{}}}],["bottom",{"_index":437,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/HoverComponent.html":{}}}],["box",{"_index":414,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/HoverComponent.html":{}}}],["break",{"_index":509,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/LightService.html":{}}}],["breitengrad",{"_index":851,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["browse",{"_index":1706,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{}}}],["calccoords",{"_index":1340,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["calccoords(coords",{"_index":1344,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["calcpos",{"_index":922,"title":{},"body":{"components/HoverComponent.html":{}}}],["calcpos(position",{"_index":924,"title":{},"body":{"components/HoverComponent.html":{}}}],["calculated",{"_index":1095,"title":{},"body":{"injectables/MapdataService.html":{}}}],["calculates",{"_index":926,"title":{},"body":{"components/HoverComponent.html":{},"injectables/ObjectPlacerService.html":{}}}],["calculating",{"_index":1092,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/UiService.html":{}}}],["calculation",{"_index":1349,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"miscellaneous/variables.html":{}}}],["called",{"_index":1039,"title":{},"body":{"classes/MapOverlay.html":{}}}],["calls",{"_index":1552,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["camera",{"_index":570,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"injectables/UiService.html":{},"dependencies.html":{}}}],["camera:three.camera",{"_index":1151,"title":{},"body":{"injectables/MapdataService.html":{}}}],["cameracontrols",{"_index":604,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{}}}],["cameracontrols(camera",{"_index":674,"title":{},"body":{"injectables/ControlService.html":{}}}],["cameracontrols.action.dolly",{"_index":684,"title":{},"body":{"injectables/ControlService.html":{}}}],["cameracontrols.action.none",{"_index":686,"title":{},"body":{"injectables/ControlService.html":{}}}],["cameracontrols.action.rotate",{"_index":682,"title":{},"body":{"injectables/ControlService.html":{}}}],["cameracontrols.install",{"_index":663,"title":{},"body":{"injectables/ControlService.html":{}}}],["cameradist",{"_index":1109,"title":{},"body":{"injectables/MapdataService.html":{}}}],["canvas",{"_index":597,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{},"components/Visualizer3dComponent.html":{}}}],["canvas.addeventlistener(\"keydown",{"_index":725,"title":{},"body":{"injectables/ControlService.html":{}}}],["canvas.addeventlistener(\"keyup",{"_index":727,"title":{},"body":{"injectables/ControlService.html":{}}}],["canvas.addeventlistener(\"wheel",{"_index":691,"title":{},"body":{"injectables/ControlService.html":{}}}],["canvas:htmlcanvaselement",{"_index":1442,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["case",{"_index":67,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/BasicObjectService.html":{},"classes/Feature.html":{},"injectables/LightService.html":{}}}],["catch(reason",{"_index":223,"title":{},"body":{"injectables/ApiService.html":{}}}],["ceates",{"_index":420,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["center",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"components/HoverComponent.html":{},"injectables/MapdataService.html":{},"miscellaneous/variables.html":{}}}],["centerrc",{"_index":1067,"title":{},"body":{"injectables/MapdataService.html":{}}}],["centerrc:three.raycaster",{"_index":1132,"title":{},"body":{"injectables/MapdataService.html":{}}}],["changemapdataonzoom",{"_index":1072,"title":{},"body":{"injectables/MapdataService.html":{}}}],["changemapdataonzoom(controls",{"_index":1083,"title":{},"body":{"injectables/MapdataService.html":{}}}],["changemapdataonzoom(controls:cameracontrols",{"_index":1154,"title":{},"body":{"injectables/MapdataService.html":{}}}],["checks",{"_index":616,"title":{},"body":{"injectables/ControlService.html":{},"classes/Uid.html":{}}}],["class",{"_index":0,"title":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"classes/ConfigData.html":{},"classes/Coordinate.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"classes/Geometry.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{}},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"classes/Geometry.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"classes/ConfigData.html":{},"classes/Coordinate.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"classes/Geometry.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{},"overview.html":{}}}],["clicked",{"_index":1469,"title":{},"body":{"injectables/UiService.html":{}}}],["clickedobjectid",{"_index":1452,"title":{},"body":{"injectables/UiService.html":{}}}],["client",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ControlService.html":{},"injectables/UiService.html":{}}}],["clientx",{"_index":1583,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["clienty",{"_index":1584,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["close",{"_index":812,"title":{},"body":{"components/DetailComponent.html":{}}}],["closes",{"_index":820,"title":{},"body":{"components/DetailComponent.html":{}}}],["cluster_appmodule",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1305,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["collection",{"_index":890,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["collection.class",{"_index":46,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["collection.class.ts",{"_index":889,"title":{},"body":{"classes/FeatureCollection.html":{},"coverage.html":{}}}],["collection.class.ts:11",{"_index":893,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["collection.class.ts:16",{"_index":892,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["color",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{}}}],["color:number",{"_index":1001,"title":{},"body":{"injectables/LightService.html":{}}}],["column",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["combinelatest",{"_index":775,"title":{},"body":{"injectables/DataService.html":{}}}],["combinelatest([this.terminals",{"_index":792,"title":{},"body":{"injectables/DataService.html":{}}}],["commonmodule",{"_index":1209,"title":{},"body":{"modules/MaterialModule.html":{}}}],["component",{"_index":235,"title":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component/detail/detail.component",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["component/hover/hover.component",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["component/menu/menu.component",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["component/visualizer3d/visualizer3d.component",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["component_template",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["componente",{"_index":804,"title":{},"body":{"components/DetailComponent.html":{}}}],["components",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"overview.html":{}}}],["conainer",{"_index":970,"title":{},"body":{"components/HoverComponent.html":{}}}],["cone",{"_index":421,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["config",{"_index":538,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{}}}],["configdata",{"_index":534,"title":{"classes/ConfigData.html":{}},"body":{"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"coverage.html":{}}}],["configdata.then(data",{"_index":712,"title":{},"body":{"injectables/ControlService.html":{}}}],["configdata:promise",{"_index":671,"title":{},"body":{"injectables/ControlService.html":{}}}],["configuration",{"_index":555,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["configurationservice",{"_index":553,"title":{"injectables/ConfigurationService.html":{}},"body":{"injectables/ConfigurationService.html":{},"coverage.html":{}}}],["const",{"_index":452,"title":{},"body":{"injectables/BasicObjectService.html":{},"modules/MaterialModule.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{}}}],["construct",{"_index":1326,"title":{},"body":{"classes/MultiPolygon.html":{},"classes/Polygon.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["constructor(apiservice",{"_index":760,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(controlservice",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(coordinates",{"_index":743,"title":{},"body":{"classes/Coordinate.html":{}}}],["constructor(from",{"_index":21,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["constructor(http",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(meshcontrollerservice",{"_index":1237,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UiService.html":{}}}],["constructor(private",{"_index":215,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"components/MenuComponent.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["constructor(public",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["constructor(sceneservice",{"_index":1542,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["constructor(type",{"_index":1511,"title":{},"body":{"classes/Uid.html":{}}}],["constructor(uiservice",{"_index":813,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["constructs",{"_index":25,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{}}}],["consturcts",{"_index":1325,"title":{},"body":{"classes/MultiPolygon.html":{}}}],["container",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["content",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["contributors",{"_index":1593,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["control",{"_index":546,"title":{},"body":{"classes/ConfigData.html":{}}}],["controlkeys",{"_index":737,"title":{},"body":{"injectables/ControlService.html":{},"miscellaneous/enumerations.html":{}}}],["controller.service",{"_index":1256,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UiService.html":{}}}],["controller.service.ts",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["controller/mesh",{"_index":1255,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["controlling",{"_index":569,"title":{},"body":{"injectables/ControlService.html":{}}}],["controls",{"_index":571,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"dependencies.html":{}}}],["controls.addeventlistener(\"sleep",{"_index":1152,"title":{},"body":{"injectables/MapdataService.html":{}}}],["controls.distance",{"_index":1158,"title":{},"body":{"injectables/MapdataService.html":{}}}],["controlservice",{"_index":253,"title":{"injectables/ControlService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ControlService.html":{},"coverage.html":{}}}],["controlservice:controlservice",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["conversion",{"_index":42,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["converted",{"_index":1099,"title":{},"body":{"injectables/MapdataService.html":{}}}],["converting",{"_index":1336,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["convertmapdatatotexture",{"_index":1424,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["convertmapdatatotexture(mesh",{"_index":1427,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["convertmapdatatotexture(mesh:three.mesh",{"_index":1441,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["converts",{"_index":61,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"miscellaneous/functions.html":{}}}],["coordiantes",{"_index":1337,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["coordinate",{"_index":738,"title":{"classes/Coordinate.html":{}},"body":{"classes/Coordinate.html":{},"classes/Polygon.html":{},"coverage.html":{}}}],["coordinate(coordinate",{"_index":1381,"title":{},"body":{"classes/Polygon.html":{}}}],["coordinate.class",{"_index":1378,"title":{},"body":{"classes/Polygon.html":{}}}],["coordinates",{"_index":746,"title":{},"body":{"classes/Coordinate.html":{},"injectables/MapdataService.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{}}}],["coordinates.map(coordinate",{"_index":1380,"title":{},"body":{"classes/Polygon.html":{}}}],["coordinates[0",{"_index":751,"title":{},"body":{"classes/Coordinate.html":{}}}],["coordinates[1",{"_index":752,"title":{},"body":{"classes/Coordinate.html":{}}}],["coords",{"_index":1347,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["coords.x",{"_index":1358,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["coords.y",{"_index":1361,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["coords.z",{"_index":1363,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["cooridnates",{"_index":1339,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["corresponding",{"_index":133,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":1287,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["counttotal",{"_index":1288,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["coverage",{"_index":1599,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":31,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":393,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/LightService.html":{}}}],["createeventlistener",{"_index":581,"title":{},"body":{"injectables/ControlService.html":{}}}],["createeventlistener(canvas",{"_index":599,"title":{},"body":{"injectables/ControlService.html":{}}}],["creatematerial",{"_index":372,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["creatematerial(mattype",{"_index":379,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["createmesh",{"_index":373,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["createmesh(geo",{"_index":400,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["creates",{"_index":387,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"classes/Feature.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"injectables/TextureLoaderService.html":{},"miscellaneous/functions.html":{}}}],["cubic",{"_index":855,"title":{},"body":{"components/DetailComponent.html":{},"components/MenuComponent.html":{}}}],["cursor",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{}}}],["custom",{"_index":1533,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["custom_elements_schema",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["cylinder",{"_index":436,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["cynlinder",{"_index":432,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["d3e0e7",{"_index":971,"title":{},"body":{"components/HoverComponent.html":{}}}],["d6dbdd",{"_index":959,"title":{},"body":{"components/HoverComponent.html":{}}}],["data",{"_index":13,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["data.class",{"_index":50,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/FeatureCollection.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{}}}],["data.class.ts",{"_index":8,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ConfigData.html":{},"classes/GeoData.html":{},"classes/TerminalLiveData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data.class.ts:11",{"_index":902,"title":{},"body":{"classes/GeoData.html":{}}}],["data.class.ts:12",{"_index":549,"title":{},"body":{"classes/ConfigData.html":{}}}],["data.class.ts:13",{"_index":1409,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["data.class.ts:14",{"_index":35,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["data.class.ts:16",{"_index":550,"title":{},"body":{"classes/ConfigData.html":{}}}],["data.class.ts:18",{"_index":1407,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["data.class.ts:19",{"_index":24,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["data.class.ts:20",{"_index":545,"title":{},"body":{"classes/ConfigData.html":{}}}],["data.class.ts:23",{"_index":1405,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["data.class.ts:24",{"_index":551,"title":{},"body":{"classes/ConfigData.html":{}}}],["data.class.ts:28",{"_index":552,"title":{},"body":{"classes/ConfigData.html":{},"classes/TerminalLiveData.html":{}}}],["data.class.ts:33",{"_index":1408,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["data.class.ts:38",{"_index":1404,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["data.class.ts:57",{"_index":1410,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["data.class.ts:8",{"_index":548,"title":{},"body":{"classes/ConfigData.html":{}}}],["data.down",{"_index":720,"title":{},"body":{"injectables/ControlService.html":{}}}],["data.left",{"_index":714,"title":{},"body":{"injectables/ControlService.html":{}}}],["data.map(value",{"_index":130,"title":{},"body":{"classes/ApiResponse.html":{}}}],["data.right",{"_index":716,"title":{},"body":{"injectables/ControlService.html":{}}}],["data.up",{"_index":718,"title":{},"body":{"injectables/ControlService.html":{}}}],["data.zoomin",{"_index":722,"title":{},"body":{"injectables/ControlService.html":{}}}],["data.zoomout",{"_index":724,"title":{},"body":{"injectables/ControlService.html":{}}}],["dataservice",{"_index":757,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["decay",{"_index":989,"title":{},"body":{"injectables/LightService.html":{}}}],["decay?:number",{"_index":1007,"title":{},"body":{"injectables/LightService.html":{}}}],["declarations",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["decorators",{"_index":636,"title":{},"body":{"injectables/ControlService.html":{},"components/Visualizer3dComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/ApiGeoData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"classes/FeatureCollection.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["deg_2_rad",{"_index":1636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["degree",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":327,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":412,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/functions.html":{}}}],["detail",{"_index":807,"title":{},"body":{"components/DetailComponent.html":{},"injectables/UiService.html":{}}}],["detail'},{'name",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["detail.component.html",{"_index":809,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail.component.scss",{"_index":808,"title":{},"body":{"components/DetailComponent.html":{}}}],["detailcomponent",{"_index":314,"title":{"components/DetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detailed",{"_index":805,"title":{},"body":{"components/DetailComponent.html":{},"injectables/TextureLoaderService.html":{}}}],["detailedlayer",{"_index":1068,"title":{},"body":{"injectables/MapdataService.html":{}}}],["detailedlayer:osm",{"_index":1129,"title":{},"body":{"injectables/MapdataService.html":{}}}],["detailsopen",{"_index":1453,"title":{},"body":{"injectables/UiService.html":{}}}],["detailsopen:boolean",{"_index":1491,"title":{},"body":{"injectables/UiService.html":{}}}],["detailtex",{"_index":472,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/TextureLoaderService.html":{},"miscellaneous/variables.html":{}}}],["deterimines",{"_index":1460,"title":{},"body":{"injectables/UiService.html":{}}}],["determines",{"_index":992,"title":{},"body":{"injectables/LightService.html":{}}}],["determining",{"_index":1450,"title":{},"body":{"injectables/UiService.html":{}}}],["differen",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["different",{"_index":388,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"miscellaneous/enumerations.html":{}}}],["diffmap",{"_index":381,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["diffuse",{"_index":394,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["dims",{"_index":997,"title":{},"body":{"injectables/LightService.html":{}}}],["direction",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["directional",{"_index":1019,"title":{},"body":{"injectables/LightService.html":{},"miscellaneous/enumerations.html":{}}}],["directive",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["directives",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["display",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["dist",{"_index":988,"title":{},"body":{"injectables/LightService.html":{}}}],["dist?:number",{"_index":1006,"title":{},"body":{"injectables/LightService.html":{}}}],["distance",{"_index":632,"title":{},"body":{"injectables/ControlService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{}}}],["distinctuntilchanged",{"_index":1489,"title":{},"body":{"injectables/UiService.html":{}}}],["distinctuntilchanged((pos1",{"_index":1479,"title":{},"body":{"injectables/UiService.html":{}}}],["document.onmousedown",{"_index":1502,"title":{},"body":{"injectables/UiService.html":{}}}],["document.queryselector(\".ol",{"_index":1145,"title":{},"body":{"injectables/MapdataService.html":{}}}],["documentation",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["down",{"_index":539,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{},"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":618,"title":{},"body":{"injectables/ControlService.html":{},"components/Visualizer3dComponent.html":{}}}],["e.clienty",{"_index":1586,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["e.deltay",{"_index":732,"title":{},"body":{"injectables/ControlService.html":{}}}],["e.key",{"_index":730,"title":{},"body":{"injectables/ControlService.html":{}}}],["e.preventdefault",{"_index":729,"title":{},"body":{"injectables/ControlService.html":{}}}],["e1e6e7",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{}}}],["earth",{"_index":661,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"injectables/TextureLoaderService.html":{}}}],["ease",{"_index":941,"title":{},"body":{"components/HoverComponent.html":{}}}],["el",{"_index":572,"title":{},"body":{"injectables/ControlService.html":{}}}],["element",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["elementref",{"_index":635,"title":{},"body":{"injectables/ControlService.html":{},"components/Visualizer3dComponent.html":{}}}],["elements",{"_index":913,"title":{},"body":{"interfaces/HasUid.html":{}}}],["empty",{"_index":634,"title":{},"body":{"injectables/ControlService.html":{}}}],["end",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["endpoint",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{}}}],["entrypoint",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["enum",{"_index":531,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"injectables/LightService.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1666,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["epsg:4326",{"_index":1137,"title":{},"body":{"injectables/MapdataService.html":{}}}],["equal",{"_index":1509,"title":{},"body":{"classes/Uid.html":{}}}],["equal(uid1",{"_index":1515,"title":{},"body":{"classes/Uid.html":{}}}],["equals",{"_index":1510,"title":{},"body":{"classes/Uid.html":{}}}],["equals(uid",{"_index":1523,"title":{},"body":{"classes/Uid.html":{}}}],["errors",{"_index":82,"title":{},"body":{"classes/ApiResponse.html":{}}}],["event",{"_index":620,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"components/Visualizer3dComponent.html":{}}}],["eventlistener",{"_index":595,"title":{},"body":{"injectables/ControlService.html":{}}}],["eventtriggered",{"_index":623,"title":{},"body":{"injectables/ControlService.html":{}}}],["expected",{"_index":754,"title":{},"body":{"classes/Coordinate.html":{}}}],["export",{"_index":53,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["exports",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["extends",{"_index":14,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["external",{"_index":1030,"title":{},"body":{"classes/MapOverlay.html":{}}}],["factor",{"_index":643,"title":{},"body":{"injectables/ControlService.html":{}}}],["false",{"_index":116,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"components/DetailComponent.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/Uid.html":{}}}],["family",{"_index":954,"title":{},"body":{"components/HoverComponent.html":{}}}],["feature",{"_index":870,"title":{"classes/Feature.html":{}},"body":{"classes/Feature.html":{},"classes/FeatureCollection.html":{},"coverage.html":{}}}],["feature(obj",{"_index":899,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["feature.class",{"_index":895,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["featurecollection",{"_index":44,"title":{"classes/FeatureCollection.html":{}},"body":{"classes/ApiGeoData.html":{},"classes/FeatureCollection.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["featurecollection(from",{"_index":70,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["features",{"_index":891,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["fetch(\"assets/config/config.json\").then",{"_index":564,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{}}}],["files",{"_index":556,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["filter",{"_index":1047,"title":{},"body":{"classes/MapOverlay.html":{},"injectables/UiService.html":{}}}],["find",{"_index":1148,"title":{},"body":{"injectables/MapdataService.html":{}}}],["first",{"_index":1520,"title":{},"body":{"classes/Uid.html":{}}}],["fixed",{"_index":1595,"title":{},"body":{"components/Visualizer3dComponent.html":{},"miscellaneous/enumerations.html":{}}}],["flex",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["float",{"_index":474,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":561,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["font",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["formsmodule",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["fragment",{"_index":466,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["fragmentshader",{"_index":523,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["front",{"_index":406,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["function",{"_index":63,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/Feature.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["functions",{"_index":507,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/functions.html":{}}}],["gelb",{"_index":1273,"title":{},"body":{"components/MenuComponent.html":{}}}],["generate",{"_index":368,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generateboxobject",{"_index":374,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generateboxobject(width",{"_index":411,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generateconeobject",{"_index":375,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generateconeobject(rad",{"_index":417,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generateconeobject(rad:number=0.3",{"_index":502,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generatecylinderobject",{"_index":376,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generatecylinderobject(radtop",{"_index":429,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generatecylinderobject(radtop:number",{"_index":493,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generatelight",{"_index":982,"title":{},"body":{"injectables/LightService.html":{}}}],["generatelight(type",{"_index":984,"title":{},"body":{"injectables/LightService.html":{}}}],["generatelight(type:lighttype",{"_index":1000,"title":{},"body":{"injectables/LightService.html":{}}}],["generates",{"_index":991,"title":{},"body":{"injectables/LightService.html":{}}}],["generatesphereobject",{"_index":377,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generatesphereobject(rad",{"_index":439,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["generating",{"_index":980,"title":{},"body":{"injectables/LightService.html":{}}}],["generator.service.ts",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["generator/object",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["geo",{"_index":7,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"classes/MapOverlay.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geo/feature",{"_index":45,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["geo/geo",{"_index":48,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["geo:three.buffergeometry",{"_index":497,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["geodata",{"_index":19,"title":{"classes/GeoData.html":{}},"body":{"classes/ApiGeoData.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/MapOverlay.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["geodata:11",{"_index":894,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["geodata_raw",{"_index":56,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["geodataprovider",{"_index":207,"title":{"interfaces/GeoDataProvider.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{},"classes/MapOverlay.html":{},"coverage.html":{}}}],["geodatatype",{"_index":47,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"miscellaneous/enumerations.html":{}}}],["geodatatype.featurecollection",{"_index":68,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/FeatureCollection.html":{}}}],["geodate",{"_index":92,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["geometric",{"_index":370,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["geometries",{"_index":910,"title":{},"body":{"classes/Geometry.html":{}}}],["geometry",{"_index":872,"title":{"classes/Geometry.html":{}},"body":{"classes/Feature.html":{},"classes/Geometry.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["geometry:9",{"_index":1328,"title":{},"body":{"classes/MultiPolygon.html":{},"classes/Polygon.html":{}}}],["geometrytype",{"_index":874,"title":{},"body":{"classes/Feature.html":{},"classes/Geometry.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"miscellaneous/enumerations.html":{}}}],["geometrytype.multipolygon",{"_index":886,"title":{},"body":{"classes/Feature.html":{},"classes/MultiPolygon.html":{}}}],["geometrytype.polygon",{"_index":884,"title":{},"body":{"classes/Feature.html":{},"classes/Polygon.html":{}}}],["geomety",{"_index":409,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["geomtery",{"_index":882,"title":{},"body":{"classes/Feature.html":{},"miscellaneous/functions.html":{}}}],["getenum",{"_index":40,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/Feature.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["getenum(\"_type",{"_index":137,"title":{},"body":{"classes/ApiResponse.html":{}}}],["getenum(\"aggregatedstatus",{"_index":1413,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["getenum(\"mobilitytype",{"_index":1402,"title":{},"body":{"classes/Terminal.html":{}}}],["getenum(\"type",{"_index":65,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/Feature.html":{}}}],["getgps",{"_index":1390,"title":{},"body":{"classes/Satellite.html":{},"classes/TerminalLiveData.html":{}}}],["getgps(\"altitude",{"_index":1417,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["getgps(\"latitude",{"_index":1415,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["getgps(\"longitude",{"_index":1392,"title":{},"body":{"classes/Satellite.html":{},"classes/TerminalLiveData.html":{}}}],["getmapoverlaydata",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{}}}],["getmapoverlaygeodata",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{}}}],["getmapoverlaygeodata(id",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{}}}],["getolmap",{"_index":1073,"title":{},"body":{"injectables/MapdataService.html":{}}}],["getorbitcontrols",{"_index":582,"title":{},"body":{"injectables/ControlService.html":{}}}],["getpropertyvalue",{"_index":41,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["getpropertyvalue(\"color",{"_index":1057,"title":{},"body":{"classes/MapOverlay.html":{}}}],["getpropertyvalue(\"coordinates",{"_index":1330,"title":{},"body":{"classes/MultiPolygon.html":{},"classes/Polygon.html":{}}}],["getpropertyvalue(\"count",{"_index":1310,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["getpropertyvalue(\"counttotal",{"_index":1312,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["getpropertyvalue(\"data",{"_index":128,"title":{},"body":{"classes/ApiResponse.html":{}}}],["getpropertyvalue(\"errors",{"_index":120,"title":{},"body":{"classes/ApiResponse.html":{}}}],["getpropertyvalue(\"features",{"_index":897,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["getpropertyvalue(\"geodata",{"_index":57,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["getpropertyvalue(\"id",{"_index":1051,"title":{},"body":{"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["getpropertyvalue(\"listing",{"_index":125,"title":{},"body":{"classes/ApiResponse.html":{}}}],["getpropertyvalue(\"mapoverlaygroupid",{"_index":1055,"title":{},"body":{"classes/MapOverlay.html":{}}}],["getpropertyvalue(\"meta",{"_index":121,"title":{},"body":{"classes/ApiResponse.html":{}}}],["getpropertyvalue(\"name",{"_index":1053,"title":{},"body":{"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{}}}],["getpropertyvalue(\"page",{"_index":1316,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["getpropertyvalue(\"pagesize",{"_index":1314,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["getpropertyvalue(\"sort",{"_index":1318,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["getpropertyvalue(\"status",{"_index":1308,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["gets",{"_index":916,"title":{},"body":{"interfaces/HasUid.html":{}}}],["getsatellites",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{}}}],["getter",{"_index":603,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{}}}],["getterminallivedata",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{}}}],["getterminals",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{}}}],["gettexturefactor",{"_index":1074,"title":{},"body":{"injectables/MapdataService.html":{}}}],["getting",{"_index":1699,"title":{"index.html":{}},"body":{}}],["getuid",{"_index":914,"title":{},"body":{"interfaces/HasUid.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["given",{"_index":1525,"title":{},"body":{"classes/Uid.html":{}}}],["gl_position",{"_index":463,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["gometry.class",{"_index":875,"title":{},"body":{"classes/Feature.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{}}}],["gps",{"_index":1098,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{}}}],["gps2vec3",{"_index":1341,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["gps2vec3(coords",{"_index":1350,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["gps[0",{"_index":1205,"title":{},"body":{"injectables/MapdataService.html":{}}}],["gps[1",{"_index":1207,"title":{},"body":{"injectables/MapdataService.html":{}}}],["gpstouv",{"_index":1075,"title":{},"body":{"injectables/MapdataService.html":{}}}],["gpstouv(gps",{"_index":1096,"title":{},"body":{"injectables/MapdataService.html":{}}}],["gpstouv(gps:number",{"_index":1204,"title":{},"body":{"injectables/MapdataService.html":{}}}],["graph",{"_index":1707,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1048,"title":{},"body":{"classes/MapOverlay.html":{},"miscellaneous/enumerations.html":{}}}],["groupid",{"_index":1021,"title":{},"body":{"classes/MapOverlay.html":{}}}],["grün",{"_index":1271,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasn't",{"_index":1043,"title":{},"body":{"classes/MapOverlay.html":{}}}],["hasuid",{"_index":778,"title":{"interfaces/HasUid.html":{}},"body":{"injectables/DataService.html":{},"interfaces/HasUid.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"coverage.html":{}}}],["header",{"_index":964,"title":{},"body":{"components/HoverComponent.html":{}}}],["height",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"injectables/ObjectPlacerService.html":{},"components/Visualizer3dComponent.html":{}}}],["height:number",{"_index":495,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["height:number=0.6",{"_index":503,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["helper",{"_index":43,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/ConfigData.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["hidden",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["hide",{"_index":1243,"title":{},"body":{"components/MenuComponent.html":{}}}],["holes",{"_index":1374,"title":{},"body":{"classes/Polygon.html":{}}}],["holes.map(coordinate",{"_index":1383,"title":{},"body":{"classes/Polygon.html":{}}}],["host",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["hostlistener",{"_index":1566,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["hostlistener(\"window:mousemove",{"_index":1581,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["hostlisteners",{"_index":1540,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["hover",{"_index":639,"title":{},"body":{"injectables/ControlService.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{}}}],["hover'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["hover.component.html",{"_index":921,"title":{},"body":{"components/HoverComponent.html":{}}}],["hover.component.scss",{"_index":920,"title":{},"body":{"components/HoverComponent.html":{}}}],["hovercomponent",{"_index":316,"title":{"components/HoverComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hovered",{"_index":1451,"title":{},"body":{"injectables/UiService.html":{}}}],["hoveredobjectid",{"_index":1454,"title":{},"body":{"injectables/UiService.html":{}}}],["hovering",{"_index":1462,"title":{},"body":{"injectables/UiService.html":{}}}],["hoverobject",{"_index":1456,"title":{},"body":{"injectables/UiService.html":{}}}],["hoverobject(mousepos",{"_index":1458,"title":{},"body":{"injectables/UiService.html":{}}}],["hoverposition",{"_index":1455,"title":{},"body":{"injectables/UiService.html":{}}}],["hseg",{"_index":441,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["html",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/ControlService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["htmlcanvaselement",{"_index":592,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{}}}],["htmlelement).getboundingclientrect",{"_index":1576,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["http",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclient",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["https://3dvis.dev.gs",{"_index":1702,"title":{},"body":{"index.html":{}}}],["id",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"components/DetailComponent.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/UiService.html":{},"classes/Uid.html":{}}}],["id.enum",{"_index":1049,"title":{},"body":{"classes/MapOverlay.html":{}}}],["id.enum.ts",{"_index":1676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identifier",{"_index":1508,"title":{},"body":{"classes/Uid.html":{},"coverage.html":{}}}],["ids",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["if(cameradist",{"_index":1170,"title":{},"body":{"injectables/MapdataService.html":{}}}],["if(canvas",{"_index":1146,"title":{},"body":{"injectables/MapdataService.html":{}}}],["if(intersectscenter.length",{"_index":1160,"title":{},"body":{"injectables/MapdataService.html":{}}}],["if(relpos.x",{"_index":482,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":879,"title":{},"body":{"classes/Feature.html":{}}}],["implements",{"_index":213,"title":{},"body":{"injectables/ApiService.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"components/Visualizer3dComponent.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["imports",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["information",{"_index":919,"title":{},"body":{"components/HoverComponent.html":{}}}],["informations",{"_index":806,"title":{},"body":{"components/DetailComponent.html":{}}}],["inherited",{"_index":37,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["initdata",{"_index":86,"title":{},"body":{"classes/ApiResponse.html":{}}}],["initdata(from",{"_index":99,"title":{},"body":{"classes/ApiResponse.html":{}}}],["initial",{"_index":1119,"title":{},"body":{"injectables/MapdataService.html":{}}}],["initialises",{"_index":1081,"title":{},"body":{"injectables/MapdataService.html":{}}}],["initialize",{"_index":102,"title":{},"body":{"classes/ApiResponse.html":{}}}],["initializes",{"_index":101,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/ControlService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{}}}],["initializing",{"_index":815,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/variables.html":{}}}],["initialresolution",{"_index":1069,"title":{},"body":{"injectables/MapdataService.html":{}}}],["initialresolution:number",{"_index":1131,"title":{},"body":{"injectables/MapdataService.html":{}}}],["initkeyboardcontrols",{"_index":583,"title":{},"body":{"injectables/ControlService.html":{}}}],["initkeyboardcontrols(configdata",{"_index":606,"title":{},"body":{"injectables/ControlService.html":{}}}],["initmeta",{"_index":87,"title":{},"body":{"classes/ApiResponse.html":{}}}],["initmeta(from",{"_index":104,"title":{},"body":{"classes/ApiResponse.html":{}}}],["initolmap",{"_index":1076,"title":{},"body":{"injectables/MapdataService.html":{}}}],["initorbitcontrols",{"_index":584,"title":{},"body":{"injectables/ControlService.html":{}}}],["initorbitcontrols(surfacealt",{"_index":609,"title":{},"body":{"injectables/ControlService.html":{}}}],["initorbitcontrols(surfacealt:number",{"_index":670,"title":{},"body":{"injectables/ControlService.html":{}}}],["initscene",{"_index":1537,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["injectable",{"_index":146,"title":{"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"overview.html":{}}}],["injected",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/MenuComponent.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["injects",{"_index":169,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["inline",{"_index":977,"title":{},"body":{"components/HoverComponent.html":{}}}],["input",{"_index":646,"title":{},"body":{"injectables/ControlService.html":{}}}],["inputs",{"_index":537,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{}}}],["intensity",{"_index":986,"title":{},"body":{"injectables/LightService.html":{}}}],["intensity:number=1",{"_index":1002,"title":{},"body":{"injectables/LightService.html":{}}}],["interface",{"_index":152,"title":{"interfaces/GeoDataProvider.html":{},"interfaces/HasUid.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{},"interfaces/HasUid.html":{},"coverage.html":{}}}],["interfaces",{"_index":903,"title":{},"body":{"interfaces/GeoDataProvider.html":{},"interfaces/HasUid.html":{},"overview.html":{}}}],["intersects",{"_index":1498,"title":{},"body":{"injectables/UiService.html":{}}}],["intersects.length",{"_index":1500,"title":{},"body":{"injectables/UiService.html":{}}}],["intersectscenter:three.intersection",{"_index":1156,"title":{},"body":{"injectables/MapdataService.html":{}}}],["intersectscenter[0].uv",{"_index":1161,"title":{},"body":{"injectables/MapdataService.html":{}}}],["isgeodata",{"_index":88,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["iskeydown",{"_index":585,"title":{},"body":{"injectables/ControlService.html":{}}}],["iskeydown(e",{"_index":614,"title":{},"body":{"injectables/ControlService.html":{}}}],["iskeyup",{"_index":586,"title":{},"body":{"injectables/ControlService.html":{}}}],["iskeyup(e",{"_index":621,"title":{},"body":{"injectables/ControlService.html":{}}}],["islisting",{"_index":124,"title":{},"body":{"classes/ApiResponse.html":{}}}],["items",{"_index":859,"title":{},"body":{"components/DetailComponent.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["justify",{"_index":861,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["kamera",{"_index":1275,"title":{},"body":{"components/MenuComponent.html":{}}}],["key",{"_index":547,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{}}}],["keyboard",{"_index":536,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{},"components/MenuComponent.html":{}}}],["keyboardcontrols",{"_index":608,"title":{},"body":{"injectables/ControlService.html":{}}}],["keyboardevents",{"_index":596,"title":{},"body":{"injectables/ControlService.html":{}}}],["keyboardpfeiltasten",{"_index":1280,"title":{},"body":{"components/MenuComponent.html":{}}}],["keyboardrotatefactor",{"_index":573,"title":{},"body":{"injectables/ControlService.html":{}}}],["keyboardrotatefactor:number",{"_index":668,"title":{},"body":{"injectables/ControlService.html":{}}}],["keyboardzoomfactor",{"_index":574,"title":{},"body":{"injectables/ControlService.html":{}}}],["keyboardzoomfactor:number",{"_index":669,"title":{},"body":{"injectables/ControlService.html":{}}}],["keys",{"_index":649,"title":{},"body":{"injectables/ControlService.html":{}}}],["keyspressed",{"_index":575,"title":{},"body":{"injectables/ControlService.html":{}}}],["lambert",{"_index":533,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/enumerations.html":{}}}],["latitude",{"_index":1352,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"classes/TerminalLiveData.html":{}}}],["layer",{"_index":1117,"title":{},"body":{"injectables/MapdataService.html":{}}}],["layers",{"_index":1141,"title":{},"body":{"injectables/MapdataService.html":{}}}],["left",{"_index":540,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"miscellaneous/enumerations.html":{}}}],["left.px",{"_index":943,"title":{},"body":{"components/HoverComponent.html":{}}}],["legend",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"overview.html":{}}}],["letter",{"_index":967,"title":{},"body":{"components/HoverComponent.html":{}}}],["level",{"_index":655,"title":{},"body":{"injectables/ControlService.html":{}}}],["library",{"_index":1223,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["light",{"_index":981,"title":{},"body":{"injectables/LightService.html":{}}}],["light.position.set(x",{"_index":1015,"title":{},"body":{"injectables/LightService.html":{}}}],["light:three.light",{"_index":1008,"title":{},"body":{"injectables/LightService.html":{}}}],["lighter",{"_index":975,"title":{},"body":{"components/HoverComponent.html":{}}}],["lightintensity",{"_index":477,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["lightposition",{"_index":476,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["lightservice",{"_index":978,"title":{"injectables/LightService.html":{}},"body":{"injectables/LightService.html":{},"coverage.html":{}}}],["lighttype",{"_index":985,"title":{},"body":{"injectables/LightService.html":{},"miscellaneous/enumerations.html":{}}}],["lighttype.ambient",{"_index":1009,"title":{},"body":{"injectables/LightService.html":{}}}],["lighttype.directional",{"_index":1013,"title":{},"body":{"injectables/LightService.html":{}}}],["lighttype.point",{"_index":1011,"title":{},"body":{"injectables/LightService.html":{}}}],["lighttypes",{"_index":1016,"title":{},"body":{"injectables/LightService.html":{},"miscellaneous/enumerations.html":{}}}],["ligthing",{"_index":1558,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["list",{"_index":1286,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["listener",{"_index":1104,"title":{},"body":{"injectables/MapdataService.html":{}}}],["listing",{"_index":1289,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["literal",{"_index":744,"title":{},"body":{"classes/Coordinate.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["live",{"_index":114,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/TerminalLiveData.html":{},"coverage.html":{}}}],["load",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"classes/MapOverlay.html":{}}}],["loadcalled",{"_index":1022,"title":{},"body":{"classes/MapOverlay.html":{}}}],["loadcontrolconfig",{"_index":557,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["loaddata",{"_index":1024,"title":{},"body":{"classes/MapOverlay.html":{}}}],["loaded",{"_index":562,"title":{},"body":{"injectables/ConfigurationService.html":{},"interfaces/GeoDataProvider.html":{},"classes/MapOverlay.html":{}}}],["loader",{"_index":1023,"title":{},"body":{"classes/MapOverlay.html":{},"injectables/TextureLoaderService.html":{}}}],["loader.service.ts",{"_index":1421,"title":{},"body":{"injectables/TextureLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:15",{"_index":1437,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["loader.service.ts:19",{"_index":1426,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["loader.service.ts:40",{"_index":1428,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["loader.service.ts:54",{"_index":1431,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["loader/texture",{"_index":1420,"title":{},"body":{"injectables/TextureLoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":905,"title":{},"body":{"interfaces/GeoDataProvider.html":{}}}],["loadorbittextures",{"_index":1425,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["loads",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"classes/MapOverlay.html":{}}}],["longitude",{"_index":1353,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"classes/Satellite.html":{},"classes/TerminalLiveData.html":{}}}],["loop",{"_index":1554,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["längengrad",{"_index":848,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["main",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/variables.html":{}}}],["maintain",{"_index":1105,"title":{},"body":{"injectables/MapdataService.html":{}}}],["map",{"_index":107,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/enumerations.html":{}}}],["map(([uid",{"_index":832,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["map(uid",{"_index":828,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["mapdata",{"_index":1064,"title":{},"body":{"injectables/MapdataService.html":{}}}],["mapdataservice",{"_index":1061,"title":{"injectables/MapdataService.html":{}},"body":{"injectables/MapdataService.html":{},"coverage.html":{}}}],["mapdataservice.gpstouv(this.olview.getcenter",{"_index":1163,"title":{},"body":{"injectables/MapdataService.html":{}}}],["mapoverlay",{"_index":106,"title":{"classes/MapOverlay.html":{}},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/DataService.html":{},"classes/MapOverlay.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapoverlay(from",{"_index":145,"title":{},"body":{"classes/ApiResponse.html":{}}}],["mapoverlay.setloader(this",{"_index":232,"title":{},"body":{"injectables/ApiService.html":{}}}],["mapoverlay[]).foreach(mapoverlay",{"_index":231,"title":{},"body":{"injectables/ApiService.html":{}}}],["mapoverlaydata",{"_index":906,"title":{},"body":{"interfaces/GeoDataProvider.html":{}}}],["mapoverlaydata_endpoint",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{}}}],["mapoverlaygroupid",{"_index":1034,"title":{},"body":{"classes/MapOverlay.html":{},"miscellaneous/enumerations.html":{}}}],["mapoverlays",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{}}}],["mapped",{"_index":405,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["margin",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["maritime",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mat",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"injectables/BasicObjectService.html":{}}}],["mat.transparent",{"_index":527,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["mat:three.material",{"_index":499,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["matching",{"_index":72,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":391,"title":{},"body":{"injectables/BasicObjectService.html":{},"modules/MaterialModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["material/material.module",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":336,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["materialmodules",{"_index":1224,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":389,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["materialtype",{"_index":380,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/enumerations.html":{}}}],["materialtype.basic",{"_index":447,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["materialtype.lambert",{"_index":510,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["materialtype.phong",{"_index":508,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["materialtype.shader",{"_index":512,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["math.cos(tlat",{"_index":1366,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["math.cos(tlon",{"_index":1367,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["math.pi",{"_index":1359,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"miscellaneous/variables.html":{}}}],["math.sin(tlat",{"_index":1368,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["math.sin(tlon",{"_index":1369,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["maticonmodule",{"_index":1218,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1220,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodule",{"_index":1211,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodule",{"_index":1213,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1216,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattype",{"_index":392,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["maus",{"_index":1279,"title":{},"body":{"components/MenuComponent.html":{}}}],["maustaste",{"_index":1278,"title":{},"body":{"components/MenuComponent.html":{}}}],["maximum",{"_index":995,"title":{},"body":{"injectables/LightService.html":{}}}],["menu",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["menu.component.html",{"_index":1228,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1227,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":318,"title":{"components/MenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mesh",{"_index":371,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{}}}],["mesh.material",{"_index":1164,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{}}}],["mesh:three.mesh",{"_index":501,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{}}}],["meshcontrolerservice",{"_index":1240,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UiService.html":{}}}],["meshcontrollerservice",{"_index":1238,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["meta",{"_index":83,"title":{},"body":{"classes/ApiResponse.html":{}}}],["meta.class",{"_index":109,"title":{},"body":{"classes/ApiResponse.html":{}}}],["metadata",{"_index":98,"title":{},"body":{"classes/ApiResponse.html":{},"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"components/Visualizer3dComponent.html":{}}}],["metalisting",{"_index":96,"title":{"classes/MetaListing.html":{}},"body":{"classes/ApiResponse.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"coverage.html":{}}}],["metalisting(meta",{"_index":126,"title":{},"body":{"classes/ApiResponse.html":{}}}],["metasingle",{"_index":95,"title":{"classes/MetaSingle.html":{}},"body":{"classes/ApiResponse.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"coverage.html":{}}}],["metasingle(meta",{"_index":123,"title":{},"body":{"classes/ApiResponse.html":{}}}],["method",{"_index":1242,"title":{},"body":{"components/MenuComponent.html":{}}}],["methods",{"_index":84,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"interfaces/GeoDataProvider.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"injectables/ObjectPlacerService.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["min",{"_index":867,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["miscellaneous",{"_index":1665,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobility",{"_index":846,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/Terminal.html":{},"miscellaneous/enumerations.html":{}}}],["mobilitytype",{"_index":1395,"title":{},"body":{"classes/Terminal.html":{},"miscellaneous/enumerations.html":{}}}],["model",{"_index":528,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["model.material.side",{"_index":529,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["modelviewmatrix",{"_index":465,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":324,"title":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":326,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["mouse",{"_index":1461,"title":{},"body":{"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["mouselinke",{"_index":1277,"title":{},"body":{"components/MenuComponent.html":{}}}],["mousemausrad",{"_index":1282,"title":{},"body":{"components/MenuComponent.html":{}}}],["mousemove",{"_index":1550,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["mousepos",{"_index":1464,"title":{},"body":{"injectables/UiService.html":{}}}],["mousepos.absolute.x",{"_index":1495,"title":{},"body":{"injectables/UiService.html":{}}}],["mousepos.absolute.y",{"_index":1496,"title":{},"body":{"injectables/UiService.html":{}}}],["mouseposition",{"_index":1465,"title":{},"body":{"injectables/UiService.html":{}}}],["mousewheel",{"_index":601,"title":{},"body":{"injectables/ControlService.html":{}}}],["multi",{"_index":704,"title":{},"body":{"injectables/ControlService.html":{},"classes/Feature.html":{}}}],["multipolygon",{"_index":876,"title":{"classes/MultiPolygon.html":{}},"body":{"classes/Feature.html":{},"classes/MultiPolygon.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["multipolygon(from",{"_index":887,"title":{},"body":{"classes/Feature.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/functions.html":{}}}],["nav",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":26,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{}}}],["ng",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1538,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["ngmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["none",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":397,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["normalize(normalmatrix",{"_index":459,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["normalmap",{"_index":384,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["null",{"_index":446,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{}}}],["number",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"injectables/ObjectPlacerService.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["numbers",{"_index":748,"title":{},"body":{"classes/Coordinate.html":{}}}],["obervable",{"_index":1468,"title":{},"body":{"injectables/UiService.html":{}}}],["obj/mapoverlay",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{}}}],["obj/scsatellite",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{}}}],["obj/terminal",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{}}}],["obj/terminallivedata",{"_index":200,"title":{},"body":{"injectables/ApiService.html":{}}}],["object",{"_index":22,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"interfaces/GeoDataProvider.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["object.class",{"_index":52,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["object.class.ts",{"_index":74,"title":{},"body":{"classes/ApiObject.html":{},"coverage.html":{}}}],["object.class.ts:11",{"_index":77,"title":{},"body":{"classes/ApiObject.html":{}}}],["object.service.ts",{"_index":367,"title":{},"body":{"injectables/BasicObjectService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["object.service.ts:100",{"_index":442,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["object.service.ts:124",{"_index":413,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["object.service.ts:142",{"_index":431,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["object.service.ts:159",{"_index":419,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["object.service.ts:182",{"_index":386,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["object.service.ts:232",{"_index":403,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["object.service.ts:75",{"_index":378,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["object/basic",{"_index":366,"title":{},"body":{"injectables/BasicObjectService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["object2apiobject",{"_index":1611,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["object2apiobject(data",{"_index":132,"title":{},"body":{"classes/ApiResponse.html":{}}}],["object2apiobject(from",{"_index":135,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["object2apiobject(value",{"_index":131,"title":{},"body":{"classes/ApiResponse.html":{}}}],["object2geodata",{"_index":1608,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["object2geodata(from",{"_index":64,"title":{},"body":{"classes/ApiGeoData.html":{},"miscellaneous/functions.html":{}}}],["object2geodata(json.parse(geodata_raw",{"_index":60,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["object2geometry",{"_index":1619,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["object2geometry(from",{"_index":883,"title":{},"body":{"classes/Feature.html":{},"miscellaneous/functions.html":{}}}],["object2geometry(getpropertyvalue(\"geometry",{"_index":881,"title":{},"body":{"classes/Feature.html":{}}}],["objectgeneratorservice",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["objectplacerservice",{"_index":1332,"title":{"injectables/ObjectPlacerService.html":{}},"body":{"injectables/ObjectPlacerService.html":{},"coverage.html":{}}}],["objects",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["objname",{"_index":965,"title":{},"body":{"components/HoverComponent.html":{}}}],["objtype",{"_index":966,"title":{},"body":{"components/HoverComponent.html":{}}}],["observable",{"_index":763,"title":{},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"injectables/UiService.html":{}}}],["observables",{"_index":817,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["observer",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/Visualizer3dComponent.html":{},"dependencies.html":{}}}],["od",{"_index":1555,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["offline",{"_index":1683,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ol",{"_index":1121,"title":{},"body":{"injectables/MapdataService.html":{},"dependencies.html":{}}}],["ol/layer/tile",{"_index":1126,"title":{},"body":{"injectables/MapdataService.html":{}}}],["ol/source/osm",{"_index":1127,"title":{},"body":{"injectables/MapdataService.html":{}}}],["olmap",{"_index":1070,"title":{},"body":{"injectables/MapdataService.html":{}}}],["olmap:map",{"_index":1128,"title":{},"body":{"injectables/MapdataService.html":{}}}],["olview",{"_index":1071,"title":{},"body":{"injectables/MapdataService.html":{}}}],["olview:view",{"_index":1130,"title":{},"body":{"injectables/MapdataService.html":{}}}],["online",{"_index":1682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onmousemove(e",{"_index":1582,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["onresize",{"_index":1539,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["onzoom",{"_index":587,"title":{},"body":{"injectables/ControlService.html":{}}}],["onzoom(e",{"_index":624,"title":{},"body":{"injectables/ControlService.html":{}}}],["opacity",{"_index":937,"title":{},"body":{"components/HoverComponent.html":{}}}],["open",{"_index":1473,"title":{},"body":{"injectables/UiService.html":{}}}],["opened",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["openlayers",{"_index":1090,"title":{},"body":{"injectables/MapdataService.html":{}}}],["openstreetmap",{"_index":1116,"title":{},"body":{"injectables/MapdataService.html":{},"components/Visualizer3dComponent.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/functions.html":{}}}],["orbit",{"_index":612,"title":{},"body":{"injectables/ControlService.html":{}}}],["orbitcontrols",{"_index":576,"title":{},"body":{"injectables/ControlService.html":{}}}],["orbtitcontrolls",{"_index":605,"title":{},"body":{"injectables/ControlService.html":{}}}],["osm",{"_index":1114,"title":{},"body":{"injectables/MapdataService.html":{}}}],["othe",{"_index":1526,"title":{},"body":{"classes/Uid.html":{}}}],["otherwise",{"_index":1522,"title":{},"body":{"classes/Uid.html":{}}}],["out",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigData.html":{},"overview.html":{}}}],["ovelays",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{}}}],["over",{"_index":1463,"title":{},"body":{"injectables/UiService.html":{}}}],["overflow",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["overlay",{"_index":908,"title":{},"body":{"interfaces/GeoDataProvider.html":{},"classes/MapOverlay.html":{},"miscellaneous/enumerations.html":{}}}],["overlay.class",{"_index":108,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/DataService.html":{}}}],["overlay.class.ts",{"_index":1020,"title":{},"body":{"classes/MapOverlay.html":{},"coverage.html":{}}}],["overlay.class.ts:15",{"_index":1041,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:20",{"_index":1036,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:25",{"_index":1040,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:30",{"_index":1035,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:35",{"_index":1027,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:40",{"_index":1032,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:45",{"_index":1029,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:50",{"_index":1037,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:55",{"_index":1026,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:75",{"_index":1046,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overlay.class.ts:84",{"_index":1042,"title":{},"body":{"classes/MapOverlay.html":{}}}],["overview",{"_index":1708,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1640,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":864,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["page",{"_index":1290,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["pagesize",{"_index":1291,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["param",{"_index":54,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"interfaces/GeoDataProvider.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":1433,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["phong",{"_index":467,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["placer.service.ts",{"_index":1335,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"coverage.html":{}}}],["placer.service.ts:10",{"_index":1343,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["placer.service.ts:27",{"_index":1355,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["placer.service.ts:43",{"_index":1345,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["placer.service.ts:64",{"_index":1351,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["placer/object",{"_index":1334,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"coverage.html":{}}}],["point",{"_index":1018,"title":{},"body":{"injectables/LightService.html":{},"miscellaneous/enumerations.html":{}}}],["pointer",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{}}}],["polygon",{"_index":878,"title":{"classes/Polygon.html":{}},"body":{"classes/Feature.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["polygon(from",{"_index":885,"title":{},"body":{"classes/Feature.html":{}}}],["polygon.class",{"_index":877,"title":{},"body":{"classes/Feature.html":{},"classes/MultiPolygon.html":{}}}],["polygon.class.ts",{"_index":1322,"title":{},"body":{"classes/MultiPolygon.html":{},"coverage.html":{}}}],["polygon.class.ts:11",{"_index":1327,"title":{},"body":{"classes/MultiPolygon.html":{}}}],["polygon.class.ts:16",{"_index":1324,"title":{},"body":{"classes/MultiPolygon.html":{}}}],["polygons",{"_index":1323,"title":{},"body":{"classes/MultiPolygon.html":{}}}],["poppins",{"_index":955,"title":{},"body":{"components/HoverComponent.html":{}}}],["pos",{"_index":1478,"title":{},"body":{"injectables/UiService.html":{}}}],["pos1.x",{"_index":1481,"title":{},"body":{"injectables/UiService.html":{}}}],["pos1.y",{"_index":1483,"title":{},"body":{"injectables/UiService.html":{}}}],["pos2",{"_index":1480,"title":{},"body":{"injectables/UiService.html":{}}}],["pos2.x",{"_index":1482,"title":{},"body":{"injectables/UiService.html":{}}}],["pos2.y",{"_index":1484,"title":{},"body":{"injectables/UiService.html":{}}}],["position",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/variables.html":{}}}],["position.x",{"_index":944,"title":{},"body":{"components/HoverComponent.html":{}}}],["position.y",{"_index":946,"title":{},"body":{"components/HoverComponent.html":{}}}],["postion",{"_index":994,"title":{},"body":{"injectables/LightService.html":{}}}],["pressed",{"_index":617,"title":{},"body":{"injectables/ControlService.html":{}}}],["private",{"_index":85,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["projection",{"_index":1136,"title":{},"body":{"injectables/MapdataService.html":{}}}],["projectionmatrix",{"_index":464,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"interfaces/GeoDataProvider.html":{},"injectables/MapdataService.html":{}}}],["promise((resolve",{"_index":216,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/MapdataService.html":{}}}],["properties",{"_index":16,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/ConfigData.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"classes/Geometry.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["providedin",{"_index":211,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{}}}],["provider.interface",{"_index":209,"title":{},"body":{"injectables/ApiService.html":{},"classes/MapOverlay.html":{}}}],["provider.interface.ts",{"_index":904,"title":{},"body":{"interfaces/GeoDataProvider.html":{},"coverage.html":{}}}],["provider.interface.ts:12",{"_index":907,"title":{},"body":{"interfaces/GeoDataProvider.html":{}}}],["providers",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provisioned",{"_index":1685,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["public",{"_index":17,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["rad",{"_index":422,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["rad_2_deg",{"_index":1637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["radbot",{"_index":430,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["radbot:number",{"_index":494,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["radial",{"_index":427,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["radialseg",{"_index":418,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["radialseg:number",{"_index":496,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["radialseg:number=32",{"_index":504,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["radians",{"_index":1348,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":423,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/HoverComponent.html":{},"injectables/ObjectPlacerService.html":{}}}],["radtop",{"_index":433,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["range",{"_index":996,"title":{},"body":{"injectables/LightService.html":{}}}],["ratation",{"_index":654,"title":{},"body":{"injectables/ControlService.html":{}}}],["raycast",{"_index":1113,"title":{},"body":{"injectables/MapdataService.html":{}}}],["raycaster",{"_index":1082,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/UiService.html":{}}}],["raycasts",{"_index":1488,"title":{},"body":{"injectables/UiService.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"injectables/ApiService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"classes/MapOverlay.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/UiService.html":{},"classes/Uid.html":{}}}],["reason",{"_index":226,"title":{},"body":{"injectables/ApiService.html":{}}}],["rect",{"_index":1574,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["rect.height",{"_index":1578,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["rect.x",{"_index":1579,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["rect.y",{"_index":1580,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["reject",{"_index":217,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/MapdataService.html":{}}}],["reject(\"could",{"_index":1147,"title":{},"body":{"injectables/MapdataService.html":{}}}],["reject(reason",{"_index":224,"title":{},"body":{"injectables/ApiService.html":{}}}],["rejected",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/MapdataService.html":{}}}],["related",{"_index":1065,"title":{},"body":{"injectables/MapdataService.html":{}}}],["relative",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["relpos",{"_index":481,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["relpos.x",{"_index":484,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["relpos.y",{"_index":485,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["rendered",{"_index":1120,"title":{},"body":{"injectables/MapdataService.html":{}}}],["representing",{"_index":80,"title":{},"body":{"classes/ApiResponse.html":{},"classes/Feature.html":{},"miscellaneous/functions.html":{}}}],["represents",{"_index":12,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{}}}],["reset",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizeobserver",{"_index":1564,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["resizeobservermodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["resizes",{"_index":1561,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["resizing",{"_index":1565,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["resolution",{"_index":1094,"title":{},"body":{"injectables/MapdataService.html":{}}}],["resolve(apiresponse",{"_index":222,"title":{},"body":{"injectables/ApiService.html":{}}}],["resolve(canvas",{"_index":1149,"title":{},"body":{"injectables/MapdataService.html":{}}}],["resolve(configdata",{"_index":567,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["resolved",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ConfigurationService.html":{},"injectables/MapdataService.html":{}}}],["response",{"_index":81,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"miscellaneous/functions.html":{}}}],["response.class",{"_index":206,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{}}}],["response.class.ts",{"_index":79,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["response.class.ts:19",{"_index":97,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.class.ts:24",{"_index":94,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.class.ts:29",{"_index":90,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.class.ts:50",{"_index":105,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.class.ts:72",{"_index":100,"title":{},"body":{"classes/ApiResponse.html":{}}}],["responsible",{"_index":1063,"title":{},"body":{"injectables/MapdataService.html":{}}}],["result",{"_index":71,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.json().then",{"_index":565,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["results",{"_index":73,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":69,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Feature.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"classes/Uid.html":{}}}],["returns",{"_index":62,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"interfaces/GeoDataProvider.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"injectables/ObjectPlacerService.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/functions.html":{}}}],["rgba($color",{"_index":949,"title":{},"body":{"components/HoverComponent.html":{}}}],["right",{"_index":541,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":212,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{}}}],["root'},{'name",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["rootelement",{"_index":1544,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["rot",{"_index":1270,"title":{},"body":{"components/MenuComponent.html":{}}}],["rotate",{"_index":645,"title":{},"body":{"injectables/ControlService.html":{}}}],["rotatefactor",{"_index":577,"title":{},"body":{"injectables/ControlService.html":{}}}],["rotatefactor:number",{"_index":666,"title":{},"body":{"injectables/ControlService.html":{}}}],["rotation",{"_index":631,"title":{},"body":{"injectables/ControlService.html":{}}}],["row",{"_index":953,"title":{},"body":{"components/HoverComponent.html":{}}}],["rxjs",{"_index":776,"title":{},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"injectables/UiService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":777,"title":{},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"injectables/UiService.html":{}}}],["sampler2d",{"_index":471,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["sans",{"_index":956,"title":{},"body":{"components/HoverComponent.html":{}}}],["satconnect.com",{"_index":1703,"title":{},"body":{"index.html":{}}}],["satconnect_demo_develop_backend",{"_index":214,"title":{},"body":{"injectables/ApiService.html":{}}}],["satellite",{"_index":110,"title":{"classes/Satellite.html":{}},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/Satellite.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["satellite(from",{"_index":143,"title":{},"body":{"classes/ApiResponse.html":{}}}],["satellite.class",{"_index":111,"title":{},"body":{"classes/ApiResponse.html":{}}}],["satellite.id",{"_index":845,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["satellite.longitude",{"_index":850,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["satellite.name",{"_index":842,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["satellite_endpoint",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{}}}],["satellitedata",{"_index":810,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["satelliten",{"_index":1272,"title":{},"body":{"components/MenuComponent.html":{}}}],["satellites",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["satellites.filter(satellite",{"_index":833,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["saved",{"_index":1435,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["scale",{"_index":475,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["scene",{"_index":598,"title":{},"body":{"injectables/ControlService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["sceneservice",{"_index":1543,"title":{},"body":{"components/Visualizer3dComponent.html":{},"coverage.html":{}}}],["scenesevice",{"_index":1546,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["schemas",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["screenspace",{"_index":1493,"title":{},"body":{"injectables/UiService.html":{}}}],["scroll",{"_index":657,"title":{},"body":{"injectables/ControlService.html":{}}}],["scrollfactor",{"_index":578,"title":{},"body":{"injectables/ControlService.html":{}}}],["scrollfactor:number",{"_index":667,"title":{},"body":{"injectables/ControlService.html":{}}}],["scsatellite",{"_index":1686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["second",{"_index":1521,"title":{},"body":{"classes/Uid.html":{}}}],["segements",{"_index":438,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["segemnts",{"_index":428,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["segments",{"_index":445,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["selector",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["sericearea",{"_index":1692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["serif",{"_index":957,"title":{},"body":{"components/HoverComponent.html":{}}}],["service",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["service/api/api.service",{"_index":774,"title":{},"body":{"injectables/DataService.html":{}}}],["service/configuration/config",{"_index":563,"title":{},"body":{"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{}}}],["service/control/control.service",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["service/data/data.service",{"_index":824,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{}}}],["service/mesh",{"_index":1254,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UiService.html":{}}}],["service/scene/scene.service",{"_index":1567,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["service/ui/ui.service",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["services",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["set",{"_index":524,"title":{},"body":{"injectables/BasicObjectService.html":{},"classes/MapOverlay.html":{}}}],["setloader",{"_index":1025,"title":{},"body":{"classes/MapOverlay.html":{}}}],["setloader(loader",{"_index":1045,"title":{},"body":{"classes/MapOverlay.html":{}}}],["sets",{"_index":993,"title":{},"body":{"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/TextureLoaderService.html":{},"components/Visualizer3dComponent.html":{}}}],["setup",{"_index":1557,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["shader",{"_index":451,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["shadermaterial",{"_index":1429,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["shading",{"_index":468,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":961,"title":{},"body":{"components/HoverComponent.html":{}}}],["shininess",{"_index":478,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["show",{"_index":1244,"title":{},"body":{"components/MenuComponent.html":{}}}],["showbeams",{"_index":1229,"title":{},"body":{"components/MenuComponent.html":{}}}],["showsatellites",{"_index":1230,"title":{},"body":{"components/MenuComponent.html":{}}}],["showteleports",{"_index":1231,"title":{},"body":{"components/MenuComponent.html":{}}}],["showterminals",{"_index":1232,"title":{},"body":{"components/MenuComponent.html":{}}}],["side",{"_index":408,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["sidenav",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["single",{"_index":1306,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["size",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["sort",{"_index":1292,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["sorted",{"_index":1303,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ConfigurationService.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{}}}],["space",{"_index":862,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["spacing",{"_index":968,"title":{},"body":{"components/HoverComponent.html":{}}}],["speccolor",{"_index":480,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["specular",{"_index":398,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["specularmap",{"_index":385,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["speed",{"_index":630,"title":{},"body":{"injectables/ControlService.html":{}}}],["speed:number",{"_index":733,"title":{},"body":{"injectables/ControlService.html":{}}}],["sphere",{"_index":443,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["spherical",{"_index":1346,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["src/.../aggregated",{"_index":1667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../api",{"_index":1669,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../basic",{"_index":1677,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../control.service.ts",{"_index":1671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../feature.class.ts",{"_index":1698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../geo",{"_index":1672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../geometry",{"_index":1673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light.service.ts",{"_index":1674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../map",{"_index":1675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../material.module.ts",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mobility",{"_index":1678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scene.service.ts",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/component/detail/detail.component.ts",{"_index":803,"title":{},"body":{"components/DetailComponent.html":{},"coverage.html":{}}}],["src/app/component/detail/detail.component.ts:24",{"_index":821,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/component/detail/detail.component.ts:28",{"_index":822,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/component/detail/detail.component.ts:32",{"_index":814,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/component/detail/detail.component.ts:40",{"_index":823,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/component/detail/detail.component.ts:65",{"_index":819,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/component/hover/hover.component.ts",{"_index":918,"title":{},"body":{"components/HoverComponent.html":{},"coverage.html":{}}}],["src/app/component/hover/hover.component.ts:39",{"_index":927,"title":{},"body":{"components/HoverComponent.html":{}}}],["src/app/component/hover/hover.component.ts:43",{"_index":928,"title":{},"body":{"components/HoverComponent.html":{}}}],["src/app/component/hover/hover.component.ts:47",{"_index":923,"title":{},"body":{"components/HoverComponent.html":{}}}],["src/app/component/hover/hover.component.ts:55",{"_index":929,"title":{},"body":{"components/HoverComponent.html":{}}}],["src/app/component/hover/hover.component.ts:83",{"_index":925,"title":{},"body":{"components/HoverComponent.html":{}}}],["src/app/component/menu/menu.component.ts",{"_index":1225,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/component/menu/menu.component.ts:19",{"_index":1252,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/menu/menu.component.ts:23",{"_index":1253,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/menu/menu.component.ts:27",{"_index":1251,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/menu/menu.component.ts:31",{"_index":1239,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/menu/menu.component.ts:47",{"_index":1247,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/menu/menu.component.ts:60",{"_index":1249,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/menu/menu.component.ts:73",{"_index":1246,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/menu/menu.component.ts:86",{"_index":1241,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts",{"_index":1532,"title":{},"body":{"components/Visualizer3dComponent.html":{},"coverage.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts:20",{"_index":1563,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts:24",{"_index":1545,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts:41",{"_index":1559,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts:54",{"_index":1560,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts:66",{"_index":1549,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts:79",{"_index":1556,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["src/app/component/visualizer3d/visualizer3d.component.ts:89",{"_index":1551,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["src/app/entity/data/aggregated",{"_index":1679,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/entity/data/api",{"_index":6,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/entity/data/geo",{"_index":208,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GeoDataProvider.html":{},"coverage.html":{}}}],["src/app/entity/data/has",{"_index":779,"title":{},"body":{"injectables/DataService.html":{},"interfaces/HasUid.html":{},"coverage.html":{}}}],["src/app/entity/data/map",{"_index":210,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"classes/MapOverlay.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/entity/data/meta.class.ts",{"_index":1285,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"coverage.html":{}}}],["src/app/entity/data/meta.class.ts:10",{"_index":1320,"title":{},"body":{"classes/MetaSingle.html":{}}}],["src/app/entity/data/meta.class.ts:15",{"_index":1319,"title":{},"body":{"classes/MetaSingle.html":{}}}],["src/app/entity/data/meta.class.ts:34",{"_index":1299,"title":{},"body":{"classes/MetaListing.html":{}}}],["src/app/entity/data/meta.class.ts:39",{"_index":1304,"title":{},"body":{"classes/MetaListing.html":{}}}],["src/app/entity/data/meta.class.ts:44",{"_index":1295,"title":{},"body":{"classes/MetaListing.html":{}}}],["src/app/entity/data/meta.class.ts:49",{"_index":1296,"title":{},"body":{"classes/MetaListing.html":{}}}],["src/app/entity/data/meta.class.ts:54",{"_index":1301,"title":{},"body":{"classes/MetaListing.html":{}}}],["src/app/entity/data/meta.class.ts:59",{"_index":1300,"title":{},"body":{"classes/MetaListing.html":{}}}],["src/app/entity/data/meta.class.ts:64",{"_index":1294,"title":{},"body":{"classes/MetaListing.html":{}}}],["src/app/entity/data/mobility",{"_index":1693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/entity/data/satellite.class",{"_index":781,"title":{},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["src/app/entity/data/satellite.class.ts",{"_index":1384,"title":{},"body":{"classes/Satellite.html":{},"coverage.html":{}}}],["src/app/entity/data/satellite.class.ts:13",{"_index":1388,"title":{},"body":{"classes/Satellite.html":{}}}],["src/app/entity/data/satellite.class.ts:18",{"_index":1386,"title":{},"body":{"classes/Satellite.html":{}}}],["src/app/entity/data/satellite.class.ts:23",{"_index":1387,"title":{},"body":{"classes/Satellite.html":{}}}],["src/app/entity/data/satellite.class.ts:28",{"_index":1385,"title":{},"body":{"classes/Satellite.html":{}}}],["src/app/entity/data/satellite.class.ts:45",{"_index":1389,"title":{},"body":{"classes/Satellite.html":{}}}],["src/app/entity/data/terminal",{"_index":782,"title":{},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/TerminalLiveData.html":{},"coverage.html":{}}}],["src/app/entity/data/terminal.class",{"_index":783,"title":{},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["src/app/entity/data/terminal.class.ts",{"_index":1394,"title":{},"body":{"classes/Terminal.html":{},"coverage.html":{}}}],["src/app/entity/data/terminal.class.ts:13",{"_index":1399,"title":{},"body":{"classes/Terminal.html":{}}}],["src/app/entity/data/terminal.class.ts:18",{"_index":1397,"title":{},"body":{"classes/Terminal.html":{}}}],["src/app/entity/data/terminal.class.ts:23",{"_index":1398,"title":{},"body":{"classes/Terminal.html":{}}}],["src/app/entity/data/terminal.class.ts:28",{"_index":1396,"title":{},"body":{"classes/Terminal.html":{}}}],["src/app/entity/data/terminal.class.ts:45",{"_index":1400,"title":{},"body":{"classes/Terminal.html":{}}}],["src/app/entity/data/uid.class",{"_index":1490,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/entity/data/uid.class.ts",{"_index":1506,"title":{},"body":{"classes/Uid.html":{},"coverage.html":{}}}],["src/app/entity/data/uid.class.ts:15",{"_index":1514,"title":{},"body":{"classes/Uid.html":{}}}],["src/app/entity/data/uid.class.ts:16",{"_index":1513,"title":{},"body":{"classes/Uid.html":{}}}],["src/app/entity/data/uid.class.ts:25",{"_index":1517,"title":{},"body":{"classes/Uid.html":{}}}],["src/app/entity/data/uid.class.ts:39",{"_index":1524,"title":{},"body":{"classes/Uid.html":{}}}],["src/app/entity/data/uid.class.ts:7",{"_index":1512,"title":{},"body":{"classes/Uid.html":{}}}],["src/app/entity/geo/coordinate.class.ts",{"_index":739,"title":{},"body":{"classes/Coordinate.html":{},"coverage.html":{}}}],["src/app/entity/geo/coordinate.class.ts:10",{"_index":749,"title":{},"body":{"classes/Coordinate.html":{}}}],["src/app/entity/geo/coordinate.class.ts:15",{"_index":745,"title":{},"body":{"classes/Coordinate.html":{}}}],["src/app/entity/geo/feature",{"_index":888,"title":{},"body":{"classes/FeatureCollection.html":{},"coverage.html":{}}}],["src/app/entity/geo/feature.class.ts",{"_index":871,"title":{},"body":{"classes/Feature.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/entity/geo/feature.class.ts:19",{"_index":873,"title":{},"body":{"classes/Feature.html":{}}}],["src/app/entity/geo/geo",{"_index":900,"title":{},"body":{"classes/GeoData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/entity/geo/geometry",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/entity/geo/gometry.class.ts",{"_index":909,"title":{},"body":{"classes/Geometry.html":{},"coverage.html":{}}}],["src/app/entity/geo/gometry.class.ts:9",{"_index":911,"title":{},"body":{"classes/Geometry.html":{}}}],["src/app/entity/geo/multi",{"_index":1321,"title":{},"body":{"classes/MultiPolygon.html":{},"coverage.html":{}}}],["src/app/entity/geo/polygon.class.ts",{"_index":1373,"title":{},"body":{"classes/Polygon.html":{},"coverage.html":{}}}],["src/app/entity/geo/polygon.class.ts:10",{"_index":1377,"title":{},"body":{"classes/Polygon.html":{}}}],["src/app/entity/geo/polygon.class.ts:15",{"_index":1376,"title":{},"body":{"classes/Polygon.html":{}}}],["src/app/entity/geo/polygon.class.ts:20",{"_index":1375,"title":{},"body":{"classes/Polygon.html":{}}}],["src/app/material/material.module.ts",{"_index":1208,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/api/api.service.ts",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/service/api/api.service.ts:112",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:133",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:18",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:22",{"_index":203,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:26",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:30",{"_index":198,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:34",{"_index":201,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:38",{"_index":168,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:52",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:72",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/api/api.service.ts:92",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/service/basic",{"_index":365,"title":{},"body":{"injectables/BasicObjectService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/configuration/config",{"_index":535,"title":{},"body":{"classes/ConfigData.html":{},"coverage.html":{}}}],["src/app/service/configuration/configuration.service.ts",{"_index":554,"title":{},"body":{"injectables/ConfigurationService.html":{},"coverage.html":{}}}],["src/app/service/configuration/configuration.service.ts:10",{"_index":558,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/app/service/configuration/configuration.service.ts:22",{"_index":559,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/app/service/control/control.service.ts",{"_index":568,"title":{},"body":{"injectables/ControlService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/service/control/control.service.ts:105",{"_index":602,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:114",{"_index":627,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:164",{"_index":607,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:182",{"_index":593,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:193",{"_index":615,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:20",{"_index":638,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:208",{"_index":622,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:223",{"_index":625,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:236",{"_index":629,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:24",{"_index":650,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:28",{"_index":633,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:32",{"_index":648,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:36",{"_index":658,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:40",{"_index":653,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:44",{"_index":656,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:48",{"_index":642,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:52",{"_index":590,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:71",{"_index":611,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/control/control.service.ts:94",{"_index":600,"title":{},"body":{"injectables/ControlService.html":{}}}],["src/app/service/data/data.service.ts",{"_index":758,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/service/data/data.service.ts:15",{"_index":772,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:16",{"_index":770,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:17",{"_index":768,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:18",{"_index":764,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:19",{"_index":765,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:21",{"_index":773,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:22",{"_index":769,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:23",{"_index":771,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:24",{"_index":761,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/data/data.service.ts:37",{"_index":762,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/service/light/light.service.ts",{"_index":979,"title":{},"body":{"injectables/LightService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/service/light/light.service.ts:10",{"_index":983,"title":{},"body":{"injectables/LightService.html":{}}}],["src/app/service/light/light.service.ts:35",{"_index":990,"title":{},"body":{"injectables/LightService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts",{"_index":1062,"title":{},"body":{"injectables/MapdataService.html":{},"coverage.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:106",{"_index":1091,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:119",{"_index":1103,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:136",{"_index":1085,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:163",{"_index":1108,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:19",{"_index":1122,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:207",{"_index":1111,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:222",{"_index":1097,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:23",{"_index":1115,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:27",{"_index":1124,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:31",{"_index":1118,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:35",{"_index":1080,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:55",{"_index":1101,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mapdata/mapdata.service.ts:95",{"_index":1089,"title":{},"body":{"injectables/MapdataService.html":{}}}],["src/app/service/mesh",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["src/app/service/object",{"_index":1333,"title":{},"body":{"injectables/ObjectPlacerService.html":{},"coverage.html":{}}}],["src/app/service/scene/scene.service.ts",{"_index":1634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/texture",{"_index":1419,"title":{},"body":{"injectables/TextureLoaderService.html":{},"coverage.html":{}}}],["src/app/service/ui/ui.service.ts",{"_index":1449,"title":{},"body":{"injectables/UiService.html":{},"coverage.html":{}}}],["src/app/service/ui/ui.service.ts:22",{"_index":1487,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:26",{"_index":1476,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:30",{"_index":1475,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:34",{"_index":1470,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:38",{"_index":1467,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:42",{"_index":1486,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:46",{"_index":1485,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:50",{"_index":1457,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/service/ui/ui.service.ts:74",{"_index":1459,"title":{},"body":{"injectables/UiService.html":{}}}],["stars.diffuse.8192x4096.jpg",{"_index":1448,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["start",{"_index":860,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["started",{"_index":1700,"title":{"index.html":{}},"body":{}}],["state",{"_index":930,"title":{},"body":{"components/HoverComponent.html":{}}}],["state(\"hidden",{"_index":938,"title":{},"body":{"components/HoverComponent.html":{}}}],["state(\"visible",{"_index":936,"title":{},"body":{"components/HoverComponent.html":{}}}],["statements",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{},"classes/Uid.html":{}}}],["status",{"_index":1293,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/TerminalLiveData.html":{},"miscellaneous/enumerations.html":{}}}],["status.enum",{"_index":1411,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["status.enum.ts",{"_index":1668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steuerung",{"_index":1274,"title":{},"body":{"components/MenuComponent.html":{}}}],["string",{"_index":58,"title":{},"body":{"classes/ApiGeoData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/ConfigData.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"injectables/TextureLoaderService.html":{}}}],["style",{"_index":931,"title":{},"body":{"components/HoverComponent.html":{}}}],["styles",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["styleurls",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["subclass",{"_index":134,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["subject",{"_index":1472,"title":{},"body":{"injectables/UiService.html":{}}}],["super",{"_index":55,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/FeatureCollection.html":{},"classes/MapOverlay.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["superclass",{"_index":901,"title":{},"body":{"classes/GeoData.html":{},"classes/Geometry.html":{}}}],["supertype",{"_index":76,"title":{},"body":{"classes/ApiObject.html":{}}}],["support",{"_index":1704,"title":{},"body":{"modules.html":{}}}],["surface",{"_index":659,"title":{},"body":{"injectables/ControlService.html":{}}}],["surfacealt",{"_index":579,"title":{},"body":{"injectables/ControlService.html":{}}}],["surfacealt:number",{"_index":665,"title":{},"body":{"injectables/ControlService.html":{}}}],["surfacealtitude",{"_index":613,"title":{},"body":{"injectables/ControlService.html":{}}}],["suspended",{"_index":1684,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":1705,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":66,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiResponse.html":{},"injectables/BasicObjectService.html":{},"classes/Feature.html":{},"injectables/LightService.html":{}}}],["table",{"_index":972,"title":{},"body":{"components/HoverComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1140,"title":{},"body":{"injectables/MapdataService.html":{}}}],["tasks",{"_index":1066,"title":{},"body":{"injectables/MapdataService.html":{}}}],["tcoords",{"_index":1356,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["tcoords.x",{"_index":1357,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["tcoords.y",{"_index":1360,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["tcoords.z",{"_index":1362,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["td",{"_index":976,"title":{},"body":{"components/HoverComponent.html":{}}}],["teleports",{"_index":1248,"title":{},"body":{"components/MenuComponent.html":{}}}],["template",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["templateurl",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["terminal",{"_index":113,"title":{"classes/Terminal.html":{}},"body":{"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["terminal(from",{"_index":139,"title":{},"body":{"classes/ApiResponse.html":{}}}],["terminal.class",{"_index":115,"title":{},"body":{"classes/ApiResponse.html":{}}}],["terminal.id",{"_index":844,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminal.id)[0",{"_index":839,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminal.mobilitytype",{"_index":847,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminal.name",{"_index":843,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminal_endpoint",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{}}}],["terminaldata",{"_index":811,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminallivedata",{"_index":112,"title":{"classes/TerminalLiveData.html":{}},"body":{"classes/ApiResponse.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"classes/TerminalLiveData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["terminallivedata(from",{"_index":141,"title":{},"body":{"classes/ApiResponse.html":{}}}],["terminallivedata.latitude",{"_index":852,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminallivedata.longitude",{"_index":849,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminallivedata_endpoint",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{}}}],["terminallivedate",{"_index":816,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["terminals",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["terminals.filter(terminal",{"_index":837,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["tex",{"_index":1446,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["text",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{}}}],["texture",{"_index":404,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/TextureLoaderService.html":{}}}],["texture_path",{"_index":1422,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["texture_path:string",{"_index":1439,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["textured",{"_index":1430,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["texturefactor",{"_index":1093,"title":{},"body":{"injectables/MapdataService.html":{}}}],["textureloader",{"_index":1423,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["textureloader:three.textureloader",{"_index":1438,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["textureloaderservice",{"_index":1418,"title":{"injectables/TextureLoaderService.html":{}},"body":{"injectables/TextureLoaderService.html":{},"coverage.html":{}}}],["textures",{"_index":1434,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["th",{"_index":973,"title":{},"body":{"components/HoverComponent.html":{}}}],["that.clickedobjectid$.next(intersects[0].object.userdata",{"_index":1504,"title":{},"body":{"injectables/UiService.html":{}}}],["that.detailsopen",{"_index":1503,"title":{},"body":{"injectables/UiService.html":{}}}],["then(object",{"_index":219,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.addkeyboardevents(canvas",{"_index":690,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.aggregatedstatus",{"_index":1412,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["this.altitude",{"_index":1416,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["this.animate",{"_index":1570,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.apiservice.getmapoverlaydata().then(apiresponse",{"_index":801,"title":{},"body":{"injectables/DataService.html":{}}}],["this.apiservice.getsatellites().then(apiresponse",{"_index":795,"title":{},"body":{"injectables/DataService.html":{}}}],["this.apiservice.getterminallivedata().then(apiresponse",{"_index":799,"title":{},"body":{"injectables/DataService.html":{}}}],["this.apiservice.getterminals().then(apiresponse",{"_index":797,"title":{},"body":{"injectables/DataService.html":{}}}],["this.calccoords(this.transfromlatlon(new",{"_index":1371,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["this.centerrc",{"_index":1133,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.centerrc.intersectobject(mesh",{"_index":1157,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.centerrc.setfromcamera({x",{"_index":1155,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.changemapdataonzoom(controls",{"_index":1153,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.clickedobjectid$.asobservable().pipe(distinctuntilchanged(uid.equal",{"_index":1466,"title":{},"body":{"injectables/UiService.html":{}}}],["this.color",{"_index":1056,"title":{},"body":{"classes/MapOverlay.html":{}}}],["this.controls[controlkeys.down",{"_index":719,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.controls[controlkeys.left",{"_index":713,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.controls[controlkeys.right",{"_index":715,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.controls[controlkeys.up",{"_index":717,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.controls[controlkeys.zoomin",{"_index":721,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.controls[controlkeys.zoomout",{"_index":723,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.coordinates",{"_index":1379,"title":{},"body":{"classes/Polygon.html":{}}}],["this.count",{"_index":1309,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["this.counttotal",{"_index":1311,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["this.creatematerial(mattype",{"_index":486,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["this.createmesh(geo",{"_index":487,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["this.data",{"_index":129,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/DataService.html":{}}}],["this.data$.asobservable().pipe(filter(value",{"_index":1028,"title":{},"body":{"classes/MapOverlay.html":{}}}],["this.data$.next(apiresponse.data",{"_index":1060,"title":{},"body":{"classes/MapOverlay.html":{}}}],["this.detailedlayer",{"_index":1134,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.errors",{"_index":119,"title":{},"body":{"classes/ApiResponse.html":{}}}],["this.features",{"_index":896,"title":{},"body":{"classes/FeatureCollection.html":{}}}],["this.geodata",{"_index":59,"title":{},"body":{"classes/ApiGeoData.html":{}}}],["this.geometry",{"_index":880,"title":{},"body":{"classes/Feature.html":{}}}],["this.gettexturefactor",{"_index":1167,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.groupid",{"_index":1054,"title":{},"body":{"classes/MapOverlay.html":{}}}],["this.holes",{"_index":1382,"title":{},"body":{"classes/Polygon.html":{}}}],["this.hoveredobjectid$.asobservable().pipe(distinctuntilchanged(uid.equal",{"_index":1474,"title":{},"body":{"injectables/UiService.html":{}}}],["this.hoveredobjectid$.next(intersects[0].object.userdata",{"_index":1505,"title":{},"body":{"injectables/UiService.html":{}}}],["this.hoveredobjectid$.next(null",{"_index":1501,"title":{},"body":{"injectables/UiService.html":{}}}],["this.hoverposition$.asobservable().pipe(filter(pos",{"_index":1477,"title":{},"body":{"injectables/UiService.html":{}}}],["this.hoverposition$.next",{"_index":1494,"title":{},"body":{"injectables/UiService.html":{}}}],["this.http.get(`${apiservice.base_url}/api/${apiservice.version}/${apiservice.mapoverlaydata_endpoint}/${id}/geodata`).topromise",{"_index":233,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${apiservice.base_url}/api/${apiservice.version}/${apiservice.mapoverlaydata_endpoint}`).topromise",{"_index":229,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${apiservice.base_url}/api/${apiservice.version}/${apiservice.satellite_endpoint}`).topromise",{"_index":218,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${apiservice.base_url}/api/${apiservice.version}/${apiservice.terminal_endpoint}`).topromise",{"_index":227,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${apiservice.base_url}/api/${apiservice.version}/${apiservice.terminallivedata_endpoint}`).topromise",{"_index":228,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.id",{"_index":1050,"title":{},"body":{"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["this.initdata(from",{"_index":118,"title":{},"body":{"classes/ApiResponse.html":{}}}],["this.initialresolution",{"_index":1142,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.initkeyboardcontrols(configdata",{"_index":689,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.initmeta(from",{"_index":117,"title":{},"body":{"classes/ApiResponse.html":{}}}],["this.initscene",{"_index":1569,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.iskeydown(e",{"_index":726,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.iskeyup(e",{"_index":728,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyboardrotatefactor",{"_index":701,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyboardzoomfactor",{"_index":711,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyspressed[e.key",{"_index":731,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyspressed[this.controls[controlkeys.down",{"_index":696,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyspressed[this.controls[controlkeys.left",{"_index":693,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyspressed[this.controls[controlkeys.right",{"_index":694,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyspressed[this.controls[controlkeys.up",{"_index":695,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyspressed[this.controls[controlkeys.zoomin",{"_index":697,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.keyspressed[this.controls[controlkeys.zoomout",{"_index":698,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.latitude",{"_index":1414,"title":{},"body":{"classes/TerminalLiveData.html":{}}}],["this.loadcalled",{"_index":1058,"title":{},"body":{"classes/MapOverlay.html":{}}}],["this.loader",{"_index":1044,"title":{},"body":{"classes/MapOverlay.html":{}}}],["this.loader.getmapoverlaygeodata(this.id).then",{"_index":1059,"title":{},"body":{"classes/MapOverlay.html":{}}}],["this.longitude",{"_index":1391,"title":{},"body":{"classes/Satellite.html":{},"classes/TerminalLiveData.html":{}}}],["this.mapoverlays",{"_index":790,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mapoverlays$.asobservable",{"_index":791,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mapoverlays$.next(apiresponse.data",{"_index":802,"title":{},"body":{"injectables/DataService.html":{}}}],["this.meshcontrollerservice.hidemapoverlays",{"_index":1268,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meshcontrollerservice.hidesatellites",{"_index":1265,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meshcontrollerservice.hideteleports",{"_index":1259,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meshcontrollerservice.hideterminals",{"_index":1262,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meshcontrollerservice.showmapoverlays",{"_index":1267,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meshcontrollerservice.showsatellites",{"_index":1264,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meshcontrollerservice.showteleports",{"_index":1258,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meshcontrollerservice.showterminals",{"_index":1261,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.meta",{"_index":122,"title":{},"body":{"classes/ApiResponse.html":{}}}],["this.meta.listing",{"_index":127,"title":{},"body":{"classes/ApiResponse.html":{}}}],["this.mobilitytype",{"_index":1401,"title":{},"body":{"classes/Terminal.html":{}}}],["this.name",{"_index":1052,"title":{},"body":{"classes/MapOverlay.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{}}}],["this.observer",{"_index":1572,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.observer.observe(this.rootelement.nativeelement",{"_index":1573,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.olmap",{"_index":1139,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olmap.once(\"rendercomplete",{"_index":1144,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview",{"_index":1135,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.getresolution",{"_index":1143,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setcenter(mapdataservice.uvtogps(uv",{"_index":1162,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(1",{"_index":1171,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(10",{"_index":1188,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(11",{"_index":1190,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(12",{"_index":1192,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(13",{"_index":1194,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(14",{"_index":1196,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(15",{"_index":1197,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(16",{"_index":1199,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(2",{"_index":1173,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(3",{"_index":1175,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(4",{"_index":1177,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(5",{"_index":1178,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(6",{"_index":1180,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(7",{"_index":1182,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(8",{"_index":1184,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.olview.setzoom(9",{"_index":1186,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.onresize",{"_index":1571,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.onzoom(e",{"_index":692,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols",{"_index":673,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.azimuthrotatespeed",{"_index":700,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.dampingfactor",{"_index":679,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.distance",{"_index":734,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.dolly",{"_index":710,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.dolly(this.keyboardzoomfactor",{"_index":708,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.dollyspeed",{"_index":709,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.maxdistance",{"_index":677,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.mindistance",{"_index":675,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.mousebuttons.left",{"_index":681,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.mousebuttons.middle",{"_index":687,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.mousebuttons.right",{"_index":685,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.mousebuttons.wheel",{"_index":683,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.polarrotatespeed",{"_index":703,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.rotate",{"_index":699,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.rotate((this.orbitcontrols.azimuthrotatespeed",{"_index":705,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.orbitcontrols.rotate(0",{"_index":707,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.page",{"_index":1315,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["this.pagesize",{"_index":1313,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["this.polygons",{"_index":1329,"title":{},"body":{"classes/MultiPolygon.html":{}}}],["this.raycaster",{"_index":1492,"title":{},"body":{"injectables/UiService.html":{}}}],["this.raycaster.intersectobjects(this.meshcontrollerservice.gethovergroup().children",{"_index":1499,"title":{},"body":{"injectables/UiService.html":{}}}],["this.raycaster.setfromcamera(mousepos.screenspace",{"_index":1497,"title":{},"body":{"injectables/UiService.html":{}}}],["this.rootelement.nativeelement",{"_index":1575,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.rotatefactor",{"_index":735,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.satellitedata",{"_index":826,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["this.satellites",{"_index":786,"title":{},"body":{"injectables/DataService.html":{}}}],["this.satellites$.asobservable",{"_index":787,"title":{},"body":{"injectables/DataService.html":{}}}],["this.satellites$.next(apiresponse.data",{"_index":796,"title":{},"body":{"injectables/DataService.html":{}}}],["this.satellites]).pipe(map(([terminals",{"_index":793,"title":{},"body":{"injectables/DataService.html":{}}}],["this.sceneservice.createadvancedlighting(1",{"_index":1591,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.sceneservice.setmousepos(e.clientx",{"_index":1585,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.sceneservice.setupscene(this.canvas.nativeelement",{"_index":1587,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.sceneservice.updatescene",{"_index":1592,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.sceneservice.updatesize(rect.width",{"_index":1577,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["this.scrollfactor",{"_index":736,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.showbeams",{"_index":1266,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.showsatellites",{"_index":1263,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.showteleports",{"_index":1257,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.showterminals",{"_index":1260,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.sort",{"_index":1317,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["this.status",{"_index":1307,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["this.surfacealt",{"_index":672,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.terminaldata",{"_index":835,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["this.terminallivedata",{"_index":788,"title":{},"body":{"injectables/DataService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["this.terminallivedata$.asobservable",{"_index":789,"title":{},"body":{"injectables/DataService.html":{}}}],["this.terminallivedata$.next(apiresponse.data",{"_index":800,"title":{},"body":{"injectables/DataService.html":{}}}],["this.terminals",{"_index":784,"title":{},"body":{"injectables/DataService.html":{}}}],["this.terminals$.asobservable",{"_index":785,"title":{},"body":{"injectables/DataService.html":{}}}],["this.terminals$.next(apiresponse.data",{"_index":798,"title":{},"body":{"injectables/DataService.html":{}}}],["this.textureloader",{"_index":1440,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["this.textureloader.load(`${textureloaderservice.texture_path}background",{"_index":1447,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["this.uiservice.clickedobjectid.pipe",{"_index":827,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.uiservice.detailsopen",{"_index":841,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.uiservice.hoveredobjectid.pipe",{"_index":942,"title":{},"body":{"components/HoverComponent.html":{}}}],["this.updatedata",{"_index":794,"title":{},"body":{"injectables/DataService.html":{}}}],["this.updatespeed",{"_index":688,"title":{},"body":{"injectables/ControlService.html":{}}}],["this.updatezoomlevel(cameradist",{"_index":1159,"title":{},"body":{"injectables/MapdataService.html":{}}}],["this.x",{"_index":755,"title":{},"body":{"classes/Coordinate.html":{}}}],["this.y",{"_index":756,"title":{},"body":{"classes/Coordinate.html":{}}}],["three",{"_index":449,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"dependencies.html":{}}}],["three.ambientlight(color",{"_index":1010,"title":{},"body":{"injectables/LightService.html":{}}}],["three.backside",{"_index":530,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.boxgeometry(width",{"_index":488,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.buffergeometry",{"_index":401,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.camera",{"_index":1084,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/UiService.html":{}}}],["three.canvastexture(canvas",{"_index":1443,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["three.color(0.2,0.2,0.2",{"_index":520,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.conegeometry(rad",{"_index":505,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.cylindergeometry(radtop",{"_index":498,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.directionallight(color",{"_index":1014,"title":{},"body":{"injectables/LightService.html":{}}}],["three.light",{"_index":999,"title":{},"body":{"injectables/LightService.html":{}}}],["three.material",{"_index":399,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.mesh",{"_index":410,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{}}}],["three.mesh(geo",{"_index":492,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.meshbasicmaterial",{"_index":489,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.meshlambertmaterial",{"_index":511,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.meshphongmaterial",{"_index":490,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.perspectivecamera",{"_index":610,"title":{},"body":{"injectables/ControlService.html":{}}}],["three.pointlight(color",{"_index":1012,"title":{},"body":{"injectables/LightService.html":{}}}],["three.raycaster",{"_index":1112,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/UiService.html":{}}}],["three.shadermaterial",{"_index":513,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.shadermaterial).uniforms.backgroundtex.value",{"_index":1445,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["three.shadermaterial).uniforms.center.value",{"_index":1165,"title":{},"body":{"injectables/MapdataService.html":{}}}],["three.shadermaterial).uniforms.detailtex.value",{"_index":1444,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["three.shadermaterial).uniforms.detailtex.value.needsupdate",{"_index":1168,"title":{},"body":{"injectables/MapdataService.html":{}}}],["three.shadermaterial).uniforms.scale.value",{"_index":1166,"title":{},"body":{"injectables/MapdataService.html":{}}}],["three.texture",{"_index":382,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/TextureLoaderService.html":{}}}],["three.textureloader",{"_index":1436,"title":{},"body":{"injectables/TextureLoaderService.html":{}}}],["three.vector2",{"_index":1100,"title":{},"body":{"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/UiService.html":{}}}],["three.vector2((gps[0",{"_index":1206,"title":{},"body":{"injectables/MapdataService.html":{}}}],["three.vector2(0.5",{"_index":521,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.vector3",{"_index":515,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/ObjectPlacerService.html":{}}}],["three.vector3(0.8,0.8,0.8",{"_index":518,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["three.vector3(coords.x",{"_index":1372,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["three.vector3(x",{"_index":1370,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["threedvisapp",{"_index":1701,"title":{},"body":{"index.html":{}}}],["throw",{"_index":753,"title":{},"body":{"classes/Coordinate.html":{}}}],["tilelayer",{"_index":1125,"title":{},"body":{"injectables/MapdataService.html":{}}}],["title",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["tlat",{"_index":1364,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["tlon",{"_index":1365,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["toggle",{"_index":1215,"title":{},"body":{"modules/MaterialModule.html":{}}}],["togglebeams",{"_index":1233,"title":{},"body":{"components/MenuComponent.html":{}}}],["toggles",{"_index":1226,"title":{},"body":{"components/MenuComponent.html":{}}}],["togglesatellites",{"_index":1234,"title":{},"body":{"components/MenuComponent.html":{}}}],["toggleteleports",{"_index":1235,"title":{},"body":{"components/MenuComponent.html":{}}}],["toggleterminals",{"_index":1236,"title":{},"body":{"components/MenuComponent.html":{}}}],["tokens",{"_index":1302,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["toolbar",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":947,"title":{},"body":{"components/HoverComponent.html":{}}}],["top",{"_index":435,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["top.px",{"_index":945,"title":{},"body":{"components/HoverComponent.html":{}}}],["total",{"_index":1297,"title":{},"body":{"classes/MetaListing.html":{},"classes/MetaSingle.html":{}}}],["transfromlatlon",{"_index":1342,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["transfromlatlon(coords",{"_index":1354,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["transition",{"_index":853,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["transparency",{"_index":525,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["tree",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["trigger",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"injectables/UiService.html":{}}}],["trigger(\"state",{"_index":935,"title":{},"body":{"components/HoverComponent.html":{}}}],["triggered",{"_index":619,"title":{},"body":{"injectables/ControlService.html":{},"components/Visualizer3dComponent.html":{}}}],["true",{"_index":234,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/TerminalLiveData.html":{},"injectables/UiService.html":{},"classes/Uid.html":{}}}],["tslib",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":747,"title":{},"body":{"classes/Coordinate.html":{}}}],["type",{"_index":11,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"classes/ConfigData.html":{},"injectables/ControlService.html":{},"classes/Coordinate.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"interfaces/GeoDataProvider.html":{},"classes/Geometry.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"injectables/ObjectPlacerService.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":49,"title":{},"body":{"classes/ApiGeoData.html":{},"classes/ApiObject.html":{},"classes/ApiResponse.html":{},"components/DetailComponent.html":{},"classes/Feature.html":{},"classes/FeatureCollection.html":{},"classes/GeoData.html":{},"classes/Geometry.html":{},"components/HoverComponent.html":{},"classes/MapOverlay.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"classes/Uid.html":{}}}],["type.enum.ts",{"_index":1670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":750,"title":{},"body":{"classes/Coordinate.html":{}}}],["types",{"_index":532,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/enumerations.html":{}}}],["types/openlayers",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["types/resize",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["types/three",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":818,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":830,"title":{"classes/Uid.html":{}},"body":{"components/DetailComponent.html":{},"interfaces/HasUid.html":{},"components/HoverComponent.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"coverage.html":{}}}],["uid(this.type",{"_index":1393,"title":{},"body":{"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["uid.class",{"_index":917,"title":{},"body":{"interfaces/HasUid.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["uid.equal(this",{"_index":1531,"title":{},"body":{"classes/Uid.html":{}}}],["uid.interface",{"_index":780,"title":{},"body":{"injectables/DataService.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{}}}],["uid.interface.ts",{"_index":912,"title":{},"body":{"interfaces/HasUid.html":{},"coverage.html":{}}}],["uid.interface.ts:11",{"_index":915,"title":{},"body":{"interfaces/HasUid.html":{}}}],["uid1",{"_index":1519,"title":{},"body":{"classes/Uid.html":{}}}],["uid1.id",{"_index":1529,"title":{},"body":{"classes/Uid.html":{}}}],["uid1.type",{"_index":1527,"title":{},"body":{"classes/Uid.html":{}}}],["uid2",{"_index":1516,"title":{},"body":{"classes/Uid.html":{}}}],["uid2.id",{"_index":1530,"title":{},"body":{"classes/Uid.html":{}}}],["uid2.type",{"_index":1528,"title":{},"body":{"classes/Uid.html":{}}}],["uid?.equals(satellite.getuid()))[0",{"_index":834,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["uid?.id",{"_index":838,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["uid?.type",{"_index":829,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["uids",{"_index":1518,"title":{},"body":{"classes/Uid.html":{}}}],["uiservice",{"_index":256,"title":{"injectables/UiService.html":{}},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["uiservice:uiservice",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["und",{"_index":1283,"title":{},"body":{"components/MenuComponent.html":{}}}],["undefined",{"_index":566,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["uniform",{"_index":470,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":514,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{},"injectables/TextureLoaderService.html":{}}}],["unique",{"_index":1507,"title":{},"body":{"classes/Uid.html":{}}}],["unknown",{"_index":225,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/enumerations.html":{}}}],["unkown",{"_index":1680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["up",{"_index":542,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{},"miscellaneous/enumerations.html":{}}}],["up&down",{"_index":706,"title":{},"body":{"injectables/ControlService.html":{}}}],["update",{"_index":1553,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["updatecamonkeyinput",{"_index":588,"title":{},"body":{"injectables/ControlService.html":{}}}],["updated",{"_index":1088,"title":{},"body":{"injectables/MapdataService.html":{}}}],["updatedata",{"_index":759,"title":{},"body":{"injectables/DataService.html":{}}}],["updatemapresolution",{"_index":1077,"title":{},"body":{"injectables/MapdataService.html":{}}}],["updatemapresolution(controls",{"_index":1102,"title":{},"body":{"injectables/MapdataService.html":{}}}],["updatemapresolution(controls:cameracontrols",{"_index":1150,"title":{},"body":{"injectables/MapdataService.html":{}}}],["updates",{"_index":628,"title":{},"body":{"injectables/ControlService.html":{},"injectables/MapdataService.html":{}}}],["updatespeed",{"_index":589,"title":{},"body":{"injectables/ControlService.html":{}}}],["updatezoomlevel",{"_index":1078,"title":{},"body":{"injectables/MapdataService.html":{}}}],["updatezoomlevel(cameradist",{"_index":1107,"title":{},"body":{"injectables/MapdataService.html":{}}}],["updatezoomlevel(cameradist:number",{"_index":1169,"title":{},"body":{"injectables/MapdataService.html":{}}}],["updating",{"_index":1086,"title":{},"body":{"injectables/MapdataService.html":{}}}],["url",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{}}}],["used",{"_index":448,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{}}}],["uv",{"_index":458,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/MapdataService.html":{},"miscellaneous/variables.html":{}}}],["uv.x",{"_index":1202,"title":{},"body":{"injectables/MapdataService.html":{}}}],["uv.y",{"_index":1203,"title":{},"body":{"injectables/MapdataService.html":{}}}],["uvtogps",{"_index":1079,"title":{},"body":{"injectables/MapdataService.html":{}}}],["uvtogps(uv",{"_index":1110,"title":{},"body":{"injectables/MapdataService.html":{}}}],["uvtogps(uv:three.vector2",{"_index":1200,"title":{},"body":{"injectables/MapdataService.html":{}}}],["v1",{"_index":202,"title":{},"body":{"injectables/ApiService.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/ApiGeoData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"classes/FeatureCollection.html":{},"injectables/LightService.html":{},"classes/MapOverlay.html":{},"components/MenuComponent.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/MultiPolygon.html":{},"classes/Polygon.html":{},"classes/Satellite.html":{},"classes/Terminal.html":{},"classes/TerminalLiveData.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"classes/Uid.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["variable",{"_index":651,"title":{},"body":{"injectables/ControlService.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["variables",{"_index":1712,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":454,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["vec2",{"_index":456,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["vec3",{"_index":455,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["vec3(modelviewmatrix",{"_index":460,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["vec4(position",{"_index":461,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["vehicle",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{}}}],["vertex",{"_index":450,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["vertexshader",{"_index":522,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["vertexuv",{"_index":457,"title":{},"body":{"injectables/BasicObjectService.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{},"components/DetailComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["view",{"_index":1123,"title":{},"body":{"injectables/MapdataService.html":{}}}],["viewchild",{"_index":662,"title":{},"body":{"injectables/ControlService.html":{},"components/Visualizer3dComponent.html":{}}}],["viewchild(\"canvas",{"_index":1568,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["viewchild(\"refel",{"_index":664,"title":{},"body":{"injectables/ControlService.html":{}}}],["viewchild('canvas",{"_index":1562,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["viewchild('refel",{"_index":637,"title":{},"body":{"injectables/ControlService.html":{}}}],["vis",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":1598,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["visible",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{}}}],["visualizer3d",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["visualizer3d.component.html",{"_index":1536,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["visualizer3d.component.scss",{"_index":1535,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["visualizer3dcomponent",{"_index":320,"title":{"components/Visualizer3dComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/MenuComponent.html":{},"components/Visualizer3dComponent.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":103,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/BasicObjectService.html":{},"injectables/ControlService.html":{},"injectables/DataService.html":{},"components/DetailComponent.html":{},"classes/MapOverlay.html":{},"injectables/MapdataService.html":{},"components/MenuComponent.html":{},"injectables/TextureLoaderService.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{},"miscellaneous/variables.html":{}}}],["weather",{"_index":91,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MapOverlay.html":{},"classes/MetaListing.html":{},"classes/MetaSingle.html":{},"classes/Uid.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["weight",{"_index":974,"title":{},"body":{"components/HoverComponent.html":{}}}],["width",{"_index":415,"title":{},"body":{"injectables/BasicObjectService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"components/Visualizer3dComponent.html":{}}}],["window",{"_index":640,"title":{},"body":{"injectables/ControlService.html":{},"components/DetailComponent.html":{},"components/HoverComponent.html":{},"injectables/UiService.html":{},"components/Visualizer3dComponent.html":{}}}],["window:mousemove",{"_index":1541,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["window:mousemove(e",{"_index":1548,"title":{},"body":{"components/Visualizer3dComponent.html":{}}}],["withlatestfrom",{"_index":825,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["withlatestfrom(this.dataservice.satellites",{"_index":831,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["withlatestfrom(this.dataservice.terminallivedata",{"_index":840,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["withlatestfrom(this.dataservice.terminals",{"_index":836,"title":{},"body":{"components/DetailComponent.html":{},"components/HoverComponent.html":{}}}],["wseg",{"_index":440,"title":{},"body":{"injectables/BasicObjectService.html":{}}}],["x",{"_index":741,"title":{},"body":{"classes/Coordinate.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/UiService.html":{}}}],["x:number=0",{"_index":1003,"title":{},"body":{"injectables/LightService.html":{}}}],["xyz",{"_index":1338,"title":{},"body":{"injectables/ObjectPlacerService.html":{}}}],["y",{"_index":742,"title":{},"body":{"classes/Coordinate.html":{},"components/HoverComponent.html":{},"injectables/LightService.html":{},"injectables/MapdataService.html":{},"injectables/ObjectPlacerService.html":{},"injectables/UiService.html":{}}}],["y:number=0",{"_index":1004,"title":{},"body":{"injectables/LightService.html":{}}}],["yes",{"_index":395,"title":{},"body":{"injectables/BasicObjectService.html":{},"injectables/LightService.html":{},"injectables/ObjectPlacerService.html":{}}}],["z",{"_index":987,"title":{},"body":{"injectables/LightService.html":{},"injectables/ObjectPlacerService.html":{}}}],["z:number=0",{"_index":1005,"title":{},"body":{"injectables/LightService.html":{}}}],["zone.js",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigData.html":{},"injectables/ControlService.html":{},"injectables/MapdataService.html":{},"overview.html":{}}}],["zoomen",{"_index":1281,"title":{},"body":{"components/MenuComponent.html":{}}}],["zoomin",{"_index":543,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{},"miscellaneous/enumerations.html":{}}}],["zoomlevel",{"_index":1087,"title":{},"body":{"injectables/MapdataService.html":{}}}],["zoomlevels",{"_index":1106,"title":{},"body":{"injectables/MapdataService.html":{}}}],["zoomout",{"_index":544,"title":{},"body":{"classes/ConfigData.html":{},"injectables/ControlService.html":{},"miscellaneous/enumerations.html":{}}}],["zooms",{"_index":626,"title":{},"body":{"injectables/ControlService.html":{}}}],["zoomspeed",{"_index":647,"title":{},"body":{"injectables/ControlService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiGeoData.html":{"url":"classes/ApiGeoData.html","title":"class - ApiGeoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiGeoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/api-geo-data.class.ts\n        \n\n            \n                Description\n            \n            \n                The ApiObject type that represents Geo Data\n\n            \n\n            \n                Extends\n            \n            \n                        ApiObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                geodata\n                            \n                            \n                                type\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/api-geo-data.class.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a new ApiGeoData object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the GeoData object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            geodata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/api-geo-data.class.ts:19\n                            \n                        \n\n                \n                    \n                        The Geodata\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ApiObjectType.GeoData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/api-geo-data.class.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiObjectType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ApiObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         ApiObject:11\n\n                            \n                        \n\n                \n                    \n                        The type of ApiObject this is\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEnum, getPropertyValue } from \"../conversion-helper\";\nimport { FeatureCollection } from \"../geo/feature-collection.class\";\nimport { GeoDataType } from \"../geo/geo-data-type.enum\";\nimport { GeoData } from \"../geo/geo-data.class\";\nimport { ApiObjectType } from \"./api-object-type.enum\";\nimport { ApiObject } from \"./api-object.class\";\n\n/**\n * The ApiObject type that represents Geo Data\n */\nexport class ApiGeoData extends ApiObject {\n\n    type = ApiObjectType.GeoData;\n\n    /**\n     * The Geodata\n     */\n    public readonly geodata: GeoData;\n\n    /**\n     * Constructs a new ApiGeoData object from an object\n     * @param from - the object to create the GeoData object from\n     */\n    constructor(from: object) {\n        super();\n        let geodata_raw = getPropertyValue(\"geodata\", from, \"string\");\n        this.geodata = object2GeoData(JSON.parse(geodata_raw));\n    }\n}\n\n/**\n * Converts an object to a GeoData object\n * \n * @param from \n * @returns \n */\nfunction object2GeoData(from: object): GeoData {\n\n    let type = getEnum(\"type\", from, GeoDataType);\n    switch (type) {\n        case GeoDataType.FeatureCollection:\n            return new FeatureCollection(from);\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiObject.html":{"url":"classes/ApiObject.html","title":"class - ApiObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/api-object.class.ts\n        \n\n            \n                Description\n            \n            \n                The abstract supertype for all api data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiObjectType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/api-object.class.ts:11\n                            \n                        \n\n                \n                    \n                        The type of ApiObject this is\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiObjectType } from \"./api-object-type.enum\";\n\n/**\n * The abstract supertype for all api data\n */\nexport abstract class ApiObject {\n\n    /**\n     * The type of ApiObject this is\n     */\n    public readonly type: ApiObjectType\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiResponse.html":{"url":"classes/ApiResponse.html","title":"class - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/api-response.class.ts\n        \n\n            \n                Description\n            \n            \n                Class Representing a Response from the Api\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initData\n                            \n                            \n                                    Private\n                                initMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object, isGeoData: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/api-response.class.ts:29\n                            \n                        \n\n                \n                    \n                            Create a response from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the response from\n\n\n                                                        \n                                                \n                                                \n                                                        isGeoData\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nweather or not the response is a Geodate response\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array | ApiObject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/api-response.class.ts:24\n                            \n                        \n\n                \n                    \n                        The data of this response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/api-response.class.ts:29\n                            \n                        \n\n                \n                    \n                        The errors of this response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaSingle | MetaListing\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/api-response.class.ts:19\n                            \n                        \n\n                \n                    \n                        The metadata of this response\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initData(from: object, isGeoData: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/api-response.class.ts:72\n                \n            \n\n\n            \n                \n                    Initializes the data for a response from an object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe object to initialize the data from\n\n\n                                    \n                                \n                                \n                                    isGeoData\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nweather or not the response is a Geodate response\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMeta(from: object, isGeoData: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/api-response.class.ts:50\n                \n            \n\n\n            \n                \n                    Initializes the metadata for a response from an object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe object to initialize the metadata from\n\n\n                                    \n                                \n                                \n                                    isGeoData\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nweather or not the response is a Geodate response\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { getPropertyValue, getEnum } from \"../conversion-helper\";\nimport { ApiGeoData } from \"./api-geo-data.class\";\nimport { ApiObjectType } from \"./api-object-type.enum\";\nimport { ApiObject } from \"./api-object.class\";\nimport { MapOverlay } from \"./map-overlay.class\";\nimport { MetaSingle, MetaListing } from \"./meta.class\";\nimport { Satellite } from \"./satellite.class\";\nimport { TerminalLiveData } from \"./terminal-live-data.class\";\nimport { Terminal } from \"./terminal.class\";\n\n/**\n * Class Representing a Response from the Api\n */\nexport class ApiResponse {\n\n    /**\n     * The metadata of this response\n     */\n    public meta: MetaSingle | MetaListing;\n\n    /**\n     * The data of this response\n     */\n    public data: Array | ApiObject;\n\n    /**\n     * The errors of this response\n     */\n    public errors: Array;\n\n    /**\n     * Create a response from an object\n     * @param from - the object to create the response from\n     * @param isGeoData - weather or not the response is a Geodate response\n     */\n    constructor(from: object, isGeoData: boolean = false) {\n\n        this.initMeta(from, isGeoData);\n        this.initData(from, isGeoData);\n        this.errors = getPropertyValue(\"errors\", from, \"array\");\n\n    }\n\n    /**\n     * Initializes the metadata for a response from an object\n     * \n     * @param from - the object to initialize the metadata from\n     * @param isGeoData - weather or not the response is a Geodate response\n     */\n    private initMeta(from: object, isGeoData: boolean): void {\n\n        let meta = getPropertyValue(\"meta\", from, \"object\");\n        if (isGeoData) {\n            this.meta = new MetaSingle(meta);\n            return;\n        }\n        let isListing: boolean = getPropertyValue(\"listing\", meta, \"boolean\");\n        if (isListing) {\n            this.meta = new MetaListing(meta);\n        } else {\n            this.meta = new MetaSingle(meta);\n        }\n\n    }\n\n    /**\n     * Initializes the data for a response from an object\n     * \n     * @param from - the object to initialize the data from\n     * @param isGeoData - weather or not the response is a Geodate response\n     */\n    private initData(from: object, isGeoData: boolean): void {\n\n        if (this.meta.listing) {\n            let data = getPropertyValue(\"data\", from, \"array\");\n            this.data = data.map(value => object2ApiObject(value, isGeoData));\n        } else {\n            let data = getPropertyValue(\"data\", from, \"object\");\n            this.data = object2ApiObject(data, isGeoData);\n        }\n\n    }\n\n}\n\n/**\n * Converts an object to the corresponding subclass of ApiObject\n * \n * @param from - the object to create the ApiObject from\n * @param isGeoData - weather or not the response is a Geodate response \n * @returns - the ApiObject representing the object\n */\nfunction object2ApiObject(from: object, isGeoData: boolean = false): ApiObject {\n\n    if (isGeoData) {\n        return new ApiGeoData(from);\n    }\n    let type = getEnum(\"_type\", from, ApiObjectType);\n    switch (type) {\n        case ApiObjectType.Terminal:\n            return new Terminal(from);\n        case ApiObjectType.TerminalLiveData:\n            return new TerminalLiveData(from);\n        case ApiObjectType.Satellite:\n            return new Satellite(from);\n        case ApiObjectType.MapOverlay:\n            return new MapOverlay(from);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/api/api.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load data from the api-interface\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                BASE_URL\n                            \n                            \n                                    Static\n                                MAPOVERLAYDATA_ENDPOINT\n                            \n                            \n                                    Static\n                                SATELLITE_ENDPOINT\n                            \n                            \n                                    Static\n                                TERMINAL_ENDPOINT\n                            \n                            \n                                    Static\n                                TERMINALLIVEDATA_ENDPOINT\n                            \n                            \n                                    Static\n                                    Readonly\n                                VERSION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMapOverlayData\n                            \n                            \n                                    Async\n                                getMapOverlayGeodata\n                            \n                            \n                                    Async\n                                getSatellites\n                            \n                            \n                                    Async\n                                getTerminalLiveData\n                            \n                            \n                                    Async\n                                getTerminals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/api/api.service.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor injects Http client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected http client\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMapOverlayData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapOverlayData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/api/api.service.ts:112\n                \n            \n\n\n            \n                \n                    Loads data for mapoverlays from the api-interface via HttpClient\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nrejected or resolved promise with the apiResponse\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMapOverlayGeodata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapOverlayGeodata(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/api/api.service.ts:133\n                \n            \n\n\n            \n                \n                    Loads geo-data for mapoverlays from the api-interface via HttpClient\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nrejected or resolved promise with the apiResponse\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSatellites\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSatellites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/api/api.service.ts:52\n                \n            \n\n\n            \n                \n                    Loads data for satellite objects from the api-interface via HttpClient\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nrejected or resolved promise with the apiResponse\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTerminalLiveData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTerminalLiveData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/api/api.service.ts:92\n                \n            \n\n\n            \n                \n                    Loads terminal-live-data from the api-interface via HttpClient\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nrejected or resolved promise with the apiResponse\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTerminals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTerminals()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/api/api.service.ts:72\n                \n            \n\n\n            \n                \n                    Loads data for terminal objects from the api-interface via HttpClient\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nrejected or resolved promise with the apiResponse\n\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/api/api.service.ts:18\n                            \n                        \n\n                \n                    \n                        Base URL of the API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAPOVERLAYDATA_ENDPOINT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"obj/MapOverlay\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/api/api.service.ts:38\n                            \n                        \n\n                \n                    \n                        API endpoint for the map ovelays\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SATELLITE_ENDPOINT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"obj/ScSatellite\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/api/api.service.ts:26\n                            \n                        \n\n                \n                    \n                        API endpoint for satellites\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TERMINAL_ENDPOINT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"obj/Terminal\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/api/api.service.ts:30\n                            \n                        \n\n                \n                    \n                        API endpoint for terminals\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TERMINALLIVEDATA_ENDPOINT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"obj/TerminalLiveData\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/api/api.service.ts:34\n                            \n                        \n\n                \n                    \n                        API endpoint for terminal live data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"v1\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/api/api.service.ts:22\n                            \n                        \n\n                \n                    \n                        API version number\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ApiResponse } from \"src/app/entity/data/api-response.class\";\nimport { GeoDataProvider } from \"src/app/entity/data/geo-data-provider.interface\";\nimport { MapOverlay } from \"src/app/entity/data/map-overlay.class\";\n\n/**\n * Service to load data from the api-interface\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ApiService implements GeoDataProvider {\n\n  /**\n   * Base URL of the API\n   */\n  public static readonly BASE_URL = \"\";//\"/satconnect_demo_develop_backend\";\n  /**\n   * API version number\n   */\n  public static readonly VERSION = \"v1\";\n  /**\n   * API endpoint for satellites\n   */\n  public static SATELLITE_ENDPOINT = \"obj/ScSatellite\";\n  /**\n   * API endpoint for terminals\n   */\n  public static TERMINAL_ENDPOINT = \"obj/Terminal\";\n  /**\n   * API endpoint for terminal live data\n   */\n  public static TERMINALLIVEDATA_ENDPOINT = \"obj/TerminalLiveData\";\n  /**\n   * API endpoint for the map ovelays\n   */\n  public static MAPOVERLAYDATA_ENDPOINT = \"obj/MapOverlay\"\n\n  /**\n   * Constructor injects Http client\n   * \n   * @param http - injected http client\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Loads data for satellite objects from the api-interface via HttpClient\n   * \n   * @returns - rejected or resolved promise with the apiResponse\n   */\n  async getSatellites(): Promise {\n    return new Promise((resolve, reject) => {\n      this.http.get(`${ApiService.BASE_URL}/api/${ApiService.VERSION}/${ApiService.SATELLITE_ENDPOINT}`).toPromise()\n        .then(object => {\n          let apiResponse = new ApiResponse(object);\n          if (apiResponse.meta.listing == false) {\n            reject();\n          } else {\n            resolve(apiResponse);\n          }\n        })\n        .catch(reason => reject(reason ?? \"Unknown reason\"));\n    });\n  }\n\n  /**\n   * Loads data for terminal objects from the api-interface via HttpClient\n   * \n   * @returns - rejected or resolved promise with the apiResponse\n   */\n  async getTerminals(): Promise {\n    return new Promise((resolve, reject) => {\n      this.http.get(`${ApiService.BASE_URL}/api/${ApiService.VERSION}/${ApiService.TERMINAL_ENDPOINT}`).toPromise()\n        .then(object => {\n          let apiResponse = new ApiResponse(object);\n          if (apiResponse.meta.listing == false) {\n            reject();\n          } else {\n            resolve(apiResponse);\n          }\n        })\n        .catch(reason => reject(reason ?? \"Unknown reason\"));\n    });\n  }\n\n  /**\n   * Loads terminal-live-data from the api-interface via HttpClient\n   * \n   * @returns - rejected or resolved promise with the apiResponse\n   */\n  async getTerminalLiveData(): Promise {\n    return new Promise((resolve, reject) => {\n      this.http.get(`${ApiService.BASE_URL}/api/${ApiService.VERSION}/${ApiService.TERMINALLIVEDATA_ENDPOINT}`).toPromise()\n        .then(object => {\n          let apiResponse = new ApiResponse(object);\n          if (apiResponse.meta.listing == false) {\n            reject();\n          } else {\n            resolve(apiResponse);\n          }\n        })\n        .catch(reason => reject(reason ?? \"Unknown reason\"));\n    });\n  }\n\n  /**\n   * Loads data for mapoverlays from the api-interface via HttpClient\n   * \n   * @returns - rejected or resolved promise with the apiResponse\n   */\n  async getMapOverlayData(): Promise {\n    return new Promise((resolve, reject) => {\n      this.http.get(`${ApiService.BASE_URL}/api/${ApiService.VERSION}/${ApiService.MAPOVERLAYDATA_ENDPOINT}`).toPromise()\n        .then(object => {\n          let apiResponse = new ApiResponse(object);\n          if (apiResponse.meta.listing == false) {\n            reject();\n          } else {\n            (apiResponse.data as MapOverlay[]).forEach(mapOverlay => mapOverlay.setLoader(this));\n            resolve(apiResponse);\n          }\n        })\n        .catch(reason => reject(reason ?? \"Unknown reason\"));\n    });\n  }\n\n  /**\n   * Loads geo-data for mapoverlays from the api-interface via HttpClient\n   * \n   * @returns - rejected or resolved promise with the apiResponse\n   */\n  async getMapOverlayGeodata(id: number): Promise {\n    return new Promise((resolve, reject) => {\n      this.http.get(`${ApiService.BASE_URL}/api/${ApiService.VERSION}/${ApiService.MAPOVERLAYDATA_ENDPOINT}/${id}/geodata`).toPromise()\n        .then(object => {\n          let apiResponse = new ApiResponse(object, true);\n          if (apiResponse.meta.listing === true) {\n            reject();\n          } else {\n            resolve(apiResponse);\n          }\n        })\n        .catch(reason => reject(reason ?? \"Unknown reason\"));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component end entrypoint of the application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                controlService\n                            \n                            \n                                opened\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                uiService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlService: ControlService, uiService: UiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor injects services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        controlService\n                                                  \n                                                        \n                                                                        ControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected controlService\n\n\n                                                        \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected uiService\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControlService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                        - injected controlService\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                        Trigger if menu is visible\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"3D-vis-app\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                        - injected uiService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { ControlService } from \"@service/control/control.service\";\nimport { UiService } from \"@service/ui/ui.service\";\n\n/**\n * Main component end entrypoint of the application\n */\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  /**\n   * Title of the application\n   */\n  title = \"3D-vis-app\";\n  /**\n   * Trigger if menu is visible\n   */\n  opened: boolean;\n\n  /**\n   * Constructor injects services\n   * \n   * @param controlService - injected controlService\n   * @param uiService - injected uiService\n   */\n  constructor(public controlService:ControlService, public uiService:UiService) { }\n\n}\n\n    \n\n    \n        \n    menu\n    3DVisApp\n \n\n    \n        \n    \n    \n        \n    \n    \n        \n        \n    \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                mat-toolbar {\n    position: relative;\n    height: 50px;\n    font-size: 1,5em;\n    \n    .nav-title{\n        color: #e1e6e7;\n        text-align: center;\n        margin: 5px;\n    }\n\n    .menu-btn {\n        border: none;\n        background: none;\n        cursor: pointer;\n        color: #e1e6e7;\n        margin: 5px;\n    }\n}\n\n\nmat-sidenav-container{\n    height: 100%;\n}\n\nmat-sidenav-content{\n    overflow: hidden;\n}\n:host{\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    menu    3DVisApp                                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailComponent', 'selector': 'app-detail'},{'name': 'HoverComponent', 'selector': 'app-hover'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'Visualizer3dComponent', 'selector': 'app-visualizer3d'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nAppModule -->\n\nDetailComponent->AppModule\n\n\n\n\n\nHoverComponent\n\nHoverComponent\n\nAppModule -->\n\nHoverComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nVisualizer3dComponent\n\nVisualizer3dComponent\n\nAppModule -->\n\nVisualizer3dComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            HoverComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            Visualizer3dComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { Visualizer3dComponent } from \"./component/visualizer3d/visualizer3d.component\";\nimport { MenuComponent } from \"./component/menu/menu.component\";\nimport { HoverComponent } from \"./component/hover/hover.component\";\n\nimport { MaterialModule } from \"./material/material.module\";\nimport { ResizeObserverModule } from \"@ng-web-apis/resize-observer\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { DetailComponent } from \"./component/detail/detail.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Visualizer3dComponent,\n    MenuComponent,\n    HoverComponent,\n    DetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ResizeObserverModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicObjectService.html":{"url":"injectables/BasicObjectService.html","title":"injectable - BasicObjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BasicObjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/basic-object/basic-object.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to generate basic geometric mesh objects\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMaterial\n                            \n                            \n                                    Private\n                                createMesh\n                            \n                            \n                                    Public\n                                generateBoxObject\n                            \n                            \n                                    Public\n                                generateConeObject\n                            \n                            \n                                    Public\n                                generateCylinderObject\n                            \n                            \n                                    Public\n                                generateSphereObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/basic-object/basic-object.service.ts:75\n                            \n                        \n\n                \n                    \n                            Default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMaterial(matType: MaterialType, diffMap: THREE.Texture, alphaMap?: THREE.Texture, normalMap?: THREE.Texture, specularMap?: THREE.Texture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-object/basic-object.service.ts:182\n                \n            \n\n\n            \n                \n                    Creates different materials based on material type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    matType\n                                    \n                                                MaterialType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmaterial type to be created\n\n\n                                    \n                                \n                                \n                                    diffMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndiffuse map for the material\n\n\n                                    \n                                \n                                \n                                    alphaMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nalpha map for the material\n\n\n                                    \n                                \n                                \n                                    normalMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nnormal map for the material\n\n\n                                    \n                                \n                                \n                                    specularMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nspecular map for the material\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \nnew material\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMesh(geo: THREE.BufferGeometry, mat: THREE.Material, backSide?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-object/basic-object.service.ts:232\n                \n            \n\n\n            \n                \n                    Creates a mesh with a texture mapped on the front or back side\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    geo\n                                    \n                                                THREE.BufferGeometry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngeomety from which a mesh is to be created\n\n\n                                    \n                                \n                                \n                                    mat\n                                    \n                                            THREE.Material\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntexture of the mesh\n\n\n                                    \n                                \n                                \n                                    backSide\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \ntexture mapped on backside of the mesh\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         THREE.Mesh\n\n                    \n                    \n                        \ncreated mesh\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateBoxObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBoxObject(width: number, height: number, depth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-object/basic-object.service.ts:124\n                \n            \n\n\n            \n                \n                    Creates a box mesh\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.3\n                                    \n\n                                    \n                                        \nwidth of the box\n\n\n                                    \n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.3\n                                    \n\n                                    \n                                        \nheight of the box\n\n\n                                    \n                                \n                                \n                                    depth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.3\n                                    \n\n                                    \n                                        \ndepth of the box\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \nmesh of the box\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateConeObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateConeObject(rad: number, height: number, radialSeg: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-object/basic-object.service.ts:159\n                \n            \n\n\n            \n                \n                    Ceates a cone mesh\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    rad\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.3\n                                    \n\n                                    \n                                        \nradius of the cone\n\n\n                                    \n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.6\n                                    \n\n                                    \n                                        \nheight of the cone\n\n\n                                    \n                                \n                                \n                                    radialSeg\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        32\n                                    \n\n                                    \n                                        \namount of radial segemnts of the cone\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \nmesh of the cone\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateCylinderObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCylinderObject(radTop: number, radBot: number, height: number, radialSeg: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-object/basic-object.service.ts:142\n                \n            \n\n\n            \n                \n                    Creates a cynlinder mesh\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    radTop\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.2\n                                    \n\n                                    \n                                        \nradius of the top of the cylinder\n\n\n                                    \n                                \n                                \n                                    radBot\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.2\n                                    \n\n                                    \n                                        \nradius of the bottom of the cylinder\n\n\n                                    \n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.2\n                                    \n\n                                    \n                                        \nheight of the cylinder\n\n\n                                    \n                                \n                                \n                                    radialSeg\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        32\n                                    \n\n                                    \n                                        \namount of radial segements of the cylinder\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \nmesh of the cylinder\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateSphereObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSphereObject(rad: number, wSeg: number, hSeg: number, diffMap: THREE.Texture, alphaMap: THREE.Texture, normalMap: THREE.Texture, specularMap: THREE.Texture, matType: MaterialType, backSide: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-object/basic-object.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates a sphere mesh\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    rad\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \nradius of the sphere\n\n\n                                    \n                                \n                                \n                                    wSeg\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \namount of width segments of the sphere\n\n\n                                    \n                                \n                                \n                                    hSeg\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \namount of height segements of the sphere\n\n\n                                    \n                                \n                                \n                                    diffMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        \ndiffuse map of the sphere\n\n\n                                    \n                                \n                                \n                                    alphaMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        \nalpha map of the sphere\n\n\n                                    \n                                \n                                \n                                    normalMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        \nnormal map of the sphere\n\n\n                                    \n                                \n                                \n                                    specularMap\n                                    \n                                            THREE.Texture\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        \nspecular map of the sphere\n\n\n                                    \n                                \n                                \n                                    matType\n                                    \n                                                MaterialType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        MaterialType.BASIC\n                                    \n\n                                    \n                                        \nmaterial type to be used\n\n\n                                    \n                                \n                                \n                                    backSide\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        \ntexture mapped on backside of the mesh\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \nmesh of the sphere\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as THREE from \"three\";\n\n/**\n * vertex shader\n */\nconst _VS = `\n  varying vec3 Normal;\n  varying vec3 Position;\n  varying vec2 VertexUV;\n\n  void main() {\n    VertexUV = uv;\n    Normal = normalize(normalMatrix * normal);\n    Position = vec3(modelViewMatrix * vec4(position, 1.0));\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n\n/**\n * fragment shader - phong shading\n */\nconst _FS = `\n  varying vec3 Normal;\n  varying vec3 Position;\n  varying vec2 VertexUV;\n\n  uniform sampler2D DetailTex;\n  uniform sampler2D BackgroundTex;\n  uniform vec2 Center;\n  uniform float Scale;\n  uniform vec3 LightPosition;\n  uniform vec3 LightIntensity;\n  uniform float Shininess;\n  uniform float AmbientIntensity;\n  uniform vec3 SpecColor;\n\n  vec3 phong() {\n    vec2 relPos = (VertexUV - Center);\n    if(relPos.x > 0.5){\n      relPos.x -= 1.0;\n    }else if(relPos.x  1.0 || relPos.x  1.0 || relPos.y ;\n\n    mat = this.createMaterial(matType, diffMap, alphaMap, normalMap, specularMap);\n    mesh = this.createMesh(geo, mat, backSide);\n    return mesh;\n\n  }\n\n  /**\n   * Creates a box mesh\n   * \n   * @param width - width of the box\n   * @param height - height of the box\n   * @param depth - depth of the box\n   * @returns - mesh of the box\n   */\n  public generateBoxObject(width: number = 0.3, height: number = 0.3, depth: number = 0.3): THREE.Mesh {\n\n    const geo: THREE.BufferGeometry = new THREE.BoxGeometry(width, height, depth);\n    const mat: THREE.MeshBasicMaterial = new THREE.MeshPhongMaterial({ color: 0xff0000});\n    const mesh: THREE.Mesh = new THREE.Mesh(geo, mat);\n    return mesh;\n\n  }\n\n  /**\n   * Creates a cynlinder mesh\n   * \n   * @param radTop - radius of the top of the cylinder\n   * @param radBot - radius of the bottom of the cylinder\n   * @param height - height of the cylinder\n   * @param radialSeg - amount of radial segements of the cylinder\n   * @returns - mesh of the cylinder\n   */\n  public generateCylinderObject(radTop:number = 0.2, radBot:number = 0.2, height:number = 0.2, radialSeg:number = 32): THREE.Mesh {\n\n    const geo:THREE.BufferGeometry = new THREE.CylinderGeometry(radTop, radBot, height, radialSeg);\n    const mat:THREE.Material = new THREE.MeshPhongMaterial({ color: 0x00ff00 });\n    const mesh:THREE.Mesh = new THREE.Mesh(geo, mat);\n    return mesh;\n \n  }\n\n  /**\n   * Ceates a cone mesh\n   * \n   * @param rad - radius of the cone\n   * @param height - height of the cone\n   * @param radialSeg - amount of radial segemnts of the cone\n   * @returns - mesh of the cone\n   */\n  public generateConeObject(rad:number=0.3, height:number=0.6, radialSeg:number=32): THREE.Mesh {\n\n    const geo:THREE.BufferGeometry = new THREE.ConeGeometry(rad, height, radialSeg);\n    const mat:THREE.Material = new THREE.MeshPhongMaterial({ color: 0xffff00 });\n    const mesh:THREE.Mesh = new THREE.Mesh(geo, mat);\n    return mesh;\n\n  }\n\n  // =======================================================\n  // ================= PRIVATE FUNCTIONS ===================\n  // =======================================================\n\n  /**\n   * Creates different materials based on material type\n   * \n   * @param matType - material type to be created\n   * @param diffMap - diffuse map for the material\n   * @param alphaMap - alpha map for the material\n   * @param normalMap - normal map for the material\n   * @param specularMap - specular map for the material\n   * @returns - new material\n   */\n  private createMaterial(matType: MaterialType, diffMap: THREE.Texture, alphaMap?: THREE.Texture, normalMap?: THREE.Texture, specularMap?: THREE.Texture): THREE.Material {\n\n    let mat: THREE.Material;\n\n    switch (matType) {\n      case MaterialType.PHONG:\n        mat = new THREE.MeshPhongMaterial({ map: diffMap, normalMap: normalMap, specularMap: specularMap });\n        break;\n      case MaterialType.LAMBERT:\n        mat = new THREE.MeshLambertMaterial({ map: diffMap, alphaMap: alphaMap });\n        break;\n      case MaterialType.BASIC:\n        mat = new THREE.MeshBasicMaterial({ map: diffMap });\n        break;\n      case MaterialType.SHADER:\n        mat = new THREE.ShaderMaterial({\n          uniforms: {\n            DetailTex: { value: new THREE.Texture() },\n            BackgroundTex: { value: new THREE.Texture() },\n            LightPosition: { value: new THREE.Vector3(-200, 138, 200) },\n            LightIntensity: { value: new THREE.Vector3(0.8,0.8,0.8) },\n            Shininess: { value: 100.0 },\n            SpecColor: { value: new THREE.Color(0.2,0.2,0.2) },\n            Center: { value: new THREE.Vector2(0.5, 0.5) },\n            Scale: { value: 1.0 },\n            AmbientIntensity: { value: 0.2 }\n          },\n          vertexShader: _VS,\n          fragmentShader: _FS,\n        });\n        break;\n    }\n\n    //set transparency if aplphaMap is set\n    if (alphaMap !== null) {\n      mat.transparent = true;\n    }\n\n    return mat;\n\n  }\n\n  /**\n   * Creates a mesh with a texture mapped on the front or back side\n   * \n   * @param geo - geomety from which a mesh is to be created\n   * @param mat - texture of the mesh\n   * @param backSide -  texture mapped on backside of the mesh\n   * @returns - created mesh\n   */\n  private createMesh(geo: THREE.BufferGeometry, mat: THREE.Material, backSide?: boolean): THREE.Mesh {\n\n    let model: THREE.Mesh = new THREE.Mesh(geo, mat);\n    if (backSide) {\n      model.material.side = THREE.BackSide;\n    }\n    return model;\n\n  }\n\n}\n\n/**\n * Enum for the different material types\n */\nexport enum MaterialType {\n  PHONG,\n  LAMBERT,\n  BASIC,\n  SHADER\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigData.html":{"url":"classes/ConfigData.html","title":"class - ConfigData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/configuration/config-data.class.ts\n        \n\n            \n                Description\n            \n            \n                Helper class to map keyboard inputs from config file\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                down\n                            \n                            \n                                left\n                            \n                            \n                                right\n                            \n                            \n                                up\n                            \n                            \n                                zoomin\n                            \n                            \n                                zoomout\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            down\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/configuration/config-data.class.ts:20\n                            \n                        \n\n                \n                    \n                        Down control key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/configuration/config-data.class.ts:8\n                            \n                        \n\n                \n                    \n                        Left control key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            right\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/configuration/config-data.class.ts:12\n                            \n                        \n\n                \n                    \n                        Right control key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            up\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/configuration/config-data.class.ts:16\n                            \n                        \n\n                \n                    \n                        Up control key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoomin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/configuration/config-data.class.ts:24\n                            \n                        \n\n                \n                    \n                        Zoom in key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoomout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/configuration/config-data.class.ts:28\n                            \n                        \n\n                \n                    \n                        Zoom out key\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConfigData {\n  /**\n   * Left control key\n   */\n  left: string;\n  /**\n   * Right control key\n   */\n  right: string;\n  /**\n   * Up control key\n   */\n  up: string;\n  /**\n   * Down control key\n   */\n  down: string;\n  /**\n   * Zoom in key\n   */\n  zoomin: string;\n  /**\n   * Zoom out key\n   */\n  zoomout: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigurationService.html":{"url":"injectables/ConfigurationService.html","title":"injectable - ConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/configuration/configuration.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load configuration files\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loadControlConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/configuration/configuration.service.ts:10\n                            \n                        \n\n                \n                    \n                            Default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            loadControlConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadControlConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/configuration/configuration.service.ts:22\n                \n            \n\n\n            \n                \n                    Loads the config file in the assets/config folder\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nrejected or resolved promise with the loaded config-data\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ConfigData } from \"@service/configuration/config-data.class\";\n\n/**\n * Service to load configuration files\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ConfigurationService {\n\n  /**\n   * Default constructor\n   */\n  constructor() { }\n\n  /**\n   * Loads the config file in the assets/config folder\n   * \n   * @returns - rejected or resolved promise with the loaded config-data\n   */\n  public async loadControlConfig(): Promise {\n\n    return new Promise((resolve, reject) => {\n      fetch(\"assets/config/config.json\").then(\n        result => result.json().then(\n          data => {\n            let configData = data;\n            if (configData === undefined) {\n              reject();\n            }\n            else {\n              resolve(configData);\n            }\n          }\n        )\n      );\n    });\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ControlService.html":{"url":"injectables/ControlService.html","title":"injectable - ControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/control/control.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for controlling the position of the camera\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                controls\n                            \n                            \n                                el\n                            \n                            \n                                    Private\n                                keyboardRotateFactor\n                            \n                            \n                                    Private\n                                keyboardZoomFactor\n                            \n                            \n                                    Private\n                                keysPressed\n                            \n                            \n                                    Private\n                                orbitControls\n                            \n                            \n                                    Private\n                                rotateFactor\n                            \n                            \n                                    Private\n                                scrollFactor\n                            \n                            \n                                    Private\n                                surfaceAlt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addKeyboardEvents\n                            \n                            \n                                    Public\n                                createEventListener\n                            \n                            \n                                    Public\n                                getOrbitControls\n                            \n                            \n                                    Private\n                                initKeyboardControls\n                            \n                            \n                                    Public\n                                initOrbitControls\n                            \n                            \n                                    Private\n                                isKeyDown\n                            \n                            \n                                    Private\n                                isKeyUp\n                            \n                            \n                                    Private\n                                onZoom\n                            \n                            \n                                    Public\n                                updateCamOnKeyInput\n                            \n                            \n                                    Private\n                                updateSpeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/control/control.service.ts:52\n                            \n                        \n\n                \n                    \n                            Default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addKeyboardEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addKeyboardEvents(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:182\n                \n            \n\n\n            \n                \n                    Adds an eventlistener for keyboardevents\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncanvas of the scene\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEventListener\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventListener(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:94\n                \n            \n\n\n            \n                \n                    Creates an eventlistener for the mousewheel\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncanvas of the scene\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOrbitControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrbitControls()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:105\n                \n            \n\n\n            \n                \n                    Getter for orbitcontrols\n\n\n                    \n                    \n                    \n                        Returns :     CameraControls\n\n                    \n                    \n                        \nCameraControls orbtitcontrolls\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initKeyboardControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initKeyboardControls(configData: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:164\n                \n            \n\n\n            \n                \n                    Initializes the keyboardcontrols\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    configData\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndata from the config file\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initOrbitControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initOrbitControls(surfaceAlt: number, camera: THREE.PerspectiveCamera, canvas: HTMLCanvasElement, configData: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:71\n                \n            \n\n\n            \n                \n                    Initializes the orbit controls\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    surfaceAlt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nsurfacealtitude of the orbit\n\n\n                                    \n                                \n                                \n                                    camera\n                                    \n                                            THREE.PerspectiveCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -camera of the scene\n\n                                    \n                                \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncanvas from the scene\n\n\n                                    \n                                \n                                \n                                    configData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndata from the config file\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isKeyDown(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:193\n                \n            \n\n\n            \n                \n                    Checks if key is pressed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntriggered event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isKeyUp(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:208\n                \n            \n\n\n            \n                \n                    Checks if key is not pressed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntriggered eventtriggered event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onZoom(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:223\n                \n            \n\n\n            \n                \n                    Checks if client zooms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntriggered event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCamOnKeyInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCamOnKeyInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:114\n                \n            \n\n\n            \n                \n                    Updates the camera position when a key is pressed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateSpeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSpeed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/control/control.service.ts:236\n                \n            \n\n\n            \n                \n                    Updates the speed of the rotation and zoom based on camera distance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            controls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:28\n                            \n                        \n\n                \n                    \n                        Empty object to map keyboard inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('refEl')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:20\n                            \n                        \n\n                \n                    \n                        HTML hover window\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyboardRotateFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.03\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:48\n                            \n                        \n\n                \n                    \n                        Factor to adjust rotate speed with keyboard input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyboardZoomFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:52\n                            \n                        \n\n                \n                    \n                        Factor to adjust zoomspeed with keyboard input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keysPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:32\n                            \n                        \n\n                \n                    \n                        Empty object to map pressed keys\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            orbitControls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CameraControls\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:24\n                            \n                        \n\n                \n                    \n                        Orbit controls variable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            rotateFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.005\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:40\n                            \n                        \n\n                \n                    \n                        Factor to adjust ratation speed based on zoom level\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scrollFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.005\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:44\n                            \n                        \n\n                \n                    \n                        Factor to adjust scroll speed based on zoom level\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            surfaceAlt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/control/control.service.ts:36\n                            \n                        \n\n                \n                    \n                        Surface altitude of the earth object\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, ViewChild } from \"@angular/core\";\nimport * as THREE from \"three\";\nimport CameraControls from \"camera-controls\";\nimport { ElementRef } from \"@angular/core\";\nimport { ConfigData } from \"@service/configuration/config-data.class\";\n\nCameraControls.install({ THREE: THREE });\n\n/**\n * Service for controlling the position of the camera\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ControlService {\n\n  /**\n   * HTML hover window\n   */\n  @ViewChild(\"refEl\") el: ElementRef;\n  /**\n   * Orbit controls variable\n   */\n  private orbitControls: CameraControls;\n  /**\n   * Empty object to map keyboard inputs\n   */\n  private controls = {};\n  /**\n   * Empty object to map pressed keys\n   */\n  private keysPressed = {};\n  /**\n   * Surface altitude of the earth object\n   */\n  private surfaceAlt:number;\n  /**\n   * Factor to adjust ratation speed based on zoom level\n   */\n  private rotateFactor:number = 0.005;\n  /**\n   * Factor to adjust scroll speed based on zoom level\n   */\n  private scrollFactor:number = 0.005;\n  /**\n   * Factor to adjust rotate speed with keyboard input\n   */\n  private keyboardRotateFactor:number = 0.03;\n  /**\n   * Factor to adjust zoomspeed with keyboard input\n   */\n  private keyboardZoomFactor:number = 1;\n\n  /**\n   * Default constructor\n   */\n  constructor() { }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n\n   /**\n   * Initializes the orbit controls\n   * \n   * @param surfaceAlt - surfacealtitude of the orbit\n   * @param camera -camera of the scene\n   * @param canvas - canvas from the scene\n   * @param configData - data from the config file\n   */\n  public initOrbitControls(surfaceAlt:number, camera: THREE.PerspectiveCamera, canvas: HTMLCanvasElement, configData:Promise): void {\n\n    this.surfaceAlt = surfaceAlt;\n    this.orbitControls = new CameraControls(camera, canvas);\n    this.orbitControls.minDistance = 90.01;\n    this.orbitControls.maxDistance = 250;\n    this.orbitControls.dampingFactor = 0.1;\n    this.orbitControls.mouseButtons.left = CameraControls.ACTION.ROTATE;\n    this.orbitControls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\n    this.orbitControls.mouseButtons.right = CameraControls.ACTION.NONE;\n    this.orbitControls.mouseButtons.middle = CameraControls.ACTION.NONE;\n\n    this.updateSpeed();\n    this.initKeyboardControls(configData);\n    this.addKeyboardEvents(canvas);\n\n  }\n\n   /**\n   * Creates an eventlistener for the mousewheel\n   * \n   * @param canvas - canvas of the scene\n   */\n  public createEventListener(canvas: HTMLCanvasElement): void {\n\n    canvas.addEventListener(\"wheel\", (e) => this.onZoom(e));\n\n  }\n\n  /**\n   * Getter for orbitcontrols\n   * \n   * @returns - CameraControls orbtitcontrolls\n   */\n  public getOrbitControls(): CameraControls {\n\n    return this.orbitControls;\n\n  }\n\n  /**\n   * Updates the camera position when a key is pressed\n   */\n  public updateCamOnKeyInput(): void {\n\n    let left = this.keysPressed[this.controls[ControlKeys.LEFT]];\n    let right = this.keysPressed[this.controls[ControlKeys.RIGHT]];\n    let up = this.keysPressed[this.controls[ControlKeys.UP]];\n    let down = this.keysPressed[this.controls[ControlKeys.DOWN]];\n    let zoomin = this.keysPressed[this.controls[ControlKeys.ZOOMIN]];\n    let zoomout = this.keysPressed[this.controls[ControlKeys.ZOOMOUT]];\n\n    if (left && !right && !up && !down) {\n      this.orbitControls.rotate(-(this.orbitControls.azimuthRotateSpeed * this.keyboardRotateFactor), 0, true);\n    } else if (left && up && !right && !down) {\n      this.orbitControls.rotate(-(this.orbitControls.azimuthRotateSpeed * this.keyboardRotateFactor), -(this.orbitControls.polarRotateSpeed * this.keyboardRotateFactor), true);\n    } else if (left && down && !right && !up) {\n      this.orbitControls.rotate(-(this.orbitControls.azimuthRotateSpeed * this.keyboardRotateFactor), (this.orbitControls.polarRotateSpeed * this.keyboardRotateFactor), true);\n    }\n    //right multi-key controls\n    else if (right && !left && !up && !down) {\n      this.orbitControls.rotate((this.orbitControls.azimuthRotateSpeed * this.keyboardRotateFactor), 0, true);\n    } else if (right && up && !left && !down) {\n      this.orbitControls.rotate((this.orbitControls.azimuthRotateSpeed * this.keyboardRotateFactor), -(this.orbitControls.polarRotateSpeed * this.keyboardRotateFactor), true);\n    } else if (right && down && !up && !left) {\n      this.orbitControls.rotate((this.orbitControls.azimuthRotateSpeed * this.keyboardRotateFactor), (this.orbitControls.polarRotateSpeed * this.keyboardRotateFactor), true);\n    }\n    //up&down key-controls\n    else if (up && !right && !left && !down) {\n      this.orbitControls.rotate(0, -(this.orbitControls.polarRotateSpeed * this.keyboardRotateFactor), true);\n    } else if (down && !right && !up && !left) {\n      this.orbitControls.rotate(0, (this.orbitControls.polarRotateSpeed * this.keyboardRotateFactor), true);\n    }\n    //zoom key-controls\n    else if (zoomin) {\n      this.orbitControls.dolly(this.keyboardZoomFactor * this.orbitControls.dollySpeed);\n      this.updateSpeed();\n    } else if (zoomout) {\n      this.orbitControls.dolly(-(this.keyboardZoomFactor * this.orbitControls.dollySpeed));\n      this.updateSpeed();\n    }\n\n  }\n\n  // =======================================================\n  // ================= PRIVATE FUNCTIONS ===================\n  // =======================================================\n\n  /**\n   * Initializes the keyboardcontrols\n   * \n   * @param configData - data from the config file\n   */\n  private initKeyboardControls(configData: Promise): void {\n\n    configData.then(data => {\n      this.controls[ControlKeys.LEFT] = data.left;\n      this.controls[ControlKeys.RIGHT] = data.right;\n      this.controls[ControlKeys.UP] = data.up;\n      this.controls[ControlKeys.DOWN] = data.down;\n      this.controls[ControlKeys.ZOOMIN] = data.zoomin;\n      this.controls[ControlKeys.ZOOMOUT] = data.zoomout;\n    });\n\n  }\n\n  /**\n   * Adds an eventlistener for keyboardevents\n   * \n   * @param canvas - canvas of the scene\n   */\n  private addKeyboardEvents(canvas: HTMLCanvasElement): void {\n\n    canvas.addEventListener(\"keydown\", (e) => this.isKeyDown(e));\n    canvas.addEventListener(\"keyup\", (e) => this.isKeyUp(e));\n\n  }\n  /**\n   * Checks if key is pressed\n   * \n   * @param e - triggered event\n   */\n  private isKeyDown(e): void {\n\n    e.preventDefault();\n\n    if (e.key === this.controls[ControlKeys.LEFT] || e.key === this.controls[ControlKeys.RIGHT] || e.key === this.controls[ControlKeys.UP] || e.key === this.controls[ControlKeys.DOWN] || e.key === this.controls[ControlKeys.ZOOMIN] || e.key === this.controls[ControlKeys.ZOOMOUT]) {\n      this.keysPressed[e.key] = true;\n    }\n\n  }\n\n   /**\n   * Checks if key is not pressed\n   * \n   * @param e - triggered eventtriggered event\n   */\n  private isKeyUp(e): void {\n\n    e.preventDefault();\n\n    if (e.key === this.controls[ControlKeys.LEFT] || e.key === this.controls[ControlKeys.RIGHT] || e.key === this.controls[ControlKeys.UP] || e.key === this.controls[ControlKeys.DOWN] || e.key === this.controls[ControlKeys.ZOOMIN] || e.key === this.controls[ControlKeys.ZOOMOUT]) {\n      this.keysPressed[e.key] = false;\n    }\n\n  }\n\n  /**\n   * Checks if client zooms\n   * \n   * @param e - triggered event\n   */\n  private onZoom(e): void {\n\n    e.preventDefault();\n\n    if (e.deltaY !== 0) {\n      this.updateSpeed();\n    }\n\n  }\n\n  /**\n   * Updates the speed of the rotation and zoom based on camera distance\n   */\n  private updateSpeed(): void {\n\n    let speed:number = (this.orbitControls.distance - this.surfaceAlt);\n    this.orbitControls.azimuthRotateSpeed = speed * this.rotateFactor;\n    this.orbitControls.polarRotateSpeed = speed * this.rotateFactor;\n    this.orbitControls.dollySpeed = speed * this.scrollFactor;\n\n  }\n\n}\n\n/**\n * Enum for ControlKeys\n */\nexport enum ControlKeys {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  UP = \"up\",\n  DOWN = \"down\",\n  ZOOMIN = \"zoomin\",\n  ZOOMOUT = \"zoomout\"\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coordinate.html":{"url":"classes/Coordinate.html","title":"class - Coordinate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coordinate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/geo/coordinate.class.ts\n        \n\n            \n                Description\n            \n            \n                2d Coordinate\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                x\n                            \n                            \n                                    Public\n                                    Readonly\n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(coordinates: literal type | number[])\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/geo/coordinate.class.ts:15\n                            \n                        \n\n                \n                    \n                            Creates a Coordinates object from an array of two numbers\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                  \n                                                        \n                                                                    literal type | number[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe coordinates\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            x\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/coordinate.class.ts:10\n                            \n                        \n\n                \n                    \n                        The x coordinate\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            y\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/coordinate.class.ts:15\n                            \n                        \n\n                \n                    \n                        The y coordinate\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Coordinate {\n\n    /**\n     * The x coordinate\n     */\n    public readonly x: number\n\n    /**\n     * The y coordinate\n     */\n    public readonly y: number\n\n    /**\n     * Creates a Coordinates object from an array of two numbers\n     * @param coordinates - the coordinates\n     */\n    constructor(coordinates: { 0: number, 1: number } | number[]) {\n\n        if (typeof coordinates[0] !== \"number\" || typeof coordinates[1] !== \"number\") {\n            throw `Expected { 0: number, 1: number } got { 0: ${typeof coordinates[0]}, 1: ${typeof coordinates[0]} }`;\n        }\n        this.x = coordinates[1];\n        this.y = coordinates[0];\n\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/data/data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                data\n                            \n                            \n                                    Public\n                                    Readonly\n                                mapOverlays\n                            \n                            \n                                    Private\n                                mapOverlays$\n                            \n                            \n                                    Public\n                                    Readonly\n                                satellites\n                            \n                            \n                                    Private\n                                satellites$\n                            \n                            \n                                    Public\n                                    Readonly\n                                terminalLiveData\n                            \n                            \n                                    Private\n                                terminalLiveData$\n                            \n                            \n                                    Public\n                                    Readonly\n                                terminals\n                            \n                            \n                                    Private\n                                terminals$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/data/data.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/data/data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            mapOverlays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapOverlays$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(new Array())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            satellites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            satellites$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(new Array())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            terminalLiveData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            terminalLiveData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(new Array())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            terminals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            terminals$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(new Array())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/data/data.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ApiService } from \"@service/api/api.service\";\nimport { BehaviorSubject, combineLatest, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { HasUid } from \"src/app/entity/data/has-uid.interface\";\nimport { MapOverlay } from \"src/app/entity/data/map-overlay.class\";\nimport { Satellite } from \"src/app/entity/data/satellite.class\";\nimport { TerminalLiveData } from \"src/app/entity/data/terminal-live-data.class\";\nimport { Terminal } from \"src/app/entity/data/terminal.class\";\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DataService {\n\n  public readonly terminals: Observable;\n  public readonly terminalLiveData: Observable;\n  public readonly satellites: Observable;\n  public readonly data: Observable;\n  public readonly mapOverlays: Observable;\n\n  private terminals$: BehaviorSubject = new BehaviorSubject(new Array());\n  private satellites$: BehaviorSubject = new BehaviorSubject(new Array());\n  private terminalLiveData$: BehaviorSubject = new BehaviorSubject(new Array());\n  private mapOverlays$: BehaviorSubject = new BehaviorSubject(new Array());\n\n  constructor(private apiService: ApiService) {\n\n    this.terminals = this.terminals$.asObservable();\n    this.satellites = this.satellites$.asObservable();\n    this.terminalLiveData = this.terminalLiveData$.asObservable();\n    this.mapOverlays = this.mapOverlays$.asObservable();\n    this.data = combineLatest([this.terminals, this.satellites]).pipe(map(([terminals, satellites]) => [...terminals, ...satellites]));\n    this.updateData();\n\n  }\n\n  private updateData(): void {\n    this.apiService.getSatellites().then(apiResponse => this.satellites$.next(apiResponse.data as Satellite[]));\n    this.apiService.getTerminals().then(apiResponse => this.terminals$.next(apiResponse.data as Terminal[]));\n    this.apiService.getTerminalLiveData().then(apiResponse => this.terminalLiveData$.next(apiResponse.data as TerminalLiveData[]));\n    this.apiService.getMapOverlayData().then(apiResponse => this.mapOverlays$.next(apiResponse.data as MapOverlay[]));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/detail/detail.component.ts\n\n\n    \n        Description\n    \n    \n        Componente to display detailed informations of an object\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail\n            \n\n            \n                styleUrls\n                ./detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                satelliteData\n                            \n                            \n                                terminalData\n                            \n                            \n                                terminalLiveData\n                            \n                            \n                                    Public\n                                uiService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UiService, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/detail/detail.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor initializing satellite, terminal and terminalLiveDate observables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected ui-service\n\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected data-service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/detail/detail.component.ts:65\n                \n            \n\n\n            \n                \n                    Closes the detail-window via ui-service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            satelliteData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/detail/detail.component.ts:24\n                            \n                        \n\n                \n                    \n                        Observable for satellite data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            terminalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/detail/detail.component.ts:28\n                            \n                        \n\n                \n                    \n                        Observable for terminal data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            terminalLiveData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/detail/detail.component.ts:32\n                            \n                        \n\n                \n                    \n                        Observable for terminal live data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/detail/detail.component.ts:40\n                            \n                        \n\n                \n                    \n                        - injected ui-service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { DataService } from \"@service/data/data.service\";\nimport { UiService } from \"@service/ui/ui.service\";\nimport { Observable } from \"rxjs\";\nimport { map, withLatestFrom } from \"rxjs/operators\";\nimport { ApiObjectType } from \"src/app/entity/data/api-object-type.enum\";\nimport { Satellite } from \"src/app/entity/data/satellite.class\";\nimport { TerminalLiveData } from \"src/app/entity/data/terminal-live-data.class\";\nimport { Terminal } from \"src/app/entity/data/terminal.class\";\n\n/**\n * Componente to display detailed informations of an object\n */\n@Component({\n  selector: \"app-detail\",\n  templateUrl: \"./detail.component.html\",\n  styleUrls: [\"./detail.component.scss\"]\n})\nexport class DetailComponent{\n\n  /**\n   * Observable for satellite data\n   */\n  satelliteData: Observable;\n  /**\n   * Observable for terminal data\n   */\n  terminalData: Observable;\n  /**\n   * Observable for terminal live data\n   */\n  terminalLiveData: Observable;\n\n  /**\n   * Constructor initializing satellite, terminal and terminalLiveDate observables\n   * \n   * @param uiService - injected ui-service\n   * @param dataService - injected data-service\n   */\n  constructor(public uiService: UiService, private dataService: DataService) {\n\n    this.satelliteData = this.uiService.clickedObjectId.pipe(\n      map(uid => uid?.type === ApiObjectType.Satellite ? uid : null),\n      withLatestFrom(this.dataService.satellites),\n      map(([uid, satellites]) => satellites.filter(satellite => uid?.equals(satellite.getUid()))[0] ?? null)\n    );\n\n    this.terminalData = this.uiService.clickedObjectId.pipe(\n      map(uid => uid?.type === ApiObjectType.TerminalLiveData ? uid : null),\n      withLatestFrom(this.dataService.terminals),\n      map(([uid, terminals]) => terminals.filter(terminal => uid?.id === terminal.id)[0] ?? null),\n    );\n\n    this.terminalLiveData = this.uiService.clickedObjectId.pipe(\n      map(uid => uid?.type === ApiObjectType.TerminalLiveData ? uid : null),\n      withLatestFrom(this.dataService.terminalLiveData),\n      map(([uid, terminals]) => terminals.filter(terminal => uid?.id === terminal.id)[0] ?? null),\n    );\n\n  }\n\n  /**\n   * Closes the detail-window via ui-service\n   */\n  public close(): void {\n\n    this.uiService.detailsOpen = false;\n\n  }\n\n}\n\n    \n\n    \n        \n    close\n    \n    {{satellite.name}}\n    {{terminal.name}} \n    \n        \n        \n                Id: {{terminal.id}}  \n        \n        \n            Id: {{satellite.id}}\n        \n        \n            Mobility Type: {{terminal.mobilityType}}\n        \n        \n            Längengrad: {{terminalLiveData.longitude}}\n        \n        \n            Längengrad: {{satellite.longitude}}\n        \n        \n            Breitengrad: {{terminalLiveData.latitude}}\n        \n        \n    \n\n    \n\n    \n                \n                    ./detail.component.scss\n                \n                :host{\n    transition: 0.5s cubic-bezier(0.685, 0.0473, 0.346, 1);\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-between;\n    height: 100%;\n    padding: 2rem 1rem 1rem 1rem;\n    min-width: 250px;\n}\n\n\n.close-btn {\n    border: none;\n    background: none;\n    cursor: pointer;\n    color: #e1e6e7;\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    close        {{satellite.name}}    {{terminal.name}}                                     Id: {{terminal.id}}                              Id: {{satellite.id}}                            Mobility Type: {{terminal.mobilityType}}                            Längengrad: {{terminalLiveData.longitude}}                            Längengrad: {{satellite.longitude}}                            Breitengrad: {{terminalLiveData.latitude}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailComponent', 'selector': 'app-detail'},{'name': 'HoverComponent', 'selector': 'app-hover'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'Visualizer3dComponent', 'selector': 'app-visualizer3d'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feature.html":{"url":"classes/Feature.html","title":"class - Feature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/geo/feature.class.ts\n        \n\n            \n                Description\n            \n            \n                The class that represents a Feature\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                geometry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/geo/feature.class.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a new Feature object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create this Feature object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Geometry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/feature.class.ts:19\n                            \n                        \n\n                \n                    \n                        The Geometry of this Feature\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEnum, getPropertyValue } from \"../conversion-helper\";\nimport { GeometryType } from \"./geometry-type.enum\";\nimport { Geometry } from \"./gometry.class\";\nimport { MultiPolygon } from \"./multi-polygon.class\";\nimport { Polygon } from \"./polygon.class\";\n\n/**\n * The class that represents a Feature\n */\nexport class Feature {\n    /**\n     * @ignore\n     */\n    public readonly type: \"Feature\" = \"Feature\";\n\n    /**\n     * The Geometry of this Feature\n     */\n    public readonly geometry: Geometry;\n\n    /**\n     * Constructs a new Feature object from an object\n     * @param from - the object to create this Feature object from\n     */\n    constructor(from: object) {\n\n        this.geometry = object2Geometry(getPropertyValue(\"geometry\", from, \"object\"));\n\n    }\n\n}\n\n/**\n * Creates a Geomtery from an object\n * @param from - the object to create the Geometry from\n * @returns - the Geometry representing the object\n */\nfunction object2Geometry(from: object): Geometry {\n\n    let type = getEnum(\"type\", from, GeometryType);\n    switch (type) {\n        case GeometryType.Polygon:\n            return new Polygon(from);\n        case GeometryType.MultiPolygon:\n            return new MultiPolygon(from);\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeatureCollection.html":{"url":"classes/FeatureCollection.html","title":"class - FeatureCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeatureCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/geo/feature-collection.class.ts\n        \n\n            \n                Description\n            \n            \n                The GeoData type that represents a Feature collection\n\n            \n\n            \n                Extends\n            \n            \n                        GeoData\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                features\n                            \n                            \n                                type\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/geo/feature-collection.class.ts:16\n                            \n                        \n\n                \n                    \n                            Constructs a FeatureCollection object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the FeatureCollection object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Feature[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/feature-collection.class.ts:16\n                            \n                        \n\n                \n                    \n                        The Features of this feature collection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GeoDataType.FeatureCollection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/feature-collection.class.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoDataType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         GeoData\n\n                                \n                            \n                        \n                            \n                                    Defined in         GeoData:11\n\n                            \n                        \n\n                \n                    \n                        The type of GeoData\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getPropertyValue } from \"../conversion-helper\";\nimport { Feature } from \"./feature.class\";\nimport { GeoDataType } from \"./geo-data-type.enum\";\nimport { GeoData } from \"./geo-data.class\";\n\n/**\n * The GeoData type that represents a Feature collection\n */\nexport class FeatureCollection extends GeoData {\n\n    type = GeoDataType.FeatureCollection;\n\n    /**\n     * The Features of this feature collection\n     */\n    public readonly features: Feature[];\n\n    /**\n     * Constructs a FeatureCollection object from an object\n     * @param from - the object to create the FeatureCollection object from\n     */\n    constructor(from: object) {\n\n        super();\n        this.features = getPropertyValue(\"features\", from, \"array\").map(obj => new Feature(obj));\n\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoData.html":{"url":"classes/GeoData.html","title":"class - GeoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/geo/geo-data.class.ts\n        \n\n            \n                Description\n            \n            \n                The abstract superclass for all GeoData\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoDataType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/geo-data.class.ts:11\n                            \n                        \n\n                \n                    \n                        The type of GeoData\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GeoDataType } from \"./geo-data-type.enum\";\n\n/**\n * The abstract superclass for all GeoData\n */\nexport abstract class GeoData {\n\n    /**\n     * The type of GeoData\n     */\n    public readonly type: GeoDataType\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoDataProvider.html":{"url":"interfaces/GeoDataProvider.html","title":"interface - GeoDataProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoDataProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/geo-data-provider.interface.ts\n        \n\n            \n                Description\n            \n            \n                interface for loading MapOverlayData\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getMapOverlayGeodata\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMapOverlayGeodata\n                        \n                        \n                    \n                \n            \n            \n                \ngetMapOverlayGeodata(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/geo-data-provider.interface.ts:12\n                \n            \n\n\n            \n                \n                    A Promise of the map overlay data to be loaded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the object to get the map overlay geodata for\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiResponse } from \"./api-response.class\";\n\n/**\n * interface for loading MapOverlayData\n */\nexport interface GeoDataProvider {\n\n    /**\n     * A Promise of the map overlay data to be loaded\n     * @param id - The id of the object to get the map overlay geodata for\n     */\n    getMapOverlayGeodata(id: number): Promise;\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Geometry.html":{"url":"classes/Geometry.html","title":"class - Geometry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Geometry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/geo/gometry.class.ts\n        \n\n            \n                Description\n            \n            \n                The abstract superclass for all geometries\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeometryType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/gometry.class.ts:9\n                            \n                        \n\n                \n                    \n                        The type of the geometry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GeometryType } from \"./geometry-type.enum\";\n/**\n * The abstract superclass for all geometries\n */\nexport abstract class Geometry {\n    /**\n     * The type of the geometry\n     */\n    type: GeometryType\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasUid.html":{"url":"interfaces/HasUid.html","title":"interface - HasUid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HasUid\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/has-uid.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface for elements with a Uid\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getUid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/has-uid.interface.ts:11\n                \n            \n\n\n            \n                \n                    Gets the uid of the object\n\n\n                    \n                        Returns :         Uid\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Uid } from \"./uid.class\";\n\n/**\n * Interface for elements with a Uid\n */\nexport interface HasUid {\n\n    /**\n     * Gets the uid of the object\n     */\n    getUid(): Uid;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoverComponent.html":{"url":"components/HoverComponent.html","title":"component - HoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/hover/hover.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display basic information of an 3D-object on hover\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hover\n            \n\n            \n                styleUrls\n                ./hover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                satelliteData\n                            \n                            \n                                terminalData\n                            \n                            \n                                terminalLiveData\n                            \n                            \n                                    Public\n                                uiService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcPos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UiService, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/hover/hover.component.ts:47\n                            \n                        \n\n                \n                    \n                            Constructor initializing satellite, terminal and terminalLiveDate observables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe UI-Service\n\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Data-Service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            calcPos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcPos(position: literal type | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/hover/hover.component.ts:83\n                \n            \n\n\n            \n                \n                    Calculates the position from the hover window\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            literal type | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nx and y position\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \nleft and top position from the hover window\n\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            satelliteData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/hover/hover.component.ts:39\n                            \n                        \n\n                \n                    \n                        Observable for satellite data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            terminalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/hover/hover.component.ts:43\n                            \n                        \n\n                \n                    \n                        Observable for terminal data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            terminalLiveData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/hover/hover.component.ts:47\n                            \n                        \n\n                \n                    \n                        Observable for terminal live data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/hover/hover.component.ts:55\n                            \n                        \n\n                \n                    \n                        - the UI-Service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { trigger, state, style, animate, transition } from \"@angular/animations\";\nimport { UiService } from \"@service/ui/ui.service\";\nimport { DataService } from \"@service/data/data.service\";\nimport { Observable } from \"rxjs\";\nimport { map, withLatestFrom } from \"rxjs/operators\";\nimport { ApiObjectType } from \"src/app/entity/data/api-object-type.enum\";\nimport { Satellite } from \"src/app/entity/data/satellite.class\";\nimport { TerminalLiveData } from \"src/app/entity/data/terminal-live-data.class\";\nimport { Terminal } from \"src/app/entity/data/terminal.class\";\n\n\n/**\n * Component to display basic information of an 3D-object on hover\n */\n@Component({\n  selector: \"app-hover\",\n  animations: [\n    trigger(\"state\", [\n      state(\"visible\", style({\n        opacity: \"1\"\n      })),\n      state(\"hidden\", style({\n        opacity: \"0\"\n      })),\n      transition(\"* => visible\", [\n        animate(\"0.1s 100ms ease-in\")\n      ])\n    ])\n  ],\n  templateUrl: \"./hover.component.html\",\n  styleUrls: [\"./hover.component.scss\"],\n})\nexport class HoverComponent {\n\n  /**\n   * Observable for satellite data\n   */\n  satelliteData: Observable;\n  /**\n   * Observable for terminal data\n   */\n  terminalData: Observable;\n  /**\n  * Observable for terminal live data\n  */\n  terminalLiveData: Observable;\n\n  /**\n   * Constructor initializing satellite, terminal and terminalLiveDate observables\n   * \n   * @param uiService - the UI-Service\n   * @param dataService - the Data-Service\n   */\n  constructor(public uiService: UiService, private dataService: DataService) {\n\n    this.satelliteData = this.uiService.hoveredObjectId.pipe(\n      map(uid => uid?.type === ApiObjectType.Satellite ? uid : null),\n      withLatestFrom(this.dataService.satellites),\n      map(([uid, satellites]) => satellites.filter(satellite => uid?.equals(satellite.getUid()))[0] ?? null)\n    );\n\n    this.terminalData = this.uiService.hoveredObjectId.pipe(\n      map(uid => uid?.type === ApiObjectType.TerminalLiveData ? uid : null),\n      withLatestFrom(this.dataService.terminals),\n      map(([uid, terminals]) => terminals.filter(terminal => uid?.id === terminal.id)[0] ?? null),\n    );\n\n    this.terminalLiveData = this.uiService.hoveredObjectId.pipe(\n      map(uid => uid?.type === ApiObjectType.TerminalLiveData ? uid : null),\n      withLatestFrom(this.dataService.terminalLiveData),\n      map(([uid, terminals]) => terminals.filter(terminal => uid?.id === terminal.id)[0] ?? null),\n    );\n    \n  }\n\n  /**\n   * Calculates the position from the hover window\n   * \n   * @param position - x and y position\n   * @returns - left and top position from the hover window\n   */\n   public calcPos(position: { x: number, y: number } | null):{} {\n    if (position === null) {\n      return {};\n    }\n    return { \"left.px\": position.x, \"top.px\": position.y };\n  }\n}\n\n    \n\n    \n        \n    \n        {{satellite.name}}\n        {{terminal.name}}\n    \n    \n        \n            \n                Id\n                {{terminal.id}}\n            \n\n            \n                Id\n                {{satellite.id}}\n            \n\n            \n                Mobility Type\n                {{terminal.mobilityType}}\n            \n\n            \n                Längengrad\n                {{terminalLiveData.longitude}}\n            \n            \n                Längengrad\n                {{satellite.longitude}}\n            \n\n            \n                Breitengrad\n                {{terminalLiveData.latitude}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./hover.component.scss\n                \n                #tooltip{\n    position: absolute;\n    height: auto;\n    width: auto;\n    min-width: 250px;\n    background-color: rgba($color: #212121, $alpha: 0.9);\n    padding: 5px 15px 5px 15px;\n    flex-direction: row;\n    font-family: \"Poppins\", sans-serif;\n    border-radius: 10px;\n    color: #d6dbdd;\n    opacity: 2;\n    box-shadow: 2px 2px 10px -5px rgba($color: #d6dbdd, $alpha: 0.8);\n\n    .header-container{\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        margin-top: 10px;\n        margin-left: 5px;\n\n        #objName{\n            margin: 0;\n        }\n\n        #objType{\n            letter-spacing: 0.04rem;\n        }\n    }\n\n    .content-conainer{\n        margin-bottom: 10px;\n        margin-left: 5px;\n        color: #d3e0e7;\n       \n        table{\n            width: 100%;\n        }\n\n        th{\n            font-weight: lighter;\n            text-align: start;\n        }\n       \n        td{\n            text-align: end;\n        }\n    }\n}\n.inline-flex{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n} \n\n:host{\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{satellite.name}}        {{terminal.name}}                                            Id                {{terminal.id}}                                        Id                {{satellite.id}}                                        Mobility Type                {{terminal.mobilityType}}                                        Längengrad                {{terminalLiveData.longitude}}                                        Längengrad                {{satellite.longitude}}                                        Breitengrad                {{terminalLiveData.latitude}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailComponent', 'selector': 'app-detail'},{'name': 'HoverComponent', 'selector': 'app-hover'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'Visualizer3dComponent', 'selector': 'app-visualizer3d'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightService.html":{"url":"injectables/LightService.html","title":"injectable - LightService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/light/light.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for generating the light of the scene\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateLight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/light/light.service.ts:10\n                            \n                        \n\n                \n                    \n                            Default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateLight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateLight(type: LightType, color: number, intensity: number, x: number, y: number, z: number, dist?: number, decay?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/light/light.service.ts:35\n                \n            \n\n\n            \n                \n                    Generates a light based on lightType\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                LightType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \ndetermines the lighttype\n\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \ndetermines the color of the light\n\n\n                                    \n                                \n                                \n                                    intensity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \ndetermines the intensity of the light\n\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        \nsets x postion of the light\n\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        \nsets y postion of the light\n\n\n                                    \n                                \n                                \n                                    z\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        \nsets z postion of the light\n\n\n                                    \n                                \n                                \n                                    dist\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nmaximum range of the light      \n\n\n                                    \n                                \n                                \n                                    decay\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \namount the light dims along the distance of the light\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Light\n\n                    \n                    \n                        \ncreated light\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as THREE from \"three\";\n\n/**\n * Service for generating the light of the scene\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LightService {\n\n  /**\n   * Default constructor\n   */\n  constructor() { }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n\n   /**\n   * Generates a light based on lightType\n   * \n   * @param type - determines the lighttype\n   * @param color - determines the color of the light\n   * @param intensity - determines the intensity of the light\n   * @param x - sets x postion of the light\n   * @param y - sets y postion of the light\n   * @param z - sets z postion of the light\n   * @param dist - maximum range of the light      \n   * @param decay - amount the light dims along the distance of the light\n   * @returns - created light\n   */\n\n  public generateLight(type:LightType, color:number, intensity:number=1, x:number=0, y:number=0, z:number=0, dist?:number, decay?:number): THREE.Light {\n\n    let light:THREE.Light;\n    \n    switch (type) {\n      case LightType.AMBIENT:\n        light = new THREE.AmbientLight(color, intensity);\n        break;\n      case LightType.POINT:\n        light = new THREE.PointLight(color, intensity, dist, decay);\n        break;\n      case LightType.DIRECTIONAL:\n        light = new THREE.DirectionalLight(color, intensity);\n        break;\n    }\n\n    light.position.set(x, y, z);\n    \n    return light;\n\n  }\n\n}\n\n/**\n * Enum for different lightTypes\n */\nexport enum LightType {\n  AMBIENT = 0,\n  POINT = 1,\n  DIRECTIONAL = 2\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapOverlay.html":{"url":"classes/MapOverlay.html","title":"class - MapOverlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapOverlay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/map-overlay.class.ts\n        \n\n            \n                Description\n            \n            \n                The ApiObject type that represents a Map Overlay\n\n            \n\n            \n                Extends\n            \n            \n                        ApiObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                data\n                            \n                            \n                                    Private\n                                    Readonly\n                                data$\n                            \n                            \n                                    Public\n                                    Readonly\n                                groupId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                loadCalled\n                            \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                type\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadData\n                            \n                            \n                                    Public\n                                setLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/map-overlay.class.ts:55\n                            \n                        \n\n                \n                    \n                            Creates a new MapOverlay object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the overlay from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:35\n                            \n                        \n\n                \n                    \n                        The color of the overlay as a html color\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.data$.asObservable().pipe(filter(value => value !== null))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:45\n                            \n                        \n\n                \n                    \n                        The external observable for the data of the overlay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            data$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:40\n                            \n                        \n\n                \n                    \n                        The actual data of the overlay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            groupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MapOverlayGroupID\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:30\n                            \n                        \n\n                \n                    \n                        The groupId of the overlay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:20\n                            \n                        \n\n                \n                    \n                        The id of the overlay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadCalled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:50\n                            \n                        \n\n                \n                    \n                        weather or not load has already been called\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoDataProvider | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:55\n                            \n                        \n\n                \n                    \n                        The loader for the geodata\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:25\n                            \n                        \n\n                \n                    \n                        The name of the overlay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ApiObjectType.MapOverlay\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/map-overlay.class.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiObjectType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ApiObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         ApiObject:11\n\n                            \n                        \n\n                \n                    \n                        The type of ApiObject this is\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/map-overlay.class.ts:84\n                \n            \n\n\n            \n                \n                    Loads the data of the overlay if it hasn't already been loaded and this.loader is set\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLoader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoader(loader: GeoDataProvider)\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/map-overlay.class.ts:75\n                \n            \n\n\n            \n                \n                    Sets the loader for the object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loader\n                                    \n                                                GeoDataProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe loader\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\nimport { getPropertyValue } from \"../conversion-helper\";\nimport { ApiGeoData } from \"./api-geo-data.class\";\nimport { ApiObjectType } from \"./api-object-type.enum\";\nimport { ApiObject } from \"./api-object.class\";\nimport { GeoDataProvider } from \"./geo-data-provider.interface\";\nimport { MapOverlayGroupID } from \"./map-overlay-group-id.enum\";\n\n/**\n * The ApiObject type that represents a Map Overlay\n */\nexport class MapOverlay extends ApiObject {\n\n    type = ApiObjectType.MapOverlay\n\n    /**\n     * The id of the overlay\n     */\n    public readonly id: number;\n\n    /**\n     * The name of the overlay\n     */\n    public readonly name: string;\n\n    /**\n     * The groupId of the overlay\n     */\n    public readonly groupId: MapOverlayGroupID;\n\n    /**\n     * The color of the overlay as a html color\n     */\n    public readonly color: string;\n\n    /**\n     * The actual data of the overlay\n     */\n    private readonly data$: BehaviorSubject = new BehaviorSubject(null);\n\n    /**\n     * The external observable for the data of the overlay\n     */\n    public readonly data: Observable = this.data$.asObservable().pipe(filter(value => value !== null));\n\n    /**\n     * weather or not load has already been called\n     */\n    private loadCalled = false;\n\n    /**\n     * The loader for the geodata\n     */\n    private loader: GeoDataProvider | null = null;\n\n    /**\n     * Creates a new MapOverlay object from an object\n     * @param from - the object to create the overlay from\n     */\n    constructor(from: object) {\n\n        super();\n        this.id = getPropertyValue(\"ID\", from, \"number\");\n        this.name = getPropertyValue(\"name\", from, \"string\");\n        this.groupId = getPropertyValue(\"MapOverlayGroupID\", from, \"number\");\n        this.color = getPropertyValue(\"color\", from, \"string\");\n\n    }\n\n    /**\n     * Sets the loader for the object\n     * @param loader - the loader\n     */\n    public setLoader(loader: GeoDataProvider) {\n\n        this.loader = loader;\n\n    }\n\n    /**\n     * Loads the data of the overlay if it hasn't already been loaded and this.loader is set\n     */\n    public loadData(): void {\n\n        if (!this.loadCalled && this.loader !== null) {\n            this.loadCalled = true;\n            this.loader.getMapOverlayGeodata(this.id).then(\n                (apiResponse) => {\n                    this.data$.next(apiResponse.data as ApiGeoData);\n                }\n            );\n        }\n\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapdataService.html":{"url":"injectables/MapdataService.html","title":"injectable - MapdataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapdataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/mapdata/mapdata.service.ts\n        \n\n            \n                Description\n            \n            \n                Service responsible for all mapdata related tasks\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                centerRc\n                            \n                            \n                                    Private\n                                detailedLayer\n                            \n                            \n                                    Private\n                                initialResolution\n                            \n                            \n                                    Private\n                                olMap\n                            \n                            \n                                    Private\n                                olView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeMapDataOnZoom\n                            \n                            \n                                    Public\n                                getOLMap\n                            \n                            \n                                    Public\n                                getTextureFactor\n                            \n                            \n                                    Private\n                                    Static\n                                GPSToUV\n                            \n                            \n                                    Public\n                                    Async\n                                initOLMap\n                            \n                            \n                                    Public\n                                updateMapResolution\n                            \n                            \n                                    Private\n                                updateZoomLevel\n                            \n                            \n                                    Private\n                                    Static\n                                UVToGPS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/mapdata/mapdata.service.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor initialises raycaster\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            changeMapDataOnZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeMapDataOnZoom(controls: CameraControls, camera: THREE.Camera, mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:136\n                \n            \n\n\n            \n                \n                    Updating mapdata based on camera zoomlevel and distance to the earth\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    controls\n                                    \n                                            CameraControls\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused camera controls\n\n\n                                    \n                                \n                                \n                                    camera\n                                    \n                                            THREE.Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmain camera of the scene\n\n\n                                    \n                                \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmesh in which uniforms to be updated (earth-mesh)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOLMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOLMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:95\n                \n            \n\n\n            \n                \n                    Getter for the OpenLayers map\n\n\n                    \n                    \n                    \n                        Returns :     Map\n\n                    \n                    \n                        \nOpenLayers map\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTextureFactor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTextureFactor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:106\n                \n            \n\n\n            \n                \n                    Calculating the texturefactor based on the map-resolution\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \ncalculated texturefactor\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            GPSToUV\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GPSToUV(gps: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:222\n                \n            \n\n\n            \n                \n                    Converts gps-coordinates into uv-coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gps\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngps-coordinates to be converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector2\n\n                    \n                    \n                        \nuv-coordinates\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            initOLMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initOLMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:55\n                \n            \n\n\n            \n                \n                    Initializing the OpenLayers map\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nrejected or resolved promise with the canvas element\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateMapResolution\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMapResolution(controls: CameraControls, camera: THREE.Camera, mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:119\n                \n            \n\n\n            \n                \n                    Adds an event listener to the cameracontrols to maintain the mapdata with different zoomlevels\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    controls\n                                    \n                                            CameraControls\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused camera controls\n\n\n                                    \n                                \n                                \n                                    camera\n                                    \n                                            THREE.Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmain camera of the scene\n\n\n                                    \n                                \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmesh in which uniforms to be updated (earth-mesh)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateZoomLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZoomLevel(cameraDist: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:163\n                \n            \n\n\n            \n                \n                    Updates the OpenLayers map zoomlevel based on distance between earth and camera\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cameraDist\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndistance between camera and center of the mesh\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            UVToGPS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    UVToGPS(uv: THREE.Vector2)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mapdata/mapdata.service.ts:207\n                \n            \n\n\n            \n                \n                    Converts uv-coordinates into gps-coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uv\n                                    \n                                            THREE.Vector2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuv coordinates to be converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \ngps-coordinates\n\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            centerRc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Raycaster\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/mapdata/mapdata.service.ts:35\n                            \n                        \n\n                \n                    \n                        Raycaster for calculating center raycast\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            detailedLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OSM\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/mapdata/mapdata.service.ts:23\n                            \n                        \n\n                \n                    \n                        OpenStreetMap layer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialResolution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/mapdata/mapdata.service.ts:31\n                            \n                        \n\n                \n                    \n                        Initial resolution of the rendered OL map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            olMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/mapdata/mapdata.service.ts:19\n                            \n                        \n\n                \n                    \n                        OpenLayers map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            olView\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/mapdata/mapdata.service.ts:27\n                            \n                        \n\n                \n                    \n                        OpenLayers view element\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport CameraControls from \"camera-controls\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport * as THREE from \"three\";\n\n/**\n * Service responsible for all mapdata related tasks\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MapdataService {\n\n  /**\n   * OpenLayers map\n   */\n  private olMap:Map;\n  /**\n   * OpenStreetMap layer\n   */\n  private detailedLayer:OSM;\n  /**\n   * OpenLayers view element\n   */\n  private olView:View;\n  /**\n   * Initial resolution of the rendered OL map\n   */\n  private initialResolution:number;\n  /**\n   * Raycaster for calculating center raycast\n   */\n  private centerRc:THREE.Raycaster;\n\n  /**\n   * Constructor initialises raycaster\n   */\n  constructor() {\n\n    this.centerRc = new THREE.Raycaster();\n\n  }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n\n  /**\n   * Initializing the OpenLayers map\n   * \n   * @returns - rejected or resolved promise with the canvas element\n   */\n  public async initOLMap(): Promise{\n\n    let osm = new OSM();\n\n    this.detailedLayer = new TileLayer({\n      source: osm\n    });\n\n    this.olView = new View({\n      projection: \"EPSG:4326\",\n      center: [0,0],\n      zoom: 1\n    });\n\n    this.olMap = new Map({\n      target: \"ol-map\",\n      layers: [\n        this.detailedLayer\n      ],\n      view: this.olView\n    });\n\n    this.initialResolution = this.olView.getResolution();\n\n    return new Promise((resolve, reject) => this.olMap.once(\"rendercomplete\", () => {\n      let canvas = document.querySelector(\".ol-layer canvas\") as HTMLCanvasElement;\n      if(canvas === null){\n        reject(\"Could not find Canvas-Element!\");\n      }else {\n        resolve(canvas);\n      }\n    }));\n\n  }\n\n  /**\n   * Getter for the OpenLayers map\n   * \n   * @returns - OpenLayers map\n   */\n  public getOLMap(): Map {\n\n    return this.olMap;\n\n  }\n\n  /**\n   * Calculating the texturefactor based on the map-resolution\n   * \n   * @returns - calculated texturefactor\n   */\n  public getTextureFactor(): number {\n\n    return this.initialResolution / this.olView.getResolution();\n\n  }\n\n  /**\n   * Adds an event listener to the cameracontrols to maintain the mapdata with different zoomlevels\n   * \n   * @param controls - used camera controls\n   * @param camera - main camera of the scene\n   * @param mesh - mesh in which uniforms to be updated (earth-mesh)\n   */\n  public updateMapResolution(controls:CameraControls, camera:THREE.Camera, mesh:THREE.Mesh): void {\n\n    controls.addEventListener(\"sleep\", () => this.changeMapDataOnZoom(controls, camera, mesh));\n  \n  }\n\n  // =======================================================\n  // ================= Private FUNCTIONS ===================\n  // =======================================================\n\n  /**\n   * Updating mapdata based on camera zoomlevel and distance to the earth\n   * \n   * @param controls - used camera controls\n   * @param camera - main camera of the scene\n   * @param mesh - mesh in which uniforms to be updated (earth-mesh)\n   */\n  private changeMapDataOnZoom(controls:CameraControls, camera:THREE.Camera, mesh:THREE.Mesh): void {\n\n    this.centerRc.setFromCamera({x: 0, y: 0}, camera);\n    let intersectsCenter:THREE.Intersection[] = this.centerRc.intersectObject(mesh);\n    let cameraDist = controls.distance;\n    this.updateZoomLevel(cameraDist);\n\n    if(intersectsCenter.length > 0){\n      let uv = intersectsCenter[0].uv;\n\n      this.olView.setCenter(MapdataService.UVToGPS(uv));\n      let center = MapdataService.GPSToUV(this.olView.getCenter());\n\n      this.olMap.once(\"rendercomplete\", () => {\n        (mesh.material as THREE.ShaderMaterial).uniforms.Center.value = center; \n        (mesh.material as THREE.ShaderMaterial).uniforms.Scale.value = this.getTextureFactor();\n        (mesh.material as THREE.ShaderMaterial).uniforms.DetailTex.value.needsUpdate = true;\n      });\n    }\n\n  }\n\n  /**\n   * Updates the OpenLayers map zoomlevel based on distance between earth and camera\n   * \n   * @param cameraDist - distance between camera and center of the mesh\n   */\n  private updateZoomLevel(cameraDist:number): void {\n\n    if(cameraDist > 200) {\n      this.olView.setZoom(1);\n    }else if(cameraDist > 180){\n      this.olView.setZoom(2);\n    }else if(cameraDist > 133){\n      this.olView.setZoom(3);\n    }else if(cameraDist > 111){\n      this.olView.setZoom(4);\n    }else if(cameraDist > 100){\n      this.olView.setZoom(5);\n    }else if(cameraDist > 95){\n      this.olView.setZoom(6);\n    }else if(cameraDist > 92.3){\n      this.olView.setZoom(7);\n    }else if(cameraDist > 91.5){\n      this.olView.setZoom(8);\n    }else if(cameraDist > 90.7){\n      this.olView.setZoom(9);\n    }else if(cameraDist > 90.3){\n      this.olView.setZoom(10);\n    }else if(cameraDist > 90.15){\n      this.olView.setZoom(11);\n    }else if(cameraDist > 90.08){\n      this.olView.setZoom(12);\n    }else if(cameraDist > 90.04){\n      this.olView.setZoom(13);\n    }else if(cameraDist > 90.02){\n      this.olView.setZoom(14);\n    }else if(cameraDist > 90.01){\n      this.olView.setZoom(15);\n    }else if(cameraDist > 90){\n      this.olView.setZoom(16);\n    }\n\n  }\n\n  /**\n   * Converts uv-coordinates into gps-coordinates\n   * \n   * @param uv - uv coordinates to be converted\n   * @returns - gps-coordinates\n   */\n  private static UVToGPS(uv:THREE.Vector2): number[] {\n\n    return [\n      360 * uv.x - 180,\n      180 * uv.y - 90\n    ];\n\n  }\n\n  /**\n   * Converts gps-coordinates into uv-coordinates\n   * \n   * @param gps - gps-coordinates to be converted\n   * @returns - uv-coordinates\n   */\n  private static GPSToUV(gps:number[]): THREE.Vector2 {\n\n    gps[0] = ((((gps[0]) + 180) % 360) + 360) % 360 - 180;\n    return new THREE.Vector2((gps[0] + 180) / 360, (gps[1] + 90) / 180);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\n\n/**\n * Module for initializing the angular material UI component library\n */\nconst MaterialModules = [\n  MatSidenavModule,\n  MatSlideToggleModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MaterialModules\n  ],\n  exports: [\n    MaterialModules\n  ],\n})\n\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the menu\nToggles visible objects\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                showBeams\n                            \n                            \n                                    Public\n                                showSatellites\n                            \n                            \n                                    Public\n                                showTeleports\n                            \n                            \n                                    Public\n                                showTerminals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleBeams\n                            \n                            \n                                    Public\n                                toggleSatellites\n                            \n                            \n                                    Public\n                                toggleTeleports\n                            \n                            \n                                    Public\n                                toggleTerminals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(meshControllerService: MeshControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor injects services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        meshControllerService\n                                                  \n                                                        \n                                                                        MeshControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected meshControlerService\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleBeams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleBeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/menu/menu.component.ts:86\n                \n            \n\n\n            \n                \n                    Method to hide or show the beams on the earth\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSatellites\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSatellites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/menu/menu.component.ts:73\n                \n            \n\n\n            \n                \n                    Method to hide or show the satellites on the earth\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleTeleports\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleTeleports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/menu/menu.component.ts:47\n                \n            \n\n\n            \n                \n                    Method to hide or show the teleports on the earth\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleTerminals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleTerminals()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/menu/menu.component.ts:60\n                \n            \n\n\n            \n                \n                    Method to hide or show the terminals on the earth\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showBeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        Trigger to show beams/overlays\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showSatellites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/menu/menu.component.ts:27\n                            \n                        \n\n                \n                    \n                        Trigger to show satellites\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showTeleports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/menu/menu.component.ts:19\n                            \n                        \n\n                \n                    \n                        Trigger to show teleports\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showTerminals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/menu/menu.component.ts:23\n                            \n                        \n\n                \n                    \n                        Trigger to show terminals\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { MeshControllerService } from \"@service/mesh-controller/mesh-controller.service\";\n\n/**\n * Component to display the menu\n * \n * Toggles visible objects\n */\n@Component({\n  selector: \"app-menu\",\n  templateUrl: \"./menu.component.html\",\n  styleUrls: [\"./menu.component.scss\"]\n})\nexport class MenuComponent {\n\n  /**\n   * Trigger to show teleports\n   */\n  public showTeleports: boolean = true;\n  /**\n   * Trigger to show terminals\n   */\n  public showTerminals: boolean = true;\n  /**\n   * Trigger to show satellites\n   */\n  public showSatellites: boolean = true;\n  /**\n   * Trigger to show beams/overlays\n   */\n  public showBeams: boolean = true;\n\n  /**\n   * Constructor injects services\n   * \n   * @param meshControllerService - injected meshControlerService\n   */\n  constructor(private meshControllerService: MeshControllerService) { }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n  \n  /**\n   * Method to hide or show the teleports on the earth\n   */\n  public toggleTeleports(): void {\n\n    if (this.showTeleports) {\n      this.meshControllerService.showTeleports();\n    } else {\n      this.meshControllerService.hideTeleports();\n    }\n\n  }\n\n  /**\n   * Method to hide or show the terminals on the earth\n   */\n  public toggleTerminals(): void {\n\n    if (this.showTerminals) {\n      this.meshControllerService.showTerminals();\n    } else {\n      this.meshControllerService.hideTerminals();\n    }\n\n  }\n\n  /**\n   * Method to hide or show the satellites on the earth\n   */\n  public toggleSatellites(): void {\n\n    if (this.showSatellites) {\n      this.meshControllerService.showSatellites();\n    } else {\n      this.meshControllerService.hideSatellites();\n    }\n\n  }\n\n  /**\n   * Method to hide or show the beams on the earth\n   */\n  public toggleBeams(): void {\n\n    if (this.showBeams) {\n      this.meshControllerService.showMapOverlays();\n    } else {\n      this.meshControllerService.hideMapOverlays();\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n    Anzeige\n    \n        \n            Teleports (rot)\n        \n        \n            Terminals (grün)\n        \n        \n            Satelliten (gelb)\n        \n        \n        \n            Beams\n        \n    \n\n\n\n    Steuerung\n    \n        Kamera bewegen:\n        \n            mouseLinke Maustaste + Maus bewegen\n        \n        \n            keyboardPfeiltasten\n        \n        Kamera zoomen:\n        \n            mouseMausrad\n        \n        \n            keyboard+ und -\n        \n    \n\n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                :host{\n    transition: 0.5s cubic-bezier(0.685, 0.0473, 0.346, 1);\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-between;\n    height: 100%;\n    padding: 16px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Anzeige                        Teleports (rot)                            Terminals (grün)                            Satelliten (gelb)                                    Beams                Steuerung            Kamera bewegen:                    mouseLinke Maustaste + Maus bewegen                            keyboardPfeiltasten                Kamera zoomen:                    mouseMausrad                            keyboard+ und -            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailComponent', 'selector': 'app-detail'},{'name': 'HoverComponent', 'selector': 'app-hover'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'Visualizer3dComponent', 'selector': 'app-visualizer3d'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetaListing.html":{"url":"classes/MetaListing.html","title":"class - MetaListing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetaListing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/meta.class.ts\n        \n\n            \n                Description\n            \n            \n                Represents the metadata for a response with a list of data objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                countTotal\n                            \n                            \n                                listing\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                sort\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/meta.class.ts:64\n                            \n                        \n\n                \n                    \n                            Creates a MetaListing object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the MetaListing object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:44\n                            \n                        \n\n                \n                    \n                        The count of items in the response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countTotal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:49\n                            \n                        \n\n                \n                    \n                        The count of total items available\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:34\n                            \n                        \n\n                \n                    \n                        Weather or not this is a listing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:59\n                            \n                        \n\n                \n                    \n                        The index of the page of the response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:54\n                            \n                        \n\n                \n                    \n                        The pageSize of the response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:64\n                            \n                        \n\n                \n                    \n                        A list of tokens the response data is sorted by\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:39\n                            \n                        \n\n                \n                    \n                        The Status code of the response\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getPropertyValue } from \"../conversion-helper\";\n/**\n * Represents the metadata for a response with a single data object\n */\nexport class MetaSingle {\n\n    /**\n     * Weather or not this is a listing\n     */\n    listing = false;\n\n    /**\n     * The status of the response\n     */\n    status: number;\n\n    /**\n     * Creates a MetaSingle object from an object\n     * @param from - the object to create the MetaSingle object from\n     */\n    constructor(from: object) {\n        this.status = getPropertyValue(\"status\", from, \"number\");\n    }\n}\n\n/**\n * Represents the metadata for a response with a list of data objects\n */\nexport class MetaListing {\n\n    /**\n     * Weather or not this is a listing\n     */\n    listing = true;\n\n    /**\n     * The Status code of the response\n     */\n    status: number;\n\n    /**\n     * The count of items in the response\n     */\n    count: number;\n\n    /**\n     * The count of total items available\n     */\n    countTotal: number;\n\n    /**\n     * The pageSize of the response\n     */\n    pageSize: number;\n\n    /**\n     * The index of the page of the response\n     */\n    page: number;\n\n    /**\n     * A list of tokens the response data is sorted by\n     */\n    sort: string[];\n\n    /**\n     * Creates a MetaListing object from an object\n     * @param from - the object to create the MetaListing object from\n     */\n    constructor(from: object) {\n        this.status = getPropertyValue(\"status\", from, \"number\");\n        this.count = getPropertyValue(\"count\", from, \"number\");\n        this.countTotal = getPropertyValue(\"countTotal\", from, \"number\");\n        this.pageSize = getPropertyValue(\"pageSize\", from, \"number\");\n        this.page = getPropertyValue(\"page\", from, \"number\");\n        this.sort = getPropertyValue(\"sort\", from, \"array\");\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetaSingle.html":{"url":"classes/MetaSingle.html","title":"class - MetaSingle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetaSingle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/meta.class.ts\n        \n\n            \n                Description\n            \n            \n                Represents the metadata for a response with a single data object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listing\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/meta.class.ts:15\n                            \n                        \n\n                \n                    \n                            Creates a MetaSingle object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the MetaSingle object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:10\n                            \n                        \n\n                \n                    \n                        Weather or not this is a listing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/meta.class.ts:15\n                            \n                        \n\n                \n                    \n                        The status of the response\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getPropertyValue } from \"../conversion-helper\";\n/**\n * Represents the metadata for a response with a single data object\n */\nexport class MetaSingle {\n\n    /**\n     * Weather or not this is a listing\n     */\n    listing = false;\n\n    /**\n     * The status of the response\n     */\n    status: number;\n\n    /**\n     * Creates a MetaSingle object from an object\n     * @param from - the object to create the MetaSingle object from\n     */\n    constructor(from: object) {\n        this.status = getPropertyValue(\"status\", from, \"number\");\n    }\n}\n\n/**\n * Represents the metadata for a response with a list of data objects\n */\nexport class MetaListing {\n\n    /**\n     * Weather or not this is a listing\n     */\n    listing = true;\n\n    /**\n     * The Status code of the response\n     */\n    status: number;\n\n    /**\n     * The count of items in the response\n     */\n    count: number;\n\n    /**\n     * The count of total items available\n     */\n    countTotal: number;\n\n    /**\n     * The pageSize of the response\n     */\n    pageSize: number;\n\n    /**\n     * The index of the page of the response\n     */\n    page: number;\n\n    /**\n     * A list of tokens the response data is sorted by\n     */\n    sort: string[];\n\n    /**\n     * Creates a MetaListing object from an object\n     * @param from - the object to create the MetaListing object from\n     */\n    constructor(from: object) {\n        this.status = getPropertyValue(\"status\", from, \"number\");\n        this.count = getPropertyValue(\"count\", from, \"number\");\n        this.countTotal = getPropertyValue(\"countTotal\", from, \"number\");\n        this.pageSize = getPropertyValue(\"pageSize\", from, \"number\");\n        this.page = getPropertyValue(\"page\", from, \"number\");\n        this.sort = getPropertyValue(\"sort\", from, \"array\");\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiPolygon.html":{"url":"classes/MultiPolygon.html","title":"class - MultiPolygon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiPolygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/geo/multi-polygon.class.ts\n        \n\n            \n                Description\n            \n            \n                The Geometry type that represents a MultiPolygon\n\n            \n\n            \n                Extends\n            \n            \n                        Geometry\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                polygons\n                            \n                            \n                                type\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/geo/multi-polygon.class.ts:16\n                            \n                        \n\n                \n                    \n                            Consturcts a MultiPolygon object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to construct this MultiPolygon object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            polygons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Polygon[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/multi-polygon.class.ts:16\n                            \n                        \n\n                \n                    \n                        The Polygons of this Multipolygon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GeometryType.MultiPolygon\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/multi-polygon.class.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeometryType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Geometry\n\n                                \n                            \n                        \n                            \n                                    Defined in         Geometry:9\n\n                            \n                        \n\n                \n                    \n                        The type of the geometry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getPropertyValue } from \"../conversion-helper\";\nimport { GeometryType } from \"./geometry-type.enum\";\nimport { Geometry } from \"./gometry.class\";\nimport { Polygon } from \"./polygon.class\";\n\n/**\n * The Geometry type that represents a MultiPolygon\n */\nexport class MultiPolygon extends Geometry {\n\n    type = GeometryType.MultiPolygon;\n\n    /**\n     * The Polygons of this Multipolygon\n     */\n    polygons: Polygon[];\n\n    /**\n     * Consturcts a MultiPolygon object from an object\n     * @param from - the object to construct this MultiPolygon object from\n     */\n    constructor(from: object) {\n\n        super();\n        this.polygons = (getPropertyValue(\"coordinates\", from, \"array\")).map(coordinates => new Polygon({ type: \"Polygon\", coordinates: coordinates }));\n\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectPlacerService.html":{"url":"injectables/ObjectPlacerService.html","title":"injectable - ObjectPlacerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObjectPlacerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/object-placer/object-placer.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for converting gps-coordiantes into xyz-cooridnates\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcCoords\n                            \n                            \n                                    Public\n                                gps2Vec3\n                            \n                            \n                                    Public\n                                transfromLatLon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/object-placer/object-placer.service.ts:10\n                            \n                        \n\n                \n                    \n                            Default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            calcCoords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcCoords(coords: THREE.Vector3)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/object-placer/object-placer.service.ts:43\n                \n            \n\n\n            \n                \n                    Calculates spherical xyz-coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coords\n                                    \n                                            THREE.Vector3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncoordinates in radians to be used for calculation\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \nspherical xyz-coordinates\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            gps2Vec3\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gps2Vec3(coords: THREE.Vector2, height?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/object-placer/object-placer.service.ts:64\n                \n            \n\n\n            \n                \n                    Converts gps-coordinates into xyz-coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coords\n                                    \n                                            THREE.Vector2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlatitude and longitude of the object\n\n\n                                    \n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nheight of the object or 0\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \nspherical xyz-coordinates\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transfromLatLon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transfromLatLon(coords: THREE.Vector3)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/object-placer/object-placer.service.ts:27\n                \n            \n\n\n            \n                \n                    Calculates coordinates in radians from gps-coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coords\n                                    \n                                            THREE.Vector3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngps coordiantes to be used for calculation\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \ncoordinates in radians\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as THREE from \"three\";\n\n/**\n * Service for converting gps-coordiantes into xyz-cooridnates\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ObjectPlacerService {\n\n  /**\n   * Default constructor\n   */\n  constructor() { }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n\n  /**\n   * Calculates coordinates in radians from gps-coordinates\n   * \n   * @param coords - gps coordiantes to be used for calculation\n   * @returns - coordinates in radians\n   */\n  public transfromLatLon(coords: THREE.Vector3): THREE.Vector3 {\n\n    const tCoords = new THREE.Vector3();\n    tCoords.x = coords.x * (Math.PI / 180);\n    tCoords.y = -coords.y * (Math.PI / 180);\n    tCoords.z = coords.z;\n    return tCoords;\n\n  }\n\n  /**\n   * Calculates spherical xyz-coordinates\n   * \n   * @param coords - coordinates in radians to be used for calculation\n   * @returns - spherical xyz-coordinates\n   */\n  public calcCoords(coords: THREE.Vector3): THREE.Vector3 {\n\n    let tLat = coords.x;\n    let tLon = coords.y;\n    let radius = coords.z;\n\n    let x = radius * Math.cos(tLat) * Math.cos(tLon);\n    let y = radius * Math.sin(tLat);\n    let z = radius * Math.cos(tLat) * Math.sin(tLon);\n\n    return new THREE.Vector3(x, y, z);\n\n  }\n\n  /**\n   * Converts gps-coordinates into xyz-coordinates\n   * \n   * @param coords - latitude and longitude of the object\n   * @param height - height of the object or 0\n   * @returns - spherical xyz-coordinates\n   */\n  public gps2Vec3(coords: THREE.Vector2, height?: number): THREE.Vector3 {\n\n    return this.calcCoords(this.transfromLatLon(new THREE.Vector3(coords.x, coords.y, height ?? 0)));\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Polygon.html":{"url":"classes/Polygon.html","title":"class - Polygon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Polygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/geo/polygon.class.ts\n        \n\n            \n                Description\n            \n            \n                The Geometry type that represents a Polygon\n\n            \n\n            \n                Extends\n            \n            \n                        Geometry\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                coordinates\n                            \n                            \n                                    Public\n                                    Readonly\n                                holes\n                            \n                            \n                                type\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/geo/polygon.class.ts:20\n                            \n                        \n\n                \n                    \n                            Constructs a Polygon object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to construct the Polygon object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            coordinates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Coordinate[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/polygon.class.ts:15\n                            \n                        \n\n                \n                    \n                        The coordinates of the border of this Polygon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            holes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Coordinate[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/polygon.class.ts:20\n                            \n                        \n\n                \n                    \n                        The coordinates of the holes in this Polygon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GeometryType.Polygon\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/geo/polygon.class.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeometryType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Geometry\n\n                                \n                            \n                        \n                            \n                                    Defined in         Geometry:9\n\n                            \n                        \n\n                \n                    \n                        The type of the geometry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getPropertyValue } from \"../conversion-helper\";\nimport { Coordinate } from \"./coordinate.class\";\nimport { GeometryType } from \"./geometry-type.enum\";\nimport { Geometry } from \"./gometry.class\";\n\n/**\n * The Geometry type that represents a Polygon\n */\nexport class Polygon extends Geometry {\n    type = GeometryType.Polygon;\n\n    /**\n     * The coordinates of the border of this Polygon\n     */\n    public readonly coordinates: Coordinate[];\n\n    /**\n     * The coordinates of the holes in this Polygon\n     */\n    public readonly holes: Coordinate[];\n\n\n    /**\n     * Constructs a Polygon object from an object\n     * @param from - the object to construct the Polygon object from\n     */\n    constructor(from: object) {\n        super();\n        let [coordinates, holes] = getPropertyValue(\"coordinates\", from, \"array\");\n        this.coordinates = coordinates.map(coordinate => new Coordinate(coordinate));\n        if (holes) {\n            this.holes = holes.map(coordinate => new Coordinate(coordinate));\n        }\n        else {\n            this.holes = Array();\n        }\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Satellite.html":{"url":"classes/Satellite.html","title":"class - Satellite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Satellite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/satellite.class.ts\n        \n\n            \n                Description\n            \n            \n                The ApiObject type that represents a Satellite\n\n            \n\n            \n                Extends\n            \n            \n                        ApiObject\n            \n\n            \n                Implements\n            \n            \n                            HasUid\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                longitude\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/satellite.class.ts:28\n                            \n                        \n\n                \n                    \n                            Constructs a Satellite object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the Satellite object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/satellite.class.ts:18\n                            \n                        \n\n                \n                    \n                        The id of the satellite\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/satellite.class.ts:28\n                            \n                        \n\n                \n                    \n                        The longitude of the satellite\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/satellite.class.ts:23\n                            \n                        \n\n                \n                    \n                        The name of the satellite\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ApiObjectType.Satellite\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/satellite.class.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiObjectType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ApiObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         ApiObject:11\n\n                            \n                        \n\n                \n                    \n                        The type of ApiObject this is\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/satellite.class.ts:45\n                \n            \n\n\n            \n                \n                    Getter for the Uid\n\n\n                    \n                    \n                    \n                        Returns :         Uid\n\n                    \n                    \n                        \nthe Uid of the Satellite\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { getGPS, getPropertyValue } from \"../conversion-helper\";\nimport { ApiObjectType } from \"./api-object-type.enum\";\nimport { ApiObject } from \"./api-object.class\";\nimport { HasUid } from \"./has-uid.interface\";\nimport { Uid } from \"./uid.class\";\n\n/**\n * The ApiObject type that represents a Satellite\n */\nexport class Satellite extends ApiObject implements HasUid {\n\n    public readonly type = ApiObjectType.Satellite;\n\n    /**\n     * The id of the satellite\n     */\n    public readonly id: number;\n\n    /**\n     * The name of the satellite\n     */\n    public readonly name: string;\n\n    /**\n     * The longitude of the satellite\n     */\n    public readonly longitude: number;\n\n    /**\n     * Constructs a Satellite object from an object\n     * @param from - the object to create the Satellite object from\n     */\n    constructor(from: object) {\n        super();\n        this.id = getPropertyValue(\"ID\", from, \"number\");\n        this.name = getPropertyValue(\"name\", from, \"string\");\n        this.longitude = getGPS(\"longitude\", from);\n    }\n\n    /**\n     * Getter for the Uid\n     * @returns - the Uid of the Satellite\n     */\n    public getUid(): Uid {\n        return new Uid(this.type, this.id);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Terminal.html":{"url":"classes/Terminal.html","title":"class - Terminal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Terminal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/terminal.class.ts\n        \n\n            \n                Description\n            \n            \n                The ApiObject type that represents Terminal\n\n            \n\n            \n                Extends\n            \n            \n                        ApiObject\n            \n\n            \n                Implements\n            \n            \n                            HasUid\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                mobilityType\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                type\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/terminal.class.ts:28\n                            \n                        \n\n                \n                    \n                            Constructs a Terminal object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the Terminal object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal.class.ts:18\n                            \n                        \n\n                \n                    \n                        The id of the terminal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobilityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MobilityType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal.class.ts:28\n                            \n                        \n\n                \n                    \n                        The mobility type if the object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal.class.ts:23\n                            \n                        \n\n                \n                    \n                        The name of the terminal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ApiObjectType.Terminal\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal.class.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiObjectType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ApiObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         ApiObject:11\n\n                            \n                        \n\n                \n                    \n                        The type of ApiObject this is\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/terminal.class.ts:45\n                \n            \n\n\n            \n                \n                    Getter for the Uid\n\n\n                    \n                    \n                    \n                        Returns :         Uid\n\n                    \n                    \n                        \nThe Uid of the terminal\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { getEnum, getPropertyValue } from \"../conversion-helper\";\nimport { ApiObjectType } from \"./api-object-type.enum\";\nimport { ApiObject } from \"./api-object.class\";\nimport { HasUid } from \"./has-uid.interface\";\nimport { MobilityType } from \"./mobility-type.enum\";\nimport { Uid } from \"./uid.class\";\n\n/**\n * The ApiObject type that represents Terminal\n */\nexport class Terminal extends ApiObject implements HasUid {\n\n    type = ApiObjectType.Terminal;\n\n    /**\n     * The id of the terminal\n     */\n    public readonly id: number;\n\n    /**\n     * The name of the terminal\n     */\n    public readonly name: string;\n\n    /**\n     * The mobility type if the object\n     */\n    public mobilityType: MobilityType;\n\n    /**\n     * Constructs a Terminal object from an object\n     * @param from - the object to create the Terminal object from\n     */\n    constructor(from: object) {\n        super();\n        this.id = getPropertyValue(\"ID\", from, \"number\");\n        this.name = getPropertyValue(\"name\", from, \"string\");\n        this.mobilityType = getEnum(\"mobilityType\", from, MobilityType);\n    }\n\n    /**\n     * Getter for the Uid\n     * @returns - The Uid of the terminal\n     */\n    getUid(): Uid {\n        return new Uid(this.type, this.id);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TerminalLiveData.html":{"url":"classes/TerminalLiveData.html","title":"class - TerminalLiveData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TerminalLiveData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/terminal-live-data.class.ts\n        \n\n            \n                Description\n            \n            \n                The ApiObject type that represents TerminalLiveData\n\n            \n\n            \n                Extends\n            \n            \n                        ApiObject\n            \n\n            \n                Implements\n            \n            \n                            HasUid\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                aggregatedStatus\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                altitude\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                latitude\n                            \n                            \n                                    Public\n                                    Readonly\n                                longitude\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/terminal-live-data.class.ts:38\n                            \n                        \n\n                \n                    \n                            Constructs a TerminalLiveData object from an object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe object to create the TerminalLiveData object from\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            aggregatedStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AggregatedStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal-live-data.class.ts:23\n                            \n                        \n\n                \n                    \n                        The aggregated status of the terminal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            altitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal-live-data.class.ts:38\n                            \n                        \n\n                \n                    \n                        The altitude of the object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal-live-data.class.ts:18\n                            \n                        \n\n                \n                    \n                        The id of the terminal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal-live-data.class.ts:28\n                            \n                        \n\n                \n                    \n                        The latitude of the terminal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal-live-data.class.ts:33\n                            \n                        \n\n                \n                    \n                        The longitude of the terminal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ApiObjectType.TerminalLiveData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/terminal-live-data.class.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiObjectType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ApiObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         ApiObject:11\n\n                            \n                        \n\n                \n                    \n                        The type of ApiObject this is\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/terminal-live-data.class.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Uid\n\n                    \n                    \n                        \nthe Uid of the object\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { getEnum, getGPS, getPropertyValue } from \"../conversion-helper\";\nimport { AggregatedStatus } from \"./aggregated-status.enum\";\nimport { ApiObjectType } from \"./api-object-type.enum\";\nimport { ApiObject } from \"./api-object.class\";\nimport { HasUid } from \"./has-uid.interface\";\nimport { Uid } from \"./uid.class\";\n\n/**\n * The ApiObject type that represents TerminalLiveData\n */\nexport class TerminalLiveData extends ApiObject implements HasUid {\n\n    public readonly type = ApiObjectType.TerminalLiveData;\n\n    /**\n     * The id of the terminal\n     */\n    public readonly id: number;\n\n    /**\n     * The aggregated status of the terminal\n     */\n    public readonly aggregatedStatus: AggregatedStatus;\n\n    /**\n     * The latitude of the terminal\n     */\n    public readonly latitude: number;\n\n    /**\n     * The longitude of the terminal\n     */\n    public readonly longitude: number;\n\n    /**\n     * The altitude of the object\n     */\n    public readonly altitude?: number;\n\n    /**\n     * Constructs a TerminalLiveData object from an object\n     * @param from - the object to create the TerminalLiveData object from\n     */\n    constructor(from: object) {\n        super();\n        this.id = getPropertyValue(\"ID\", from, \"number\");\n        this.aggregatedStatus = getEnum(\"aggregatedStatus\", from, AggregatedStatus);\n        this.latitude = getGPS(\"latitude\", from);\n        this.longitude = getGPS(\"longitude\", from);\n        this.altitude = getGPS(\"altitude\", from, true);\n    }\n\n    /**\n     * \n     * @returns - the Uid of the object\n     */\n    getUid(): Uid {\n        return new Uid(this.type, this.id);\n    }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TextureLoaderService.html":{"url":"injectables/TextureLoaderService.html","title":"injectable - TextureLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TextureLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/texture-loader/texture-loader.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to create the canvas texture of the earth and the background texture\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                TEXTURE_PATH\n                            \n                            \n                                    Private\n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertMapdataToTexture\n                            \n                            \n                                    Public\n                                loadOrbitTextures\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/texture-loader/texture-loader.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor initializes the texture loader\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertMapdataToTexture\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertMapdataToTexture(mesh: THREE.Mesh, canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/texture-loader/texture-loader.service.ts:40\n                \n            \n\n\n            \n                \n                    Creates a detailed and a not detailed canvas texture and sets the uniforms of the shadermaterial\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmesh to be textured\n\n\n                                    \n                                \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncanvas object of the scene\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadOrbitTextures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadOrbitTextures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/texture-loader/texture-loader.service.ts:54\n                \n            \n\n\n            \n                \n                    Creates the background texture of the scene\n\n\n                    \n                    \n                    \n                        Returns :     THREE.Texture\n\n                    \n                    \n                        \nbackground texture of the scene\n\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            TEXTURE_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"../../assets/texture/\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/texture-loader/texture-loader.service.ts:19\n                            \n                        \n\n                \n                    \n                        Path where textures are saved\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            textureLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.TextureLoader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/texture-loader/texture-loader.service.ts:15\n                            \n                        \n\n                \n                    \n                        Texture loader variable\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as THREE from \"three\";\n\n/**\n * Service to create the canvas texture of the earth and the background texture\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TextureLoaderService {\n\n  /**\n   * Texture loader variable\n   */\n  private textureLoader:THREE.TextureLoader;\n  /**\n   * Path where textures are saved\n   */\n  private static TEXTURE_PATH:String = \"../../assets/texture/\";\n\n  /**\n   * Constructor initializes the texture loader\n   */\n  constructor() { \n\n    this.textureLoader = new THREE.TextureLoader();\n\n  }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n\n  /**\n   * Creates a detailed and a not detailed canvas texture and sets the uniforms of the shadermaterial\n   * \n   * @param mesh - mesh to be textured\n   * @param canvas - canvas object of the scene\n   */\n  public convertMapdataToTexture(mesh:THREE.Mesh, canvas:HTMLCanvasElement): void {\n\n    let detailTex = new THREE.CanvasTexture(canvas);\n    let backgroundTex = new THREE.CanvasTexture(canvas);\n    (mesh.material as THREE.ShaderMaterial).uniforms.DetailTex.value = detailTex;\n    (mesh.material as THREE.ShaderMaterial).uniforms.BackgroundTex.value = backgroundTex;\n\n  }\n\n  /**\n   * Creates the background texture of the scene\n   * \n   * @returns - background texture of the scene\n   */\n  public loadOrbitTextures(): THREE.Texture {\n\n    const tex = this.textureLoader.load(`${TextureLoaderService.TEXTURE_PATH}background-stars.diffuse.8192x4096.jpg`);\n    return tex;\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiService.html":{"url":"injectables/UiService.html","title":"injectable - UiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/ui/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for determining the hovered object\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                clickedObjectId\n                            \n                            \n                                    Private\n                                clickedObjectId$\n                            \n                            \n                                    Public\n                                detailsOpen\n                            \n                            \n                                    Public\n                                    Readonly\n                                hoveredObjectId\n                            \n                            \n                                    Private\n                                hoveredObjectId$\n                            \n                            \n                                    Public\n                                    Readonly\n                                hoverPosition\n                            \n                            \n                                    Private\n                                hoverPosition$\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hoverObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meshControllerService: MeshControllerService, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/ui/ui.service.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor initializes the raycaster\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        meshControllerService\n                                                  \n                                                        \n                                                                        MeshControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected meshControlerService\n\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected dataService\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hoverObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hoverObject(mousePos: literal type, camera: THREE.Camera)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/ui/ui.service.ts:74\n                \n            \n\n\n            \n                \n                    Deterimines the object where the mouse is hovering over\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mousePos\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmousePosition in the scene\n\n\n                                    \n                                \n                                \n                                    camera\n                                    \n                                            THREE.Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncamera of the scene\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            clickedObjectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.clickedObjectId$.asObservable().pipe(distinctUntilChanged(Uid.equal))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:38\n                            \n                        \n\n                \n                    \n                        Obervable for the ID of the clicked object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clickedObjectId$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:34\n                            \n                        \n\n                \n                    \n                        Behaviour subject for the ID of the clicked object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detailsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:50\n                            \n                        \n\n                \n                    \n                        Trigger for open detail window\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            hoveredObjectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.hoveredObjectId$.asObservable().pipe(distinctUntilChanged(Uid.equal))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:30\n                            \n                        \n\n                \n                    \n                        Observable for the ID of the hovered object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hoveredObjectId$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:26\n                            \n                        \n\n                \n                    \n                        Behaviour subject for the ID of the hovered object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            hoverPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.hoverPosition$.asObservable().pipe(filter(pos => pos !== null), distinctUntilChanged((pos1, pos2) => pos1.x === pos2.x && pos1.y === pos2.y))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:46\n                            \n                        \n\n                \n                    \n                        Observable for the hover position of the client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hoverPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:42\n                            \n                        \n\n                \n                    \n                        Behaviour subject for the hover position of the client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Raycaster\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/ui/ui.service.ts:22\n                            \n                        \n\n                \n                    \n                        Raycaster variable for calculating raycasts\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as THREE from \"three\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { distinctUntilChanged, filter } from \"rxjs/operators\";\nimport { MeshControllerService } from \"@service/mesh-controller/mesh-controller.service\";\nimport { DataService } from \"@service/data/data.service\";\nimport { Uid } from \"src/app/entity/data/uid.class\";\n\n\n/**\n * Service for determining the hovered object\n */\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class UiService {\n\n  /**\n   * Raycaster variable for calculating raycasts\n   */\n  private raycaster: THREE.Raycaster;\n  /**\n   * Behaviour subject for the ID of the hovered object\n   */\n  private hoveredObjectId$: BehaviorSubject = new BehaviorSubject(null);\n  /**\n   * Observable for the ID of the hovered object\n   */\n  public readonly hoveredObjectId: Observable = this.hoveredObjectId$.asObservable().pipe(distinctUntilChanged(Uid.equal));\n  /**\n   * Behaviour subject for the ID of the clicked object\n   */\n  private clickedObjectId$: BehaviorSubject = new BehaviorSubject(null);\n  /**\n   * Obervable for the ID of the clicked object\n   */\n  public readonly clickedObjectId: Observable = this.clickedObjectId$.asObservable().pipe(distinctUntilChanged(Uid.equal));\n  /**\n   * Behaviour subject for the hover position of the client\n   */\n  private hoverPosition$: BehaviorSubject = new BehaviorSubject(null);\n  /**\n   * Observable for the hover position of the client\n   */\n  public readonly hoverPosition: Observable = this.hoverPosition$.asObservable().pipe(filter(pos => pos !== null), distinctUntilChanged((pos1, pos2) => pos1.x === pos2.x && pos1.y === pos2.y));\n  /**\n   * Trigger for open detail window\n   */\n  public detailsOpen:boolean;\n\n  /**\n   * Constructor initializes the raycaster\n   * \n   * @param meshControllerService - injected meshControlerService\n   * @param dataService - injected dataService\n   */\n  constructor(private meshControllerService: MeshControllerService, private dataService: DataService) {\n\n    this.raycaster = new THREE.Raycaster();\n\n  }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n\n  /**\n   * Deterimines the object where the mouse is hovering over\n   * \n   * @param mousePos - mousePosition in the scene\n   * @param camera - camera of the scene\n   */\n  public hoverObject(mousePos: { screenspace: THREE.Vector2, absolute: THREE.Vector2 }, camera: THREE.Camera): void {\n\n    this.hoverPosition$.next({ x: mousePos.absolute.x, y: mousePos.absolute.y });\n    this.raycaster.setFromCamera(mousePos.screenspace, camera);\n    let intersects = this.raycaster.intersectObjects(this.meshControllerService.getHoverGroup().children, true);\n\n    if (intersects.length == 0) {\n      this.hoveredObjectId$.next(null);\n      document.onmousedown = null;\n    } else {\n      var that = this;\n      document.onmousedown = function(){\n\t      that.detailsOpen = true;\n        that.clickedObjectId$.next(intersects[0].object.userData as Uid);     \n      };\n\n      this.hoveredObjectId$.next(intersects[0].object.userData as Uid);\n    }\n    \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Uid.html":{"url":"classes/Uid.html","title":"class - Uid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Uid\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/data/uid.class.ts\n        \n\n            \n                Description\n            \n            \n                Represents a Unique Identifier for an object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                equal\n                            \n                            \n                                    Public\n                                equals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ApiObjectType, id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/entity/data/uid.class.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs a new Uid from a type and an id\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ApiObjectType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe type of the object\n\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe id of the object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/uid.class.ts:16\n                            \n                        \n\n                \n                    \n                        - the id of the object\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiObjectType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/entity/data/uid.class.ts:15\n                            \n                        \n\n                \n                    \n                        - the type of the object\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            equal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    equal(uid1: Uid | null, uid2: Uid | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/uid.class.ts:25\n                \n            \n\n\n            \n                \n                    Checks weather or not to Uids are value equal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid1\n                                    \n                                                Uid | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe first Uid\n\n\n                                    \n                                \n                                \n                                    uid2\n                                    \n                                                Uid | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe second Uid\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \ntrue if the Uids are equal false otherwise\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    equals(uid: Uid)\n                \n            \n\n\n            \n                \n                    Defined in src/app/entity/data/uid.class.ts:39\n                \n            \n\n\n            \n                \n                    Checks if this Uid is equal to a given Uid\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                Uid\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe othe Uid\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \ntrue if this Uid is equal the given Uid, false otherwise\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiObjectType } from \"./api-object-type.enum\";\n\n\n/**\n * Represents a Unique Identifier for an object\n */\nexport class Uid {\n\n    /**\n     * Constructs a new Uid from a type and an id\n     * @param type - the type of the object\n     * @param id - the id of the object\n     */\n    constructor(\n        public readonly type: ApiObjectType,\n        public readonly id: number\n    ) { }\n\n    /**\n     * Checks weather or not to Uids are value equal\n     * @param uid1 - the first Uid\n     * @param uid2 - the second Uid\n     * @returns - true if the Uids are equal false otherwise\n     */\n    public static equal(uid1: Uid | null, uid2: Uid | null) {\n\n        if (uid1 === null || uid2 === null) {\n            return uid2 === null && uid1 === null;\n        }\n        return uid1.type === uid2.type && uid1.id === uid2.id;\n\n    }\n\n    /**\n     * Checks if this Uid is equal to a given Uid\n     * @param uid - the othe Uid\n     * @returns - true if this Uid is equal the given Uid, false otherwise\n     */\n    public equals(uid: Uid) {\n\n        return Uid.equal(this, uid);\n\n    }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Visualizer3dComponent.html":{"url":"components/Visualizer3dComponent.html","title":"component - Visualizer3dComponent","body":"\n                   \n\n\n\n\n\n  Components\n  Visualizer3dComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/visualizer3d/visualizer3d.component.ts\n\n\n    \n        Description\n    \n    \n        Main component custom component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-visualizer3d\n            \n\n            \n                styleUrls\n                ./visualizer3d.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visualizer3d.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Private\n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                    Private\n                                initScene\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:mousemove\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sceneService: SceneService, rootElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/visualizer3d/visualizer3d.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor injects service and elementRef API\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sceneService\n                                                  \n                                                        \n                                                                        SceneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected sceneSevice\n\n\n                                                        \n                                                \n                                                \n                                                        rootElement\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ninjected elementRef\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:mousemove(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/visualizer3d/visualizer3d.component.ts:66\n                \n            \n\n\n            \n                \n                    Sets the mouse position via sceneService on mousemove in the window\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/visualizer3d/visualizer3d.component.ts:89\n                \n            \n\n\n            \n                \n                    Calls the update loop od the sceneService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initScene()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/visualizer3d/visualizer3d.component.ts:79\n                \n            \n\n\n            \n                \n                    Calls scene-setup of the sceneService and adds ligthing\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/visualizer3d/visualizer3d.component.ts:41\n                \n            \n\n\n            \n                \n                    Calls initializing methods for the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onResize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onResize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/visualizer3d/visualizer3d.component.ts:54\n                \n            \n\n\n            \n                \n                    Resizes canvas via sceneService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/visualizer3d/visualizer3d.component.ts:20\n                            \n                        \n\n                \n                    \n                        HTML canvas element of the scene\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/component/visualizer3d/visualizer3d.component.ts:24\n                            \n                        \n\n                \n                    \n                        Observer for resizing window\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, HostListener, ViewChild } from \"@angular/core\";\n\nimport { SceneService } from \"@service/scene/scene.service\";\n\n\n/**\n * Main component custom component of the application\n */\n@Component({\n  selector: \"app-visualizer3d\",\n  templateUrl: \"./visualizer3d.component.html\",\n  styleUrls: [\"./visualizer3d.component.scss\"],\n})\nexport class Visualizer3dComponent implements AfterViewInit {\n\n  /**\n   * HTML canvas element of the scene\n   */\n  @ViewChild(\"canvas\")\n  private canvas: ElementRef;\n  /**\n   * Observer for resizing window\n   */\n  private observer: ResizeObserver;\n\n  /**\n   * Constructor injects service and elementRef API\n   * \n   * @param sceneService - injected sceneSevice\n   * @param rootElement - injected elementRef\n   */\n  constructor(private sceneService: SceneService, private rootElement: ElementRef) { }\n\n  // =======================================================\n  // ================= PUBLIC FUNCTIONS ====================\n  // =======================================================\n\n  /**\n   * Calls initializing methods for the scene\n   */\n  ngAfterViewInit(): void {\n\n    this.initScene();\n    this.animate();\n    this.onResize();\n    this.observer = new ResizeObserver(() => this.onResize());\n    this.observer.observe(this.rootElement.nativeElement);\n\n  }\n\n  /**\n   * Resizes canvas via sceneService\n   */\n  public onResize() {\n    let rect = (this.rootElement.nativeElement as HTMLElement).getBoundingClientRect();\n    this.sceneService.updateSize(rect.width, rect.height, rect.x, rect.y);\n\n  }\n\n  /**\n   * Sets the mouse position via sceneService on mousemove in the window\n   * \n   * @param e - triggered event of mousemove\n   */\n  @HostListener(\"window:mousemove\", [\"$event\"])\n  public onMouseMove(e: { clientX: number; clientY: number; }) {\n\n    this.sceneService.setMousePos(e.clientX, e.clientY);\n\n  }\n\n  // =======================================================\n  // ================= PRIVATE FUNCTIONS ===================\n  // =======================================================\n\n  /**\n   * Calls scene-setup of the sceneService and adds ligthing\n   */\n  private initScene(): void {\n\n    this.sceneService.setupScene(this.canvas.nativeElement, 75, 0.008, 1500, 250, 0, 0);\n    this.sceneService.createAdvancedLighting(1, -200, 138, 200);\n\n  }\n\n  /**\n   * Calls the update loop od the sceneService\n   */\n  private animate(): void {\n\n    this.sceneService.updateScene();\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n       \n            © OpenStreetMap contributors.\n        \n    \n\n\n    \n\n    \n                \n                    ./visualizer3d.component.scss\n                \n                :host{\n    display: block;\n    height: 100%;\n    overflow: hidden;\n}\n\ncanvas{\n    width: 100%;\n    height: 100%;\n}\n\n.map{\n    position: fixed;\n    width: 1024px;\n    height: 512px;\n    visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                       © OpenStreetMap contributors.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailComponent', 'selector': 'app-detail'},{'name': 'HoverComponent', 'selector': 'app-hover'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'Visualizer3dComponent', 'selector': 'app-visualizer3d'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Visualizer3dComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/component/detail/detail.component.ts\n            \n            component\n            DetailComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/component/hover/hover.component.ts\n            \n            component\n            HoverComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/component/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/component/visualizer3d/visualizer3d.component.ts\n            \n            component\n            Visualizer3dComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/entity/data/api-geo-data.class.ts\n            \n            class\n            ApiGeoData\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/entity/data/api-geo-data.class.ts\n            \n            function\n            object2GeoData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/entity/data/api-object.class.ts\n            \n            class\n            ApiObject\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/entity/data/api-response.class.ts\n            \n            class\n            ApiResponse\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/entity/data/api-response.class.ts\n            \n            function\n            object2ApiObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/entity/data/geo-data-provider.interface.ts\n            \n            interface\n            GeoDataProvider\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/entity/data/has-uid.interface.ts\n            \n            interface\n            HasUid\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/entity/data/map-overlay.class.ts\n            \n            class\n            MapOverlay\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/entity/data/meta.class.ts\n            \n            class\n            MetaListing\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/entity/data/meta.class.ts\n            \n            class\n            MetaSingle\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/entity/data/satellite.class.ts\n            \n            class\n            Satellite\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/entity/data/terminal-live-data.class.ts\n            \n            class\n            TerminalLiveData\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/entity/data/terminal.class.ts\n            \n            class\n            Terminal\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/entity/data/uid.class.ts\n            \n            class\n            Uid\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/entity/geo/coordinate.class.ts\n            \n            class\n            Coordinate\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/entity/geo/feature-collection.class.ts\n            \n            class\n            FeatureCollection\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/entity/geo/feature.class.ts\n            \n            class\n            Feature\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/entity/geo/feature.class.ts\n            \n            function\n            object2Geometry\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/entity/geo/geo-data.class.ts\n            \n            class\n            GeoData\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/entity/geo/gometry.class.ts\n            \n            class\n            Geometry\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/entity/geo/multi-polygon.class.ts\n            \n            class\n            MultiPolygon\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/entity/geo/polygon.class.ts\n            \n            class\n            Polygon\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/material/material.module.ts\n            \n            variable\n            MaterialModules\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/service/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/service/basic-object/basic-object.service.ts\n            \n            injectable\n            BasicObjectService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/service/basic-object/basic-object.service.ts\n            \n            variable\n            _FS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/service/basic-object/basic-object.service.ts\n            \n            variable\n            _VS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/service/configuration/config-data.class.ts\n            \n            class\n            ConfigData\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/service/configuration/configuration.service.ts\n            \n            injectable\n            ConfigurationService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/service/control/control.service.ts\n            \n            injectable\n            ControlService\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/service/data/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/light/light.service.ts\n            \n            injectable\n            LightService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/service/mapdata/mapdata.service.ts\n            \n            injectable\n            MapdataService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/service/mesh-controller/mesh-controller.service.ts\n            \n            injectable\n            MeshControllerService\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                src/app/service/object-generator/object-generator.service.ts\n            \n            injectable\n            ObjectGeneratorService\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/service/object-placer/object-placer.service.ts\n            \n            injectable\n            ObjectPlacerService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/service/scene/scene.service.ts\n            \n            injectable\n            SceneService\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/service/scene/scene.service.ts\n            \n            variable\n            DEG_2_RAD\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/service/scene/scene.service.ts\n            \n            variable\n            RAD_2_DEG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/service/texture-loader/texture-loader.service.ts\n            \n            injectable\n            TextureLoaderService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/service/ui/ui.service.ts\n            \n            injectable\n            UiService\n            \n                100 %\n                (11/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.2.7\n        \n            @angular/cdk : ^11.2.12\n        \n            @angular/common : ~11.2.7\n        \n            @angular/compiler : ~11.2.7\n        \n            @angular/core : ~11.2.7\n        \n            @angular/forms : ~11.2.7\n        \n            @angular/material : ^11.2.12\n        \n            @angular/platform-browser : ~11.2.7\n        \n            @angular/platform-browser-dynamic : ~11.2.7\n        \n            @angular/router : ~11.2.7\n        \n            @ng-web-apis/common : ^1.9.0\n        \n            @ng-web-apis/resize-observer : ^1.0.3\n        \n            @types/openlayers : ^4.6.17\n        \n            @types/resize-observer-browser : ^0.1.5\n        \n            @types/three : ^0.127.1\n        \n            camera-controls : ^1.28.3\n        \n            ol : ^6.5.0\n        \n            rxjs : ~6.6.0\n        \n            three : ^0.127.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AggregatedStatus   (src/.../aggregated-status.enum.ts)\n                        \n                        \n                            ApiObjectType   (src/.../api-object-type.enum.ts)\n                        \n                        \n                            ControlKeys   (src/.../control.service.ts)\n                        \n                        \n                            GeoDataType   (src/.../geo-data-type.enum.ts)\n                        \n                        \n                            GeometryType   (src/.../geometry-type.enum.ts)\n                        \n                        \n                            LightType   (src/.../light.service.ts)\n                        \n                        \n                            MapOverlayGroupID   (src/.../map-overlay-group-id.enum.ts)\n                        \n                        \n                            MaterialType   (src/.../basic-object.service.ts)\n                        \n                        \n                            MobilityType   (src/.../mobility-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/entity/data/aggregated-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AggregatedStatus\n                    \n                \n                    \n                        \n                            The different aggregated status types\n\n                        \n                    \n                        \n                            \n                                 Unkown\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n                        \n                            \n                                 Alarm\n                            \n                        \n                        \n                            \n                                Value : alarm\n                            \n                        \n                        \n                            \n                                 Online\n                            \n                        \n                        \n                            \n                                Value : online\n                            \n                        \n                        \n                            \n                                 Offline\n                            \n                        \n                        \n                            \n                                Value : offline\n                            \n                        \n                        \n                            \n                                 Suspended\n                            \n                        \n                        \n                            \n                                Value : suspended\n                            \n                        \n                        \n                            \n                                 Provisioned\n                            \n                        \n                        \n                            \n                                Value : provisioned\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    src/app/entity/data/api-object-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiObjectType\n                    \n                \n                    \n                        \n                            The type of object\n\n                        \n                    \n                        \n                            \n                                 Terminal\n                            \n                        \n                        \n                            \n                                Value : Terminal\n                            \n                        \n                        \n                            \n                                 TerminalLiveData\n                            \n                        \n                        \n                            \n                                Value : TerminalLiveData\n                            \n                        \n                        \n                            \n                                 Satellite\n                            \n                        \n                        \n                            \n                                Value : ScSatellite\n                            \n                        \n                        \n                            \n                                 MapOverlay\n                            \n                        \n                        \n                            \n                                Value : MapOverlay\n                            \n                        \n                        \n                            \n                                 GeoData\n                            \n                        \n                        \n                            \n                                Value : GeoData\n                            \n                        \n            \n        \n\n    src/app/service/control/control.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ControlKeys\n                    \n                \n                    \n                        \n                            Enum for ControlKeys\n\n                        \n                    \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                Value : up\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                Value : down\n                            \n                        \n                        \n                            \n                                 ZOOMIN\n                            \n                        \n                        \n                            \n                                Value : zoomin\n                            \n                        \n                        \n                            \n                                 ZOOMOUT\n                            \n                        \n                        \n                            \n                                Value : zoomout\n                            \n                        \n            \n        \n\n    src/app/entity/geo/geo-data-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GeoDataType\n                    \n                \n                    \n                        \n                            The different types of the GeoData\n\n                        \n                    \n                        \n                            \n                                 FeatureCollection\n                            \n                        \n                        \n                            \n                                Value : FeatureCollection\n                            \n                        \n            \n        \n\n    src/app/entity/geo/geometry-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GeometryType\n                    \n                \n                    \n                        \n                            The different Geometry types\n\n                        \n                    \n                        \n                            \n                                 MultiPolygon\n                            \n                        \n                        \n                            \n                                Value : MultiPolygon\n                            \n                        \n                        \n                            \n                                 Polygon\n                            \n                        \n                        \n                            \n                                Value : Polygon\n                            \n                        \n            \n        \n\n    src/app/service/light/light.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LightType\n                    \n                \n                    \n                        \n                            Enum for different lightTypes\n\n                        \n                    \n                        \n                            \n                                 AMBIENT\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 POINT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 DIRECTIONAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/entity/data/map-overlay-group-id.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MapOverlayGroupID\n                    \n                \n                    \n                        \n                            Enums for Map Overlay Group Ids\n\n                        \n                    \n                        \n                            \n                                 Beam\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 SericeArea\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/app/service/basic-object/basic-object.service.ts\n    \n        \n            \n                \n                    \n                        \n                        MaterialType\n                    \n                \n                    \n                        \n                            Enum for the different material types\n\n                        \n                    \n                        \n                            \n                                 PHONG\n                            \n                        \n                        \n                            \n                                 LAMBERT\n                            \n                        \n                        \n                            \n                                 BASIC\n                            \n                        \n                        \n                            \n                                 SHADER\n                            \n                        \n            \n        \n\n    src/app/entity/data/mobility-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MobilityType\n                    \n                \n                    \n                        \n                            The differen Mobility Types\n\n                        \n                    \n                        \n                            \n                                 Aero\n                            \n                        \n                        \n                            \n                                Value : Aero\n                            \n                        \n                        \n                            \n                                 Fixed\n                            \n                        \n                        \n                            \n                                Value : fixed\n                            \n                        \n                        \n                            \n                                 Maritime\n                            \n                        \n                        \n                            \n                                Value : maritime\n                            \n                        \n                        \n                            \n                                 Vehicle\n                            \n                        \n                        \n                            \n                                Value : vehicle\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            object2ApiObject   (src/.../api-response.class.ts)\n                        \n                        \n                            object2GeoData   (src/.../api-geo-data.class.ts)\n                        \n                        \n                            object2Geometry   (src/.../feature.class.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/entity/data/api-response.class.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            object2ApiObject\n                        \n                        \n                    \n                \n            \n            \n                \nobject2ApiObject(from, isGeoData: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Converts an object to the corresponding subclass of ApiObject\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe object to create the ApiObject from\n\n\n                                    \n                                \n                                \n                                    isGeoData\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nweather or not the response is a Geodate response \n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ApiObject\n\n                    \n                    \n                        \nthe ApiObject representing the object\n\n\n                    \n                \n            \n        \n    \n    src/app/entity/data/api-geo-data.class.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            object2GeoData\n                        \n                        \n                    \n                \n            \n            \n                \nobject2GeoData(from)\n                \n            \n\n\n\n\n            \n                \n                    Converts an object to a GeoData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/entity/geo/feature.class.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            object2Geometry\n                        \n                        \n                    \n                \n            \n            \n                \nobject2Geometry(from)\n                \n            \n\n\n\n\n            \n                \n                    Creates a Geomtery from an object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe object to create the Geometry from\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Geometry\n\n                    \n                    \n                        \nthe Geometry representing the object\n\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nThreeDVisApp\nhttps://3dvis.dev.gs-satconnect.com/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nAppModule -->\n\nDetailComponent->AppModule\n\n\n\n\n\nHoverComponent\n\nHoverComponent\n\nAppModule -->\n\nHoverComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nVisualizer3dComponent\n\nVisualizer3dComponent\n\nAppModule -->\n\nVisualizer3dComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _FS   (src/.../basic-object.service.ts)\n                        \n                        \n                            _VS   (src/.../basic-object.service.ts)\n                        \n                        \n                            DEG_2_RAD   (src/.../scene.service.ts)\n                        \n                        \n                            MaterialModules   (src/.../material.module.ts)\n                        \n                        \n                            RAD_2_DEG   (src/.../scene.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/service/basic-object/basic-object.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _FS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  varying vec3 Normal;\n  varying vec3 Position;\n  varying vec2 VertexUV;\n\n  uniform sampler2D DetailTex;\n  uniform sampler2D BackgroundTex;\n  uniform vec2 Center;\n  uniform float Scale;\n  uniform vec3 LightPosition;\n  uniform vec3 LightIntensity;\n  uniform float Shininess;\n  uniform float AmbientIntensity;\n  uniform vec3 SpecColor;\n\n  vec3 phong() {\n    vec2 relPos = (VertexUV - Center);\n    if(relPos.x > 0.5){\n      relPos.x -= 1.0;\n    }else if(relPos.x  1.0 || relPos.x  1.0 || relPos.y \n                        \n                    \n\n                \n                    \n                        fragment shader - phong shading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _VS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  varying vec3 Normal;\n  varying vec3 Position;\n  varying vec2 VertexUV;\n\n  void main() {\n    VertexUV = uv;\n    Normal = normalize(normalMatrix * normal);\n    Position = vec3(modelViewMatrix * vec4(position, 1.0));\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`\n                        \n                    \n\n                \n                    \n                        vertex shader\n\n                    \n                \n\n            \n        \n\n    src/app/service/scene/scene.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEG_2_RAD\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Math.PI / 180\n                        \n                    \n\n                \n                    \n                        Calculation degree to radians\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RAD_2_DEG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 1 / DEG_2_RAD\n                        \n                    \n\n                \n                    \n                        Calculation radians to degree\n\n                    \n                \n\n            \n        \n\n    src/app/material/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MaterialModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatSidenavModule,\n  MatSlideToggleModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule\n]\n                        \n                    \n\n                \n                    \n                        Module for initializing the angular material UI component library\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
